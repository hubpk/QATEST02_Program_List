       PROCESS APOST.                                                   CBLHDRK1
      ***************************************************************   CBLHDRK1
       IDENTIFICATION DIVISION.                                         CBLHDRK1
     H/TITLE Rtn Crt ALCOR from Global Print file                       CBLHDRK1
     Z* CRTCBLPGM                                                       CBLHDRK1
     Z* OPTION(*SRCDBG) CVTOPT(*DATETIME)                               CBLHDRK1
      *                                                                 CBLHDRK1
     H* SYNOPSIS :                                                      PRTFILK1
     H* - Print report of file contents                                 PRTFILK1
     H* Generated by  : COOL:2E  Version:  1135                         CBLHDRK1
     H* Function type : Print file  Version:   0.1                      CBLHDRK1
      *                                                                 CBLHDRK1
     H* Company    : Vehicle Finance                                    CBLHDRK1
     H* System     : Vehicle Finance                                    CBLHDRK1
     H* User name  : AG00191                                            CBLHDRK1
     H* Date       : 16/05/07 time: 16:42:42                            CBLHDRK1
     H* Copyright  : Vehicle Finance                                    CBLHDRK1
      *                                                                 CBLHDRK1
      *==============================================================   CBLHDRK1
     M* MAINTENANCE   :                                                 CBLHDRK1
      *==============================================================   CBLHDRK1
       PROGRAM-ID.  ACI000110S.                                         CBLHDRK1
       SECURITY.    (C) COPYRIGHT Renault UK Ltd. 2007                  CBLUFNK1
                    Reproduction is not allowed without prior permissionCBLUFNK1
      /EJECT                                                            CBLHDRK1
      ***************************************************************   CBLHDRK1
       ENVIRONMENT DIVISION.                                            CBLHDRK1
       CONFIGURATION SECTION.                                           CBLHDRK1
       SOURCE-COMPUTER.  IBM-AS400.                                     CBLHDRK1
       OBJECT-COMPUTER.  IBM-AS400.                                     CBLHDRK1
       SPECIAL-NAMES.  OPEN-FEEDBACK IS OPEN-FEEDBACK-AREA,             CBLHDRK1
           I-O-FEEDBACK IS I-O-FEEDBACK-AREA.                           CBLHDRK1
      /EJECT                                                            CBLHDRK1
      ***************************************************************   CBLHDRK1
       INPUT-OUTPUT SECTION.                                            CBLHDRK1
       FILE-CONTROL.                                                    CBLHDRK1
      *                                                                 CBLHDRK1
           SELECT ACGBLEXPL2                                            CBLUPDK1
             ASSIGN TO DATABASE-ACGBLEXPL2                              CBLUPDK1
             ORGANIZATION IS INDEXED                                    CBLUPDK1
             ACCESS MODE IS DYNAMIC                                     CBLUPDK1
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY                     CBLUPDK1
             FILE STATUS IS FILE-STATUS.                                CBLUPDK1
      *    RSQ : GlobalExpense interface   Rsq                          CBLUPDK1
      *                                                                 CBLUPDK1
           SELECT ACI000110P                                            CBLUPDK1
             ASSIGN TO FORMATFILE-ACI000110P-SI                         CBLUPDK1
             FILE STATUS IS FILE-STATUS.                                CBLUPDK1
      *    PRT: Rtn Crt ALCOR from Global Print file                    CBLUPDK1
      *                                                                 CBLUPDK1
       I-O-CONTROL.                                                     CBLHDRK1
      *                                                                 CBLHDRK1
      /EJECT                                                            CBLHDRK1
      ***************************************************************   CBLHDRK1
       DATA DIVISION.                                                   CBLHDRK1
       FILE SECTION.                                                    CBLHDRK1
      *                                                                 CBLHDRK1
      *                                                                 CBLUPDK1
       FD  ACI000110P                                                   CBLUPDK1
           LABEL RECORDS ARE STANDARD.                                  CBLUPDK1
       01  ACI000110P-F.                                                CBLUPDK1
           COPY DDS-ALL-FORMATS OF ACI000110P.                          CBLUPDK1
      *                                                                 CBLUPDK1
       FD  ACGBLEXPL2                                                   CBLUPDK1
           LABEL RECORDS ARE STANDARD.                                  CBLUPDK1
       01  ACGBLEXPL2-R.                                                CBLUPDK1
           COPY DDS-ALL-FORMATS OF ACGBLEXPL2.                          CBLUPDK1
      /EJECT                                                            CBLHDRK1
      ***************************************************************   CBLHDRK1
       WORKING-STORAGE SECTION.                                         CBLHDRK1
      *                                                                 CBLHDRK1
      *    Job context                                                  CBLHDRK1
       01  JOB-CONTEXT.                                                 CBLHDRK1
           COPY DDS-ALL-FORMATS OF Y2PGDSPK.                            CBLHDRK1
      *    Job date/time                                                CBLHDRK1
           03  IJBDTTM.                                                 CBLHDRK1
           05  ZZJDT PIC S9(7).                                         CBLHDRK1
           05  ZZJDTE REDEFINES ZZJDT.                                  CBLHDRK1
           07  ZZJCC PIC S9(1).                                         CBLHDRK1
           07  ZZJYY PIC S9(2).                                         CBLHDRK1
           07  ZZJMM PIC S9(2).                                         CBLHDRK1
           07  ZZJDD PIC S9(2).                                         CBLHDRK1
           05  ZZJTM PIC S9(6).                                         CBLHDRK1
           05  ZZJTME REDEFINES ZZJTM.                                  CBLHDRK1
           07  ZZJHH PIC S9(2).                                         CBLHDRK1
           07  ZZJNN PIC S9(2).                                         CBLHDRK1
           07  ZZJSS PIC S9(2).                                         CBLHDRK1
           03  ZZFQL PIC X(21).                                         CBLHDRK1
           03  ZZFLB PIC X(10).                                         CBLHDRK1
           03  ZZFFL PIC X(10).                                         CBLHDRK1
           03  ZZFMB PIC X(10).                                         CBLHDRK1
           03  ZZCDB PIC X(18).                                         CBLHDRK1
           03  ZZLDB PIC X(18).                                         CBLHDRK1
           03  ZZTMS PIC X(26).                                         CBLHDRK1
       01  ZZTIME.                                                      CBLHDRK1
           03  ZZHNS PIC S9(6).                                         CBLHDRK1
           03  ZZHH PIC S9(2).                                          CBLHDRK1
      *                                                                 CBLHDRK1
       77  C-IND-OFF PIC 1(1) VALUE B'0'.                               CBLHDRK1
       77  C-IND-ON PIC 1(1) VALUE B'1'.                                CBLHDRK1
      *                                                                 CBLHDRK1
       01  FILE-STATUS PIC X(2).                                        CBLHDRK1
           88  C-IO-OK VALUE '00'.                                      CBLHDRK1
           88  C-EOF VALUE '10' '46'.                                   CBLHDRK1
           88  C-NO-MOD-SFLRCDS VALUE '12'.                             CBLHDRK1
           88  C-IO-ERR VALUE '21' '22' '24' '30' '34' '90' '91' '92' '9CBLHDRK1
      -     '4' '95' '9A' '9H' '9I' '9K' '9M' '9N' '9P'.                CBLHDRK1
           88  C-NO-RECORD VALUE '23'.                                  CBLHDRK1
           88  C-RECORD-LOCKED VALUE '9D'.                              CBLHDRK1
      *                                                                 CBLHDRK1
       01  UNTIL-CONDITION PIC 1(1).                                    CBLHDRK1
           88  C-UNTIL-FALSE VALUE B'0'.                                CBLHDRK1
           88  C-UNTIL-TRUE VALUE B'1'.                                 CBLHDRK1
      *                                                                 CBLHDRK1
       01  FOREVER PIC 1(1) VALUE B'1'.                                 CBLHDRK1
           88  C-FOREVER VALUE B'1'.                                    CBLHDRK1
      *                                                                 CBLHDRK1
       01  WRK-IO-TRASH-AREA PIC X(1).                                  CBLHDRK1
      *                                                                 CBLHDRK1
       01  W0RTN PIC X(7).                                              CBLHDRK1
       01  W0RSF PIC X(1).                                              CBLHDRK1
       01  W0ENV PIC X(3).                                              CBLHDRK1
       01  W0RTW PIC S9(9) COMP-4.                                      CBLHDRK1
       01  W0ICL PIC X(1).                                              CBLHDRK1
       01  W0PFM PIC X(1).                                              PRTFILK1
       01  W0NEWP PIC X(1).                                             PRTFILK1
       01  YXWRK PIC S9(5) COMP-3.                                      PRTFILK1
       01  YXHDL PIC S9(5) COMP-3.                                      PRTFILK1
       01  W0PGL PIC S9(5) COMP-3.                                      PRTFILK1
       01  W0OFL PIC S9(5) COMP-3.                                      PRTFILK1
      *    U:Object Name                                                CBLCLLK1
       01  WQ0001 PIC X(10).                                            CBLCLLK1
      *    U:Data area value (256)                                      CBLCLLK1
       01  WQ0002 PIC X(256).                                           CBLCLLK1
       01  W0CLPG PIC X(10).                                            CBLCLLK1
       01  W0FSUM PIC S9(3) COMP-3.                                     PRTFILK1
       01  W0DTLN PIC S9(3) COMP-3.                                     PRTFILK1
       01  W0COLN PIC S9(3) COMP-3.                                     PRTFILK1
       01  W0SKP PIC X(1).                                              PRTOBJK1
       01  W0AL1P PIC X(1).                                             PRTOBJK1
       01  W0AP1P PIC X(1).                                             PRTOBJK1
       01  W0AL00 PIC X(1).                                             PRTOBJK1
       01  W0AP00 PIC X(1).                                             PRTOBJK1
       01  W0AL01 PIC X(1).                                             PRTOBJK1
       01  W0AP01 PIC X(1).                                             PRTOBJK1
       01  W0AL02 PIC X(1).                                             PRTOBJK1
       01  W0AP02 PIC X(1).                                             PRTOBJK1
       01  W0AL03 PIC X(1).                                             PRTOBJK1
       01  W0AP03 PIC X(1).                                             PRTOBJK1
       01  W0ACDT PIC X(1).                                             PRTOBJK1
       01  W0APDT PIC X(1).                                             PRTOBJK1
      *                                                                 PRTOBJK1
      *..............................................................   PRTOBJK1
      *    Define Full Externally Described Keylist                     PRTOBJK1
       01  EXTA.                                                        PRTOBJK1
      *    GX Report date                                               PRTOBJK1
           03  J5GXRPTDTE PIC S9(8).                                    PRTOBJK1
      *    GX SAP transaction code                                      PRTOBJK1
           03  J5GXSAPTRN PIC X(2).                                     PRTOBJK1
      *    GX GL code                                                   PRTOBJK1
           03  J5GXGLCDE PIC X(6).                                      PRTOBJK1
      *    GX Dept/Order/Cost Centre                                    PRTOBJK1
           03  J5GXCSTCNT PIC X(12).                                    PRTOBJK1
      *..............................................................   PRTOBJK1
      *    *Synon (5,0) work field                                      SYSCTXK4
       01  YRSW00 PIC S9(5) COMP-3.                                     SYSCTXK4
      *    *Synon (5,0) work field                                      SYSCTXK4
       01  YRSW01 PIC S9(5) COMP-3.                                     SYSCTXK4
      *    *Synon (5,0) work field                                      SYSCTXK4
       01  YRSW02 PIC S9(5) COMP-3.                                     SYSCTXK4
      *    *Synon (5,0) work field                                      SYSCTXK4
       01  YRSW03 PIC S9(5) COMP-3.                                     SYSCTXK4
      *    *Synon (5,0) work field                                      SYSCTXK4
       01  YRSW04 PIC S9(5) COMP-3.                                     SYSCTXK4
       01  YRSW05.                                                      CBLSSTK1
           03  YRSW05X PIC X(1) OCCURS 10000.                           CBLSSTK1
       01  YRSW06.                                                      CBLSSTK1
           03  YRSW06X PIC X(1) OCCURS 10000.                           CBLSSTK1
      *    Outward parameters                                           CBLIDSK1
       01  PARC.                                                        CBLIDSK1
      *    RCD : SAP Interface             Update index                 CBLIDSK1
      *    I : MAP Entite Juridique (UK)                                CBLIDSK1
      *    Entite Juridique (UK)                                        CBLIDSK1
           03  PAALC001 PIC X(4).                                       CBLIDSK1
      *    I : MAP Type Compte (Acc Type)                               CBLIDSK1
      *    Type Compte (Acc Type)                                       CBLIDSK1
           03  PAALC038A PIC X(1).                                      CBLIDSK1
      *    I : MAP Code ETB (Estab Code)                                CBLIDSK1
      *    Code ETB (Estab Code)                                        CBLIDSK1
           03  PAALC600 PIC X(2).                                       CBLIDSK1
      *    I : MAP Compte (Account)                                     CBLIDSK1
      *    Compte (Account)                                             CBLIDSK1
           03  PAALC002K PIC X(6).                                      CBLIDSK1
      *    I : MAP Num Piece (Document No)                              CBLIDSK1
      *    Num Piece (Document No)                                      CBLIDSK1
           03  PAALC003 PIC X(8).                                       CBLIDSK1
      *    I : MAP Nature                                               CBLIDSK1
      *    Nature                                                       CBLIDSK1
           03  PAALC003I PIC X(1).                                      CBLIDSK1
      *    I : MAP Code TVA                                             CBLIDSK1
      *    Code TVA                                                     CBLIDSK1
           03  PAALCTVA PIC X(2).                                       CBLIDSK1
      *    I : MAP Centre Cout (Cost Centre)                            CBLIDSK1
      *    Centre Cout (Cost Centre)                                    CBLIDSK1
           03  PAALC164 PIC X(4).                                       CBLIDSK1
      *    I : MAP Num Ordre (Order Number)                             CBLIDSK1
      *    Num Ordre (Order Number)                                     CBLIDSK1
           03  PAALC030 PIC X(12).                                      CBLIDSK1
      *    I : MAP Type Piece (Journal)                                 CBLIDSK1
      *    Type Piece (Journal)                                         CBLIDSK1
           03  PAALCGRUK PIC X(2).                                      CBLIDSK1
      *    I : MAP Date Comptable (Acc Date)                            CBLIDSK1
      *    Date Comptable (Acc Date)                                    CBLIDSK1
           03  PAALC005 PIC S9(8).                                      CBLIDSK1
      *    I : MAP Periode (Period)                                     CBLIDSK1
      *    Periode (Period)                                             CBLIDSK1
           03  PAALC006 PIC X(6).                                       CBLIDSK1
      *    I : MAP D/C (Debit/Credit)                                   CBLIDSK1
      *    D/C (Debit/Credit)                                           CBLIDSK1
           03  PAALC009 PIC X(1).                                       CBLIDSK1
      *    I : MAP Montant (Amount)                                     CBLIDSK1
      *    Montant (Amount)                                             CBLIDSK1
           03  PAALC031 PIC S9(11)V9(2).                                CBLIDSK1
      *    I : MAP Libelle (Label)                                      CBLIDSK1
      *    Libelle (Label)                                              CBLIDSK1
           03  PAALC196 PIC X(20).                                      CBLIDSK1
      *    I : MAP Date Facture                                         CBLIDSK1
      *    Date Facture                                                 CBLIDSK1
           03  PAALC024 PIC S9(8).                                      CBLIDSK1
      *    I : MAP Code Monnaie (Currency)                              CBLIDSK1
      *    Code Monnaie (Currency)                                      CBLIDSK1
           03  PAALCEUR PIC X(1).                                       CBLIDSK1
      *    I : MAP Code Lettrage                                        CBLIDSK1
      *    Code Lettrage                                                CBLIDSK1
           03  PAALC004 PIC X(3).                                       CBLIDSK1
      *    I : MAP Date Echance                                         CBLIDSK1
      *    Date Echance                                                 CBLIDSK1
           03  PAALCDEC PIC S9(8).                                      CBLIDSK1
      *    I : MAP Filler (18)                                          CBLIDSK1
      *    Filler (18)                                                  CBLIDSK1
           03  PAALCFIL PIC X(18).                                      CBLIDSK1
      *                                                                 CBLIDSK1
      *    GX Report date                                               PRTOBJK1
       01  WZA001 PIC S9(8).                                            PRTOBJK1
      *    GX SAP transaction code                                      PRTOBJK1
       01  WZA002 PIC X(2).                                             PRTOBJK1
      *    GX GL code                                                   PRTOBJK1
       01  WZA003 PIC X(6).                                             PRTOBJK1
      *    GX Dept/Order/Cost Centre                                    PRTOBJK1
       01  WZA004 PIC X(12).                                            PRTOBJK1
       01  W0EOFA PIC 1(1).                                             PRTOBJK1
       01  W0RSL PIC X(1).                                              PRTOBJK1
       01  XDWK1 PIC S9(8) COMP-3.                                      CBLDATK1
       01  XDAY1 PIC S9(6) COMP-3.                                      CBLDATK1
       01  XDWK4 PIC S9(6) COMP-3.                                      CBLDATK1
       01  XDAY2 PIC S9(6) COMP-3.                                      CBLDATK1
       01  XDURR PIC S9(8) COMP-3.                                      CBLDATK1
       01  XDSEL PIC X(1).                                              CBLDATK1
       01  YDOW.                                                        CBLDATK1
           03  YDOE PIC X(1) OCCURS 7.                                  CBLDATK1
       01  XDCDW PIC X(7).                                              CBLDATK1
       01  XDWSL PIC S9(1) COMP-3.                                      CBLDATK1
       01  XDSTP PIC S9(1) COMP-3.                                      CBLDATK1
       01  XDWNB PIC S9(6) COMP-3.                                      CBLDATK1
       01  XDLSW PIC S9(1) COMP-3.                                      CBLDATK1
       01  YY PIC S9(6) COMP-3.                                         CBLDATK1
       01  XDWK3 PIC S9(7)V9(1) COMP-3.                                 CBLDATK1
       01  XDWK2 PIC S9(6) COMP-3.                                      CBLDATK1
       01  XABEG PIC S9(6) COMP-3.                                      CBLDTDK1
       01  XAEND PIC S9(6) COMP-3.                                      CBLDTDK1
       01  ZAPGMQ PIC X(10).                                            CBLUPDK1
       01  ZAPGRL PIC X(5).                                             CBLUPDK1
       01  ZAMSID PIC X(7).                                             CBLUPDK1
       01  ZAMSGF PIC X(10).                                            CBLUPDK1
       01  ZAMSDA PIC X(132).                                           CBLUPDK1
       01  ZAMSTP PIC X(7).                                             CBLUPDK1
       01  ZAFSMS PIC X(1).                                             CBLUPDK1
       01  ACI000110P-I-O-PRTF.                                         CBLUPDK1
           COPY DDS-ALL-FORMATS OF Y2IPRTFIO.                           CBLUPDK1
      *    Printer file I/O feedback area                               CBLUPDK1
      *                                                                 CBLUPDK1
       01  ACI000110P-OPEN.                                             CBLUPDK1
           COPY DDS-ALL-FORMATS OF Y2IOPEN.                             CBLUPDK1
      *    Open feedback area                                           CBLUPDK1
      *                                                                 CBLUPDK1
       01  ACGBLEXPL2-OPEN.                                             CBLUPDK1
           COPY DDS-ALL-FORMATS OF Y2IOPEN.                             CBLUPDK1
      *    Open feedback area                                           CBLUPDK1
      *                                                                 CBLUPDK1
       01  W0OPN PIC X(1).                                              CBLUPDK1
       01  W0PMT PIC X(1).                                              CBLUPDK1
      *    U:Data Area Name                                             ACTCTXK4
       01  WORK-CONTEXT.                                                ACTCTXK4
           03  WUDTAARA PIC X(10).                                      ACTCTXK4
      *    GX GL code                                                   ACTCTXK4
           03  WUGXGLCDE PIC X(6).                                      ACTCTXK4
      *    D/C (Debit/Credit)                                           ACTCTXK4
           03  WUALC009 PIC X(1).                                       ACTCTXK4
      *    U:Blank                                                      ACTCTXK4
           03  WUUBLANK PIC X(1).                                       ACTCTXK4
      *    *Return code                                                 ACTCTXK4
           03  WURTN PIC X(7).                                          ACTCTXK4
      *    U:Text (2)                                                   ACTCTXK4
           03  WUUTXT002 PIC X(2).                                      ACTCTXK4
      *    U:Numeric (yes/no)                                           ACTCTXK4
           03  WUUNUMYN PIC X(1).                                       ACTCTXK4
      *    U:Display yes/no 4                                           ACTCTXK4
           03  WUUDSPYN4 PIC X(1).                                      ACTCTXK4
      *    Centre Cout (Cost Centre)                                    ACTCTXK4
           03  WUALC164 PIC X(4).                                       ACTCTXK4
      *    Num Ordre (Order Number)                                     ACTCTXK4
           03  WUALC030 PIC X(12).                                      ACTCTXK4
      *    U:Display yes/no 5                                           ACTCTXK4
           03  WUUDSPYN5 PIC X(1).                                      ACTCTXK4
      *    Num Piece (Document No)                                      ACTCTXK4
           03  WUALC003 PIC X(8).                                       ACTCTXK4
      *    Periode (Period)                                             ACTCTXK4
           03  WUALC006 PIC X(6).                                       ACTCTXK4
      *    GX Report date                                               ACTCTXK4
           03  YL0001 PIC S9(8).                                        ACTCTXK4
      *    U:Date D8#                                                   ACTCTXK4
           03  WUUDTED8NA PIC S9(8) COMP-3.                             ACTCTXK4
      *    U:Date period CCYYMM                                         ACTCTXK4
           03  YL0002 PIC S9(6) COMP-3.                                 ACTCTXK4
      *    U:Day                                                        ACTCTXK4
           03  WUUDAY PIC S9(2) COMP-3.                                 ACTCTXK4
      *    U:Day b                                                      ACTCTXK4
           03  WUUDAYB PIC S9(2) COMP-3.                                ACTCTXK4
      *    U:Date D8# b                                                 ACTCTXK4
           03  WUUDTED8NB PIC S9(8) COMP-3.                             ACTCTXK4
           03  WUDLN PIC X(10).                                         CBLDATK1
      *    U:Date period CCYYMM                                         ACTCTXK4
           03  WUUDTECYM PIC S9(6) COMP-3.                              ACTCTXK4
      *    U:Day                                                        ACTCTXK4
           03  YL0003 PIC S9(2) COMP-3.                                 ACTCTXK4
      *    U:Day of week                                                ACTCTXK4
           03  WUUDAYOFWK PIC S9(1).                                    ACTCTXK4
      *    U:Number (3.0)                                               ACTCTXK4
           03  YL0004 PIC S9(3) COMP-3.                                 ACTCTXK4
      *    U:Value (15,2) b                                             ACTCTXK4
           03  WUUVL15P2B PIC S9(13)V9(2) COMP-3.                       ACTCTXK4
      *    U:Display yes/no 3                                           ACTCTXK4
           03  WUUDSPYN3 PIC X(1).                                      ACTCTXK4
      *    U:Display yes/no 1                                           ACTCTXK4
           03  WUUDSPYN1 PIC X(1).                                      ACTCTXK4
      *    U:Display yes/no 2                                           ACTCTXK4
           03  WUUDSPYN2 PIC X(1).                                      ACTCTXK4
      *    U:Value (15,2)                                               ACTCTXK4
           03  WUUVL15P2A PIC S9(13)V9(2) COMP-3.                       ACTCTXK4
      /EJECT                                                            CVTDTEK1
       01  IXDEX.                                                       CVTDTEK1
      *    External date                                                CVTDTEK1
           03  XDEXDTS.                                                 CVTDTEK1
           05  XDEY01 PIC S9(4).                                        CVTDTEK1
           05  XDEX12 REDEFINES XDEY01.                                 CVTDTEK1
           07  XDEX01 PIC S9(2).                                        CVTDTEK1
           07  XDEX02 PIC S9(2).                                        CVTDTEK1
           05  XDEY02 PIC S9(4).                                        CVTDTEK1
           05  XDEX34 REDEFINES XDEY02.                                 CVTDTEK1
           07  XDEX03 PIC S9(2).                                        CVTDTEK1
           07  XDEX04 PIC S9(2).                                        CVTDTEK1
           03  XDEX66 REDEFINES XDEXDTS.                                CVTDTEK1
           05  XDEX60 PIC S9(2).                                        CVTDTEK1
           05  XDEX06 PIC S9(6).                                        CVTDTEK1
           03  XDEXDT REDEFINES XDEXDTS PIC S9(8).                      CVTDTEK1
       01  IXDI8T.                                                      CVTDTEK1
      /EJECT                                                            CVTDTEK1
      *    Internal date                                                CVTDTEK1
           03  XDI8DTS.                                                 CVTDTEK1
           05  XDI8CY PIC S9(4).                                        CVTDTEK1
           05  FILLER REDEFINES XDI8CY.                                 CVTDTEK1
           07  XDI8CC PIC S9(1).                                        CVTDTEK1
           07  XDI8YY PIC S9(3).                                        CVTDTEK1
           05  XDI8MM PIC S9(2).                                        CVTDTEK1
           05  XDI8DD PIC S9(2).                                        CVTDTEK1
           03  XDI8DT REDEFINES XDI8DTS PIC S9(8).                      CVTDTEK1
       01  DATA-AREA-NAME PIC X(10).                                    CVTDTEK1
       01  XDDTFM PIC X(3).                                             CVTDTEK1
       01  IXDIN.                                                       CBLDATK1
      /EJECT                                                            CBLDATK1
      *    Internal date                                                CBLDATK1
           03  XDINDTS.                                                 CBLDATK1
           05  XDINYY PIC S9(3).                                        CBLDATK1
           05  XDINMM PIC S9(2).                                        CBLDATK1
           05  XDINDD PIC S9(2).                                        CBLDATK1
           03  XDINDT REDEFINES XDINDTS PIC S9(7).                      CBLDATK1
           03  XDINDTZ REDEFINES XDINDTS.                               CBLDATK1
           05  XDINDI PIC X(1).                                         CBLDATK1
           05  XDIND6 PIC X(6).                                         CBLDATK1
       01  IXD2T.                                                       CBLDATK1
      /EJECT                                                            CBLDATK1
      *    Internal date                                                CBLDATK1
           03  XDINT2S.                                                 CBLDATK1
           05  XDINY2 PIC S9(3).                                        CBLDATK1
           05  XDINM2 PIC S9(2).                                        CBLDATK1
           05  XDIND2 PIC S9(2).                                        CBLDATK1
           03  XDINT2 REDEFINES XDINT2S PIC S9(7).                      CBLDATK1
       01  IXDITS.                                                      CVTDTMK1
      /EJECT                                                            CVTDTMK1
      *    Internal date                                                CVTDTMK1
           03  XDITSM.                                                  CVTDTMK1
           05  XDITSD PIC X(10).                                        CVTDTMK1
           05  XDITSX PIC X(1).                                         CVTDTMK1
           05  XDITST PIC X(8).                                         CVTDTMK1
           05  XDITSZ PIC X(1).                                         CVTDTMK1
           05  XDITSN PIC S9(6).                                        CVTDTMK1
       01  IXDI2T.                                                      CVTDTMK1
      /EJECT                                                            CVTDTMK1
      *    Internal date                                                CVTDTMK1
           03  XDI2DT.                                                  CVTDTMK1
           05  XDI2CY PIC S9(4).                                        CVTDTMK1
           05  FILLER REDEFINES XDI2CY.                                 CVTDTMK1
           07  XDI2CC PIC S9(1).                                        CVTDTMK1
           07  XDI2YY PIC S9(3).                                        CVTDTMK1
           05  XDDLM1 PIC X(1).                                         CVTDTMK1
           05  XDI2MM PIC S9(2).                                        CVTDTMK1
           05  XDDLM2 PIC X(1).                                         CVTDTMK1
           05  XDI2DD PIC S9(2).                                        CVTDTMK1
       01  ACI000110P-WS-O.                                             PRTOBJK1
           03 ZAPAGHDR-WS-O.                                            PRTOBJK1
           COPY DDS-ZAPAGHDR-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZGENDRPT-WS-O.                                            PRTOBJK1
           COPY DDS-ZGENDRPT-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZBKEYHDR-WS-O.                                            PRTOBJK1
           COPY DDS-ZBKEYHDR-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZFKEYTTL-WS-O.                                            PRTOBJK1
           COPY DDS-ZFKEYTTL-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZCKEYHDR-WS-O.                                            PRTOBJK1
           COPY DDS-ZCKEYHDR-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZEKEYTTL-WS-O.                                            PRTOBJK1
           COPY DDS-ZEKEYTTL-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZDDTLRCD-WS-O.                                            PRTOBJK1
           COPY DDS-ZDDTLRCD-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
           03 ZDCOLHDG-WS-O.                                            PRTOBJK1
           COPY DDS-ZDCOLHDG-O OF ACI000110P.                           PRTOBJK1
                 06 FILLER            PIC X(1).                         PRTOBJK1
      *                                                                 CBLHDRK1
      *    Indicators                                                   CBLHDRK1
       01  INDICS.                                                      CBLHDRK1
           03  IND PIC 1(1) OCCURS 99 INDICATOR 1.                      CBLHDRK1
           88  C-INDICATOR-ON VALUE B'1'.                               CBLHDRK1
           88  C-INDICATOR-OFF VALUE B'0'.                              CBLHDRK1
      *                                                                 CBLHDRK1
      /EJECT                                                            DCLPARK1
      ***************************************************************   DCLPARK1
       LINKAGE SECTION.                                                 DCLPARK1
      *    Return code                                                  DCLPARK1
       01  P0RTN PIC X(7).                                              DCLPARK1
      ***************************************************************   CBLHDRK1
       PROCEDURE DIVISION USING                                         CBLHDRK1
             P0RTN                                                      DCLPARK1
           .                                                            DCLPARK1
      ***************************************************************   CBLHDRK1
           CONTINUE.                                                    CBLHDRK1
       MAINLINE SECTION.                                                CBLHDRK1
      *    Initialize                                                   CBLHDRK1
           PERFORM ZZINIT                                               CBLHDRK1
      *                                                                 CBLHDRK1
      *    Rtn Crt ALCOR from Global: Mainline                          PRTOBJK1
           PERFORM A0MAIN                                               PRTOBJK1
      *    Print headers then End of report format                      PRTFILK1
           PERFORM Q0PRNT                                               PRTFILK1
           WRITE ACI000110P-F FROM ZGENDRPT-WS-O                        PRTFILK1
             FORMAT IS 'ZGENDRPT' INDICATORS ARE INDICS                 PRTFILK1
           END-WRITE                                                    PRTFILK1
           ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA FOR        PRTFILK1
             ACI000110P                                                 PRTFILK1
      *    USER: On print of end of report format                       MSGACTK2
      *    *Return code                                                 CBLEXTK1
           MOVE WURTN OF WORK-CONTEXT TO P0RTN                          CBLEXTK1
           PERFORM ZYEXPG                                               CBLEXTK1
      *    Exit program                                                 PRTFILK1
           PERFORM ZXEXPG                                               PRTFILK1
      *--------------------------------------------------------------   PRTFILK1
      /EJECT                                                            PRTOBJK1
       A0MAIN SECTION.                                                  PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Rtn Crt ALCOR from Global                                    PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Initialise Full Externally Described Keylist                 PRTOBJK1
      *    GX Report date                                               PRTOBJK1
           MOVE -99999999 TO J5GXRPTDTE OF EXTA                         PRTOBJK1
      *    GX SAP transaction code                                      PRTOBJK1
           MOVE LOW-VALUES TO J5GXSAPTRN OF EXTA                        PRTOBJK1
      *    GX GL code                                                   PRTOBJK1
           MOVE LOW-VALUES TO J5GXGLCDE OF EXTA                         PRTOBJK1
      *    GX Dept/Order/Cost Centre                                    PRTOBJK1
           MOVE LOW-VALUES TO J5GXCSTCNT OF EXTA                        PRTOBJK1
      *    Establish starting position                                  PRTOBJK1
           MOVE CORRESPONDING                                           PRTOBJK1
             EXTA TO                                                    PRTOBJK1
             ACGBLEXPF2 OF ACGBLEXPL2-R                                 PRTOBJK1
           START ACGBLEXPL2 KEY NOT < EXTERNALLY-DESCRIBED-KEY          PRTOBJK1
             FORMAT IS 'ACGBLEXPF2'                                     PRTOBJK1
           END-START                                                    PRTOBJK1
           IF (C-IO-ERR) THEN                                           PRTOBJK1
               STOP RUN                                                 PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Read next record with user selection                         PRTOBJK1
           PERFORM A3READ                                               PRTOBJK1
           IF (W0EOFA NOT = C-IND-OFF) THEN                             PRTOBJK1
               CONTINUE                                                 PRTOBJK1
           ELSE                                                         PRTOBJK1
      *        Request all headings                                     PRTOBJK1
      *        First page                                               PRTOBJK1
               MOVE 'Y' TO W0AL1P                                       PRTOBJK1
      *        GX Report date                                           PRTOBJK1
               MOVE 'Y' TO W0AL00                                       PRTOBJK1
      *        GX SAP transaction code                                  PRTOBJK1
               MOVE 'Y' TO W0AL01                                       PRTOBJK1
      *        GX GL code                                               PRTOBJK1
               MOVE 'Y' TO W0AL02                                       PRTOBJK1
      *        GX Dept/Order/Cost Centre                                PRTOBJK1
               MOVE 'Y' TO W0AL03                                       PRTOBJK1
      *        Set column headings flag                                 PRTOBJK1
               MOVE 'Y' TO W0ACDT                                       PRTOBJK1
      *        Print report body                                        PRTOBJK1
               PERFORM UNTIL NOT (W0EOFA = C-IND-OFF)                   PRTOBJK1
      *            Prepare heading formats for printing                 PRTOBJK1
                   PERFORM A1PHDR                                       PRTOBJK1
      *            Print report detail line                             PRTOBJK1
                   PERFORM A2PDTL                                       PRTOBJK1
      *            Read next record with user selection                 PRTOBJK1
                   PERFORM A3READ                                       PRTOBJK1
      *            Print totals                                         PRTOBJK1
                   PERFORM A4PTOT                                       PRTOBJK1
               END-PERFORM                                              PRTOBJK1
           END-IF                                                       PRTOBJK1
      *==============================================================   PRTOBJK1
           CONTINUE.                                                    PRTOBJK1
       A0EXIT.                                                          PRTOBJK1
           EXIT.                                                        PRTOBJK1
      /EJECT                                                            PRTOBJK1
       A1PHDR SECTION.                                                  PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Prepare heading formats for printing                         PRTOBJK1
      *==============================================================   PRTOBJK1
           IF (W0AL1P = 'Y') THEN                                       PRTOBJK1
      *        Signal that format is now ready to print                 PRTOBJK1
               MOVE 'Y' TO W0AP1P                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL00 = 'Y') THEN                                       PRTOBJK1
      *        Load key header format                                   PRTOBJK1
      *        GX Report date                                           PRTOBJK1
               MOVE J5GXRPTDTE OF ACGBLEXPF2 TO ZBGXRPTDTE OF           PRTOBJK1
                 ZBKEYHDR-WS-O                                          PRTOBJK1
      *        U:Date D8#                                               PRTOBJK1
               MOVE ZERO TO ZBUDTED8NA OF ZBKEYHDR-WS-O                 PRTOBJK1
      *        Load related totals format                               PRTOBJK1
      *        GX Report date                                           PRTOBJK1
               MOVE J5GXRPTDTE OF ACGBLEXPF2 TO ZFGXRPTDTE OF           PRTOBJK1
                 ZFKEYTTL-WS-O                                          PRTOBJK1
      *        U:Date D8#                                               PRTOBJK1
               MOVE ZERO TO ZFUDTED8NA OF ZFKEYTTL-WS-O                 PRTOBJK1
      *        U:Total Debit (15,2)                                     PRTOBJK1
               MOVE ZERO TO ZFUTOTDBT OF ZFKEYTTL-WS-O                  PRTOBJK1
      *        U:Total Credit (15,2)                                    PRTOBJK1
               MOVE ZERO TO ZFUTOTCRD OF ZFKEYTTL-WS-O                  PRTOBJK1
      *        U:Value (15,2) b                                         PRTOBJK1
               MOVE ZERO TO ZFUVL15P2B OF ZFKEYTTL-WS-O                 PRTOBJK1
      *        Signal that format is now ready to print                 PRTOBJK1
               MOVE 'Y' TO W0AP00                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL01 = 'Y') THEN                                       PRTOBJK1
      *        Load key header format                                   PRTOBJK1
      *        GX SAP transaction code                                  PRTOBJK1
               MOVE J5GXSAPTRN OF ACGBLEXPF2 TO ZCGXSAPTRN OF           PRTOBJK1
                 ZCKEYHDR-WS-O                                          PRTOBJK1
      *        Load related totals format                               PRTOBJK1
      *        GX SAP transaction code                                  PRTOBJK1
               MOVE J5GXSAPTRN OF ACGBLEXPF2 TO ZEGXSAPTRN OF           PRTOBJK1
                 ZEKEYTTL-WS-O                                          PRTOBJK1
      *        U:Total Debit (15,2)                                     PRTOBJK1
               MOVE ZERO TO ZEUTOTDBT OF ZEKEYTTL-WS-O                  PRTOBJK1
      *        U:Total Credit (15,2)                                    PRTOBJK1
               MOVE ZERO TO ZEUTOTCRD OF ZEKEYTTL-WS-O                  PRTOBJK1
      *        U:Value (15,2) b                                         PRTOBJK1
               MOVE ZERO TO ZEUVL15P2B OF ZEKEYTTL-WS-O                 PRTOBJK1
      *        Signal that format is now ready to print                 PRTOBJK1
               MOVE 'Y' TO W0AP01                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL02 = 'Y') THEN                                       PRTOBJK1
      *        Signal that format is now ready to print                 PRTOBJK1
               MOVE 'Y' TO W0AP02                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL03 = 'Y') THEN                                       PRTOBJK1
      *        Signal that format is now ready to print                 PRTOBJK1
               MOVE 'Y' TO W0AP03                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *==============================================================   PRTOBJK1
           CONTINUE.                                                    PRTOBJK1
       A1EXIT.                                                          PRTOBJK1
           EXIT.                                                        PRTOBJK1
      /EJECT                                                            PRTOBJK1
       A2PDTL SECTION.                                                  PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Process detail record                                        PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Load details format                                          PRTOBJK1
      *    GX SAP transaction code                                      PRTOBJK1
           MOVE J5GXSAPTRN OF ACGBLEXPF2 TO ZDGXSAPTRN OF ZDDTLRCD-WS-O PRTOBJK1
      *    GX GL code                                                   PRTOBJK1
           MOVE J5GXGLCDE OF ACGBLEXPF2 TO ZDGXGLCDE OF ZDDTLRCD-WS-O   PRTOBJK1
      *    GX Dept/Order/Cost Centre                                    PRTOBJK1
           MOVE J5GXCSTCNT OF ACGBLEXPF2 TO ZDGXCSTCNT OF ZDDTLRCD-WS-O PRTOBJK1
      *    GX VAT code                                                  PRTOBJK1
           MOVE J5GXVATCDE OF ACGBLEXPF2 TO ZDGXVATCDE OF ZDDTLRCD-WS-O PRTOBJK1
      *    GX Amount                                                    PRTOBJK1
           MOVE J5GXAMT OF ACGBLEXPF2 TO ZDGXAMT OF ZDDTLRCD-WS-O       PRTOBJK1
      *    GX Description                                               PRTOBJK1
           MOVE J5GXDSC OF ACGBLEXPF2 TO ZDGXDSC OF ZDDTLRCD-WS-O       PRTOBJK1
      *    Signal that format is now ready to print                     PRTOBJK1
           MOVE 'Y' TO W0APDT                                           PRTOBJK1
      *    Call print routine                                           PRTOBJK1
           PERFORM Q0PRNT                                               PRTOBJK1
      *                                                                 PRTOBJK1
      *==============================================================   PRTOBJK1
           CONTINUE.                                                    PRTOBJK1
       A2EXIT.                                                          PRTOBJK1
           EXIT.                                                        PRTOBJK1
      /EJECT                                                            PRTOBJK1
       A3READ SECTION.                                                  PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Read next record                                             PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Hold current values                                          PRTOBJK1
           MOVE J5GXRPTDTE OF ACGBLEXPF2 TO WZA001                      PRTOBJK1
           MOVE J5GXSAPTRN OF ACGBLEXPF2 TO WZA002                      PRTOBJK1
           MOVE J5GXGLCDE OF ACGBLEXPF2 TO WZA003                       PRTOBJK1
           MOVE J5GXCSTCNT OF ACGBLEXPF2 TO WZA004                      PRTOBJK1
      *    Read next record                                             PRTOBJK1
           SET C-UNTIL-FALSE TO TRUE                                    PRTOBJK1
           PERFORM UNTIL (C-UNTIL-TRUE)                                 PRTOBJK1
               SET C-INDICATOR-OFF(90) TO TRUE                          PRTOBJK1
               READ ACGBLEXPL2 NEXT                                     PRTOBJK1
                 FORMAT IS 'ACGBLEXPF2'                                 PRTOBJK1
               END-READ                                                 PRTOBJK1
               IF (C-EOF) THEN                                          PRTOBJK1
                   SET C-INDICATOR-ON(90) TO TRUE                       PRTOBJK1
               ELSE                                                     PRTOBJK1
                   IF (C-IO-ERR) THEN                                   PRTOBJK1
                       STOP RUN                                         PRTOBJK1
                   END-IF                                               PRTOBJK1
               END-IF                                                   PRTOBJK1
      *        Transfer error indicator to EOF flag                     PRTOBJK1
               MOVE IND(90) TO W0EOFA                                   PRTOBJK1
      *        Quit if no record read                                   PRTOBJK1
               IF (W0EOFA NOT = C-IND-ON) THEN                          PRTOBJK1
      *            Select record unless user action states otherwise    PRTOBJK1
                   MOVE 'Y' TO W0RSL                                    PRTOBJK1
      *            USER: Record selection processing                    MSGACTK2
      *            Load document number and SAP period                  MSGACTK2
      *            CASE: LCL.GX Report date NE DB1.GX Report date       MSGACTK2
      *            *IF                                                  CBLIFXK1
                   IF (YL0001 OF WORK-CONTEXT NOT = J5GXRPTDTE OF       CBLIFXK1
                     ACGBLEXPF2 OF ACGBLEXPL2-R) THEN                   CBLIFXK1
      *                GX Report date                                   CBLMOVK1
                       MOVE J5GXRPTDTE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO CBLMOVK1
                         YL0001 OF WORK-CONTEXT                         CBLMOVK1
      *                Document number is set report date minus 1 month MSGACTK2
      *                CASE: *OTHERWISE                                 MSGACTK2
      *                * Get day of month                               MSGACTK2
      *                WRK.U:Date D8# = DB1.GX Report date              CVTDTMK1
                       MOVE J5GXRPTDTE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO CVTDTMK1
                         WUUDTED8NA OF WORK-CONTEXT                     CVTDTMK1
      *                U:Date period CCYYMM                             CBLDVRK1
      *                U:Day                                            CBLDVRK1
                       DIVIDE 100 INTO WUUDTED8NA OF WORK-CONTEXT       CBLDVRK1
                         GIVING YL0002 OF WORK-CONTEXT REMAINDER WUUDAY CBLDVRK1
                         OF WORK-CONTEXT                                CBLDVRK1
      *                * Subtract day from date to get back to          MSGACTK2
      *                  previous month                                 MSGACTK2
      *                U:Day b                                          CBLMULK1
                       MULTIPLY WUUDAY OF WORK-CONTEXT BY -1 GIVING     CBLMULK1
                         WUUDAYB OF WORK-CONTEXT                        CBLMULK1
      *                WRK.U:Date D8# b = WRK.U:Date D8# + WRK.U:Day b  CBLDATK1
      *                  *DAYS                                          CBLDATK1
                       SUBTRACT 18000000 FROM WUUDTED8NA OF             CBLDATK1
                         WORK-CONTEXT GIVING XDINDT                     CBLDATK1
                       PERFORM XCVTA                                    CBLDATK1
                       MOVE XDAY1 TO XDAY2                              CBLDATK1
                       MOVE WUUDAYB OF WORK-CONTEXT TO XDURR            CBLDATK1
                       MOVE '1' TO XDSEL                                CBLDATK1
                       MOVE '1111111' TO XDCDW                          CBLDATK1
                       PERFORM XDOWS                                    CBLDATK1
                       PERFORM XDADY                                    CBLDATK1
                       PERFORM XCVFA                                    CBLDATK1
                       IF (XDINDT < 010101 OR                           CBLDATK1
                           XDINDT > 4000000) THEN                       CBLDATK1
                           MOVE ZEROS TO WUUDTED8NB OF WORK-CONTEXT     CBLDATK1
                       ELSE                                             CBLDATK1
                           ADD 18000000 TO XDINDT GIVING WUUDTED8NB OF  CBLDATK1
                             WORK-CONTEXT                               CBLDATK1
                       END-IF                                           CBLDATK1
      *                * Calculate doc. number as previous period       MSGACTK2
      *                U:Date period CCYYMM                             CBLDVRK1
      *                U:Day                                            CBLDVRK1
                       DIVIDE 100 INTO WUUDTED8NB OF WORK-CONTEXT       CBLDVRK1
                         GIVING WUUDTECYM OF WORK-CONTEXT REMAINDER     CBLDVRK1
                         YL0003 OF WORK-CONTEXT                         CBLDVRK1
                       MOVE WUUDTECYM OF WORK-CONTEXT TO WUALC003 OF    CBLCVVK1
                         WORK-CONTEXT                                   CBLCVVK1
      *                Calculate period, depends on run date            MSGACTK2
      *                CASE: *OTHERWISE                                 MSGACTK2
      *                WRK.U:Date D8# = JOB.*System timestamp           CVTDTMK1
                       PERFORM XSTMS                                    CVTDTMK1
                       MOVE ZZTMS OF JOB-CONTEXT TO XDITSM              CVTDTMK1
                       MOVE XDITSD TO XDI2DT                            CVTDTMK1
                       IF (XDI2DT = '0001-01-01') THEN                  CVTDTMK1
                           MOVE ZEROS TO WUUDTED8NA OF WORK-CONTEXT     CVTDTMK1
                       ELSE                                             CVTDTMK1
                           MULTIPLY 10000 BY XDI2CY GIVING WUUDTED8NA   CVTDTMK1
                             OF WORK-CONTEXT                            CVTDTMK1
                           PERFORM XCV8E                                CVTDTMK1
                           ADD XDINDT TO WUUDTED8NA OF WORK-CONTEXT     CVTDTMK1
                       END-IF                                           CVTDTMK1
      *                WRK.U:Day of week = WRK.U:Date D8# *DAY OF WEEK  CBLDTDK1
                       SUBTRACT 18000000 FROM WUUDTED8NA OF             CBLDTDK1
                         WORK-CONTEXT GIVING XDINDT                     CBLDTDK1
                       PERFORM XCVTA                                    CBLDTDK1
                       ADD 3 TO XDAY1 GIVING XDWK1                      CBLDTDK1
                       DIVIDE XDWK1 BY 7 GIVING XDWK4 REMAINDER XDWK1   CBLDTDK1
                       IF (XDWK1 = 0) THEN                              CBLDTDK1
                           MOVE 7 TO XDWK1                              CBLDTDK1
                       END-IF                                           CBLDTDK1
                       SUBTRACT XDWK1 FROM XDAY1 GIVING XDAY2           CBLDTDK1
                       MOVE '1' TO XDSEL                                CBLDTDK1
                       MOVE '1111111' TO XDCDW                          CBLDTDK1
                       PERFORM XDOWS                                    CBLDTDK1
                       MOVE 'NONE' TO WUDLN OF WORK-CONTEXT             CBLDTDK1
                       PERFORM XDUDY                                    CBLDTDK1
                       MOVE XDURR TO WUUDAYOFWK OF WORK-CONTEXT         CBLDTDK1
      *                U:Date period CCYYMM                             CBLDVRK1
      *                U:Day                                            CBLDVRK1
                       DIVIDE 100 INTO WUUDTED8NA OF WORK-CONTEXT       CBLDVRK1
                         GIVING WUUDTECYM OF WORK-CONTEXT REMAINDER     CBLDVRK1
                         WUUDAY OF WORK-CONTEXT                         CBLDVRK1
      *                CASE: 1st working day                            MSGACTK2
      *                - c1 OR (NOTc2 AND c3)                           MSGACTK2
      *                |- c1    : WRK.U:Day is 1                        MSGACTK2
      *                |- c2    : WRK.U:Day is > 3                      MSGACTK2
      *                |- c3    : WRK.U:Day of week is Monday           MSGACTK2
      *                '-                                               MSGACTK2
      *                *IF                                              CBLIFXK1
                       IF (WUUDAY OF WORK-CONTEXT = 1 OR                CBLIFXK1
                           (NOT (WUUDAY OF WORK-CONTEXT > 3) AND        CBLIFXK1
                           WUUDAYOFWK OF WORK-CONTEXT = 1)) THEN        CBLIFXK1
      *                    * Subtract day from date to get back to      MSGACTK2
      *                      previous month                             MSGACTK2
      *                    U:Day                                        CBLMULK1
                           MULTIPLY WUUDAY OF WORK-CONTEXT BY -1 GIVING CBLMULK1
                             WUUDAY OF WORK-CONTEXT                     CBLMULK1
      *                    WRK.U:Date D8# b = WRK.U:Date D8# +          CBLDATK1
      *                      WRK.U:Day *DAYS                            CBLDATK1
                           SUBTRACT 18000000 FROM WUUDTED8NA OF         CBLDATK1
                             WORK-CONTEXT GIVING XDINDT                 CBLDATK1
                           PERFORM XCVTA                                CBLDATK1
                           MOVE XDAY1 TO XDAY2                          CBLDATK1
                           MOVE WUUDAY OF WORK-CONTEXT TO XDURR         CBLDATK1
                           MOVE '1' TO XDSEL                            CBLDATK1
                           MOVE '1111111' TO XDCDW                      CBLDATK1
                           PERFORM XDOWS                                CBLDATK1
                           PERFORM XDADY                                CBLDATK1
                           PERFORM XCVFA                                CBLDATK1
                           IF (XDINDT < 010101 OR                       CBLDATK1
                               XDINDT > 4000000) THEN                   CBLDATK1
                               MOVE ZEROS TO WUUDTED8NB OF WORK-CONTEXT CBLDATK1
                           ELSE                                         CBLDATK1
                               ADD 18000000 TO XDINDT GIVING WUUDTED8NB CBLDATK1
                                 OF WORK-CONTEXT                        CBLDATK1
                           END-IF                                       CBLDATK1
      *                    U:Date period CCYYMM                         CBLDVRK1
      *                    U:Number (3.0)                               CBLDVRK1
                           DIVIDE 100 INTO WUUDTED8NB OF WORK-CONTEXT   CBLDVRK1
                             GIVING WUUDTECYM OF WORK-CONTEXT REMAINDER CBLDVRK1
                             YL0004 OF WORK-CONTEXT                     CBLDVRK1
                       ELSE                                             MSGACTK2
      *                    CASE: *OTHERWISE                             MSGACTK2
      *                    * User current month for period (calculated  MSGACTK2
      *                      above)                                     MSGACTK2
                           CONTINUE                                     MSGACTK2
                       END-IF                                           MSGACTK2
                       MOVE WUUDTECYM OF WORK-CONTEXT TO WUALC006 OF    CBLCVVK1
                         WORK-CONTEXT                                   CBLCVVK1
                   END-IF                                               MSGACTK2
               END-IF                                                   PRTOBJK1
           IF (W0RSL = 'Y' OR                                           PRTOBJK1
               W0EOFA = C-IND-ON)                                       PRTOBJK1
             SET C-UNTIL-TRUE TO TRUE                                   PRTOBJK1
           END-IF                                                       PRTOBJK1
           END-PERFORM                                                  PRTOBJK1
      *                                                                 PRTOBJK1
      *    Reset key level breaks                                       PRTOBJK1
      *    GX Report date                                               PRTOBJK1
           MOVE SPACES TO W0AL00                                        PRTOBJK1
      *    GX SAP transaction code                                      PRTOBJK1
           MOVE SPACES TO W0AL01                                        PRTOBJK1
      *    GX GL code                                                   PRTOBJK1
           MOVE SPACES TO W0AL02                                        PRTOBJK1
      *    GX Dept/Order/Cost Centre                                    PRTOBJK1
           MOVE SPACES TO W0AL03                                        PRTOBJK1
           IF (W0EOFA = C-IND-ON) THEN                                  PRTOBJK1
      *        End of file - Signal all level breaks                    PRTOBJK1
      *        GX Report date                                           PRTOBJK1
               MOVE 'Y' TO W0AL00                                       PRTOBJK1
      *        GX SAP transaction code                                  PRTOBJK1
               MOVE 'Y' TO W0AL01                                       PRTOBJK1
      *        GX GL code                                               PRTOBJK1
               MOVE 'Y' TO W0AL02                                       PRTOBJK1
      *        GX Dept/Order/Cost Centre                                PRTOBJK1
               MOVE 'Y' TO W0AL03                                       PRTOBJK1
           ELSE                                                         PRTOBJK1
      *        Next record - Detect level breaks                        PRTOBJK1
               IF (J5GXRPTDTE OF ACGBLEXPF2 NOT = WZA001) THEN          PRTOBJK1
      *            Set on level break indicator                         PRTOBJK1
                   MOVE 'Y' TO W0AL00                                   PRTOBJK1
               END-IF                                                   PRTOBJK1
               IF (J5GXSAPTRN OF ACGBLEXPF2 NOT = WZA002 OR             PRTOBJK1
                   W0AL00     = 'Y') THEN                               PRTOBJK1
      *            Set on level break indicator                         PRTOBJK1
                   MOVE 'Y' TO W0AL01                                   PRTOBJK1
               END-IF                                                   PRTOBJK1
               IF (J5GXGLCDE OF ACGBLEXPF2 NOT = WZA003 OR              PRTOBJK1
                   W0AL01     = 'Y') THEN                               PRTOBJK1
      *            Set on level break indicator                         PRTOBJK1
                   MOVE 'Y' TO W0AL02                                   PRTOBJK1
               END-IF                                                   PRTOBJK1
               IF (J5GXCSTCNT OF ACGBLEXPF2 NOT = WZA004 OR             PRTOBJK1
                   W0AL02     = 'Y') THEN                               PRTOBJK1
      *            Set on level break indicator                         PRTOBJK1
                   MOVE 'Y' TO W0AL03                                   PRTOBJK1
               END-IF                                                   PRTOBJK1
           END-IF                                                       PRTOBJK1
      *==============================================================   PRTOBJK1
           CONTINUE.                                                    PRTOBJK1
       A3EXIT.                                                          PRTOBJK1
           EXIT.                                                        PRTOBJK1
      /EJECT                                                            PRTOBJK1
       A4PTOT SECTION.                                                  PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Print report Totals                                          PRTOBJK1
      *==============================================================   PRTOBJK1
      *    Print level break totals as required                         PRTOBJK1
           IF (W0AL03 = 'Y') THEN                                       PRTOBJK1
      *        Signal header format is no longer ready                  PRTOBJK1
               MOVE SPACES TO W0AP03                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL02 = 'Y') THEN                                       PRTOBJK1
      *        Signal header format is no longer ready                  PRTOBJK1
               MOVE SPACES TO W0AP02                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL01 = 'Y') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0PFM                                        PRTOBJK1
      *        USER: On print of GX SAP transaction code format         MSGACTK2
      *        U:Total Debit (15,2)                                     CBLADDK1
               ADD ZFUTOTDBT OF ZFKEYTTL-WS-O, ZEUTOTDBT OF             CBLADDK1
                 ZEKEYTTL-WS-O GIVING ZFUTOTDBT OF ZFKEYTTL-WS-O        CBLADDK1
      *        U:Total Credit (15,2)                                    CBLADDK1
               ADD ZFUTOTCRD OF ZFKEYTTL-WS-O, ZEUTOTCRD OF             CBLADDK1
                 ZEKEYTTL-WS-O GIVING ZFUTOTCRD OF ZFKEYTTL-WS-O        CBLADDK1
      *        U:Value (15,2) b                                         CBLADDK1
               ADD WUUVL15P2B OF WORK-CONTEXT, ZEUVL15P2B OF            CBLADDK1
                 ZEKEYTTL-WS-O GIVING WUUVL15P2B OF WORK-CONTEXT        CBLADDK1
      *        Display error total?                                     MSGACTK2
      *        CASE: CUR.U:Value (15,2) b is Not *Zero                  MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (ZEUVL15P2B OF ZEKEYTTL-WS-O NOT = ZEROS) THEN        CBLIFXK1
      *            U:Display yes/no 3                                   CBLMOVK1
                   MOVE 'Y' TO WUUDSPYN3 OF WORK-CONTEXT                CBLMOVK1
               ELSE                                                     MSGACTK2
      *            CASE: *OTHERWISE                                     MSGACTK2
      *            U:Display yes/no 3                                   CBLMOVK1
                   MOVE 'N' TO WUUDSPYN3 OF WORK-CONTEXT                CBLMOVK1
               END-IF                                                   MSGACTK2
      *        Set display debit/credit total                           MSGACTK2
      *        CASE: WRK.D/C (Debit/Credit) is Debit                    MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (WUALC009 OF WORK-CONTEXT = 'D') THEN                 CBLIFXK1
      *            U:Display yes/no 1                                   CBLMOVK1
                   MOVE 'Y' TO WUUDSPYN1 OF WORK-CONTEXT                CBLMOVK1
      *            U:Display yes/no 2                                   CBLMOVK1
                   MOVE 'N' TO WUUDSPYN2 OF WORK-CONTEXT                CBLMOVK1
               ELSE                                                     MSGACTK2
      *            CASE: WRK.D/C (Debit/Credit) is Credit               MSGACTK2
      *            *IF                                                  CBLIFXK1
                   IF (WUALC009 OF WORK-CONTEXT = 'C') THEN             CBLIFXK1
      *                U:Display yes/no 1                               CBLMOVK1
                       MOVE 'N' TO WUUDSPYN1 OF WORK-CONTEXT            CBLMOVK1
      *                U:Display yes/no 2                               CBLMOVK1
                       MOVE 'Y' TO WUUDSPYN2 OF WORK-CONTEXT            CBLMOVK1
                   ELSE                                                 MSGACTK2
      *                CASE: *OTHERWISE                                 MSGACTK2
      *                U:Display yes/no 1                               CBLMOVK1
                       MOVE 'N' TO WUUDSPYN1 OF WORK-CONTEXT            CBLMOVK1
      *                U:Display yes/no 2                               CBLMOVK1
                       MOVE 'N' TO WUUDSPYN2 OF WORK-CONTEXT            CBLMOVK1
      *                U:Display yes/no 3                               CBLMOVK1
                       MOVE 'Y' TO WUUDSPYN3 OF WORK-CONTEXT            CBLMOVK1
                   END-IF                                               MSGACTK2
               END-IF                                                   MSGACTK2
               IF (W0PFM = 'Y') THEN                                    PRTOBJK1
      *            If there is not enough space on the                  PRTOBJK1
      *            physical page for this format:                       PRTOBJK1
                   SUBTRACT YXCLN OF ACI000110P-I-O-PRTF FROM YXPGL OF  PRTOBJK1
                     ACI000110P-OPEN GIVING YXWRK                       PRTOBJK1
                   IF (YXWRK NOT > 5) THEN                              PRTOBJK1
      *                Signal new page required                         PRTOBJK1
                       MOVE 'Y' TO W0NEWP                               PRTOBJK1
      *                Start new page                                   PRTOBJK1
                       PERFORM Q0PRNT                                   PRTOBJK1
                   END-IF                                               PRTOBJK1
      *            Convert fields to external form                      PRTOBJK1
                   SET C-INDICATOR-OFF(79) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUALC009 OF WORK-CONTEXT NOT < 'C' AND           CBLIFXK1
                       WUALC009 OF WORK-CONTEXT NOT > 'D') THEN         CBLIFXK1
                       SET C-INDICATOR-ON(79) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
                   SET C-INDICATOR-OFF(78) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUDSPYN1 OF WORK-CONTEXT = 'N') THEN            CBLIFXK1
                       SET C-INDICATOR-ON(78) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
                   SET C-INDICATOR-OFF(77) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUDSPYN2 OF WORK-CONTEXT = 'N') THEN            CBLIFXK1
                       SET C-INDICATOR-ON(77) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
                   SET C-INDICATOR-OFF(76) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUDSPYN3 OF WORK-CONTEXT = 'N') THEN            CBLIFXK1
                       SET C-INDICATOR-ON(76) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
      *            Print format                                         PRTOBJK1
                   WRITE ACI000110P-F FROM ZEKEYTTL-WS-O                PRTOBJK1
                     FORMAT IS 'ZEKEYTTL' INDICATORS ARE INDICS         PRTOBJK1
                   END-WRITE                                            PRTOBJK1
                   ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA    PRTOBJK1
                     FOR ACI000110P                                     PRTOBJK1
               END-IF                                                   PRTOBJK1
      *        Signal header format is no longer ready                  PRTOBJK1
               MOVE SPACES TO W0AP01                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0AL00 = 'Y') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0PFM                                        PRTOBJK1
      *        USER: On print of GX Report date format                  MSGACTK2
      *        U:Value (15,2)                                           CBLSUBK1
               SUBTRACT ZFUTOTCRD OF ZFKEYTTL-WS-O FROM ZFUTOTDBT OF    CBLSUBK1
                 ZFKEYTTL-WS-O GIVING WUUVL15P2A OF WORK-CONTEXT        CBLSUBK1
      *        Update return code                                       MSGACTK2
      *        CASE:                                                    MSGACTK2
      *        - c1 AND c2                                              MSGACTK2
      *        |- c1    : WRK.U:Value (15,2) is Not *Zero               MSGACTK2
      *        |- c2    : WRK.*Return code is *Normal                   MSGACTK2
      *        '-                                                       MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (WUUVL15P2A OF WORK-CONTEXT NOT = ZEROS AND           CBLIFXK1
                   WURTN OF WORK-CONTEXT = SPACES) THEN                 CBLIFXK1
      *            *Return code                                         CBLMOVK1
                   MOVE 'JSM1239' TO WURTN OF WORK-CONTEXT              CBLMOVK1
               END-IF                                                   MSGACTK2
      *        CUR.U:Date D8# = CUR.GX Report date                      CVTDTMK1
               MOVE ZFGXRPTDTE OF ZFKEYTTL-WS-O TO ZFUDTED8NA OF        CVTDTMK1
                 ZFKEYTTL-WS-O                                          CVTDTMK1
      *        U:Value (15,2) b                                         CBLMOVK1
               MOVE WUUVL15P2B OF WORK-CONTEXT TO ZFUVL15P2B OF         CBLMOVK1
                 ZFKEYTTL-WS-O                                          CBLMOVK1
               IF (W0PFM = 'Y') THEN                                    PRTOBJK1
      *            If there is not enough space on the                  PRTOBJK1
      *            physical page for this format:                       PRTOBJK1
                   SUBTRACT YXCLN OF ACI000110P-I-O-PRTF FROM YXPGL OF  PRTOBJK1
                     ACI000110P-OPEN GIVING YXWRK                       PRTOBJK1
                   IF (YXWRK NOT > 9) THEN                              PRTOBJK1
      *                Signal new page required                         PRTOBJK1
                       MOVE 'Y' TO W0NEWP                               PRTOBJK1
      *                Start new page                                   PRTOBJK1
                       PERFORM Q0PRNT                                   PRTOBJK1
                   END-IF                                               PRTOBJK1
      *            Convert fields to external form                      PRTOBJK1
      *            Convert U:Date D8# to display format                 CVTDTEK1
      *            Convert date                                         CVTDTEK1
                   MOVE ZFUDTED8NA OF ZFKEYTTL-WS-O TO XDI8DT           CVTDTEK1
                   PERFORM XDV84T                                       CVTDTEK1
                   MOVE XDEXDT TO VFUDTED8NA OF ZFKEYTTL-WS-O           CVTDTEK1
                   SET C-INDICATOR-OFF(79) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUVL15P2A OF WORK-CONTEXT = ZEROS) THEN         CBLIFXK1
                       SET C-INDICATOR-ON(79) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
                   SET C-INDICATOR-OFF(78) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUVL15P2B OF WORK-CONTEXT = ZEROS) THEN         CBLIFXK1
                       SET C-INDICATOR-ON(78) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
      *            Print format                                         PRTOBJK1
                   WRITE ACI000110P-F FROM ZFKEYTTL-WS-O                PRTOBJK1
                     FORMAT IS 'ZFKEYTTL' INDICATORS ARE INDICS         PRTOBJK1
                   END-WRITE                                            PRTOBJK1
                   ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA    PRTOBJK1
                     FOR ACI000110P                                     PRTOBJK1
               END-IF                                                   PRTOBJK1
      *        Signal header format is no longer ready                  PRTOBJK1
               MOVE SPACES TO W0AP00                                    PRTOBJK1
      *        USER: Process after print of GX Report date format       MSGACTK2
      *        U:Value (15,2) b                                         CBLMOVK1
               MOVE ZEROS TO WUUVL15P2B OF WORK-CONTEXT                 CBLMOVK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
           IF (W0EOFA = C-IND-ON) THEN                                  PRTOBJK1
               CONTINUE                                                 PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *==============================================================   PRTOBJK1
           CONTINUE.                                                    PRTOBJK1
       A4EXIT.                                                          PRTOBJK1
           EXIT.                                                        PRTOBJK1
      /EJECT                                                            PRTFILK1
       Q0PRNT SECTION.                                                  PRTFILK1
      *==============================================================   PRTFILK1
      *    Print report formats                                         PRTFILK1
      *==============================================================   PRTFILK1
      *    Select formats to print                                      PRTFILK1
           PERFORM Q1FSEL                                               PRTFILK1
      *    Calculate length of formats selected for printing            PRTFILK1
           PERFORM Q2PLEN                                               PRTFILK1
      *    Add column heading length to print length                    PRTFILK1
           ADD W0COLN TO W0FSUM                                         PRTFILK1
           IF (W0NEWP NOT = 'Y') THEN                                   PRTFILK1
      *        Signal overflow if requested headings would cause        PRTFILK1
      *        detail format to start past the overflow line            PRTFILK1
               IF (W0FSUM > W0OFL) THEN                                 PRTFILK1
                   MOVE 'Y' TO W0NEWP                                   PRTFILK1
               ELSE                                                     PRTFILK1
      *            Signal overflow if requested headings would cause    PRTFILK1
      *            Detail format to be printed past end of page         PRTFILK1
                   ADD W0DTLN TO W0FSUM                                 PRTFILK1
                   IF (W0FSUM > W0PGL) THEN                             PRTFILK1
                       MOVE 'Y' TO W0NEWP                               PRTFILK1
                   END-IF                                               PRTFILK1
               END-IF                                                   PRTFILK1
           END-IF                                                       PRTFILK1
      *    Set new page flag if external overflow occured               PRTFILK1
           IF (C-INDICATOR-ON(97)) THEN                                 PRTFILK1
               MOVE 'Y' TO W0NEWP                                       PRTFILK1
           END-IF                                                       PRTFILK1
      *    Print Standard report header of Rtn Crt ALCOR from Global    PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
           IF (W0NEWP = 'Y') THEN                                       PRTOBJK1
               PERFORM Q3PTNP                                           PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *    Print First Page Format of Rtn Crt ALCOR from Global         PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
      *    or if new page & print on new page selected &                PRTOBJK1
      *    active then set print format flag                            PRTOBJK1
           IF (W0AP1P = 'Y' OR                                          PRTOBJK1
               W0NEWP = 'Y' AND                                         PRTOBJK1
               W0AP1P = 'P') THEN                                       PRTOBJK1
      *        Reset format print flag                                  PRTOBJK1
               MOVE SPACES TO W0AP1P                                    PRTOBJK1
      *        Clear first page flag.                                   PRTOBJK1
               MOVE SPACES TO W0AL1P                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Print GX Report date of Rtn Crt ALCOR from Global            PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
      *    or if new page & print on new page selected &                PRTOBJK1
      *    active then set print format flag                            PRTOBJK1
           IF (W0AP00 = 'Y' OR                                          PRTOBJK1
               W0NEWP = 'Y' AND                                         PRTOBJK1
               W0AP00 = 'P') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0PFM                                        PRTOBJK1
      *        USER: On print of GX Report date format                  MSGACTK2
      *        CUR.U:Date D8# = CUR.GX Report date                      CVTDTMK1
               MOVE ZBGXRPTDTE OF ZBKEYHDR-WS-O TO ZBUDTED8NA OF        CVTDTMK1
                 ZBKEYHDR-WS-O                                          CVTDTMK1
               IF (W0PFM = 'Y') THEN                                    PRTOBJK1
      *            Convert fields to external form                      PRTOBJK1
      *            Convert U:Date D8# to display format                 CVTDTEK1
      *            Convert date                                         CVTDTEK1
                   MOVE ZBUDTED8NA OF ZBKEYHDR-WS-O TO XDI8DT           CVTDTEK1
                   PERFORM XDV84T                                       CVTDTEK1
                   MOVE XDEXDT TO VBUDTED8NA OF ZBKEYHDR-WS-O           CVTDTEK1
      *            Print format                                         PRTOBJK1
                   WRITE ACI000110P-F FROM ZBKEYHDR-WS-O                PRTOBJK1
                     FORMAT IS 'ZBKEYHDR' INDICATORS ARE INDICS         PRTOBJK1
                   END-WRITE                                            PRTOBJK1
                   ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA    PRTOBJK1
                     FOR ACI000110P                                     PRTOBJK1
      *            Set column headings flag                             PRTOBJK1
                   MOVE 'Y' TO W0ACDT                                   PRTOBJK1
               END-IF                                                   PRTOBJK1
      *                                                                 PRTOBJK1
      *        Reset format print flag                                  PRTOBJK1
               MOVE 'P' TO W0AP00                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Print GX SAP transaction code of Rtn Crt ALCOR from Global   PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
      *    or if new page & print on new page selected &                PRTOBJK1
      *    active then set print format flag                            PRTOBJK1
           IF (W0AP01 = 'Y' OR                                          PRTOBJK1
               W0NEWP = 'Y' AND                                         PRTOBJK1
               W0AP01 = 'P') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0PFM                                        PRTOBJK1
      *        USER: On print of GX SAP transaction code format         MSGACTK2
      *        Load WRK.D/C (Debit/Credit)                              MSGACTK2
      *        CASE: DB1.GX SAP transaction code is Debit movement      MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (J5GXSAPTRN OF ACGBLEXPF2 OF ACGBLEXPL2-R = '25' OR   CBLIFXK1
                   J5GXSAPTRN OF ACGBLEXPF2 OF ACGBLEXPL2-R = '40') THENCBLIFXK1
      *            D/C (Debit/Credit)                                   CBLMOVK1
                   MOVE 'D' TO WUALC009 OF WORK-CONTEXT                 CBLMOVK1
               ELSE                                                     MSGACTK2
      *            CASE: DB1.GX SAP transaction code is Credit movement MSGACTK2
      *            *IF                                                  CBLIFXK1
                   IF (J5GXSAPTRN OF ACGBLEXPF2 OF ACGBLEXPL2-R = '35'  CBLIFXK1
                     OR                                                 CBLIFXK1
                       J5GXSAPTRN OF ACGBLEXPF2 OF ACGBLEXPL2-R = '50') CBLIFXK1
                     THEN                                               CBLIFXK1
      *                D/C (Debit/Credit)                               CBLMOVK1
                       MOVE 'C' TO WUALC009 OF WORK-CONTEXT             CBLMOVK1
                   ELSE                                                 MSGACTK2
      *                CASE: *OTHERWISE                                 MSGACTK2
      *                D/C (Debit/Credit)                               CBLMOVK1
                       MOVE WUUBLANK OF WORK-CONTEXT TO WUALC009 OF     CBLMOVK1
                         WORK-CONTEXT                                   CBLMOVK1
      *                *Return code                                     CBLMOVK1
                       MOVE SPACES TO WURTN OF WORK-CONTEXT             CBLMOVK1
                       MOVE 'ERROR' TO WURTN OF WORK-CONTEXT            CBLMOVK1
                   END-IF                                               MSGACTK2
               END-IF                                                   MSGACTK2
               IF (W0PFM = 'Y') THEN                                    PRTOBJK1
      *            Print format                                         PRTOBJK1
                   WRITE ACI000110P-F FROM ZCKEYHDR-WS-O                PRTOBJK1
                     FORMAT IS 'ZCKEYHDR' INDICATORS ARE INDICS         PRTOBJK1
                   END-WRITE                                            PRTOBJK1
                   ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA    PRTOBJK1
                     FOR ACI000110P                                     PRTOBJK1
      *            Set column headings flag                             PRTOBJK1
                   MOVE 'Y' TO W0ACDT                                   PRTOBJK1
               END-IF                                                   PRTOBJK1
      *                                                                 PRTOBJK1
      *        Reset format print flag                                  PRTOBJK1
               MOVE SPACES TO W0AP01                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Print GX GL code of Rtn Crt ALCOR from Global                PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
      *    or if new page & print on new page selected &                PRTOBJK1
      *    active then set print format flag                            PRTOBJK1
           IF (W0AP02 = 'Y' OR                                          PRTOBJK1
               W0NEWP = 'Y' AND                                         PRTOBJK1
               W0AP02 = 'P') THEN                                       PRTOBJK1
      *        Reset format print flag                                  PRTOBJK1
               MOVE SPACES TO W0AP02                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Print GX Dept/Order/Cost Centre of Rtn Crt ALCOR from Global PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
      *    or if new page & print on new page selected &                PRTOBJK1
      *    active then set print format flag                            PRTOBJK1
           IF (W0AP03 = 'Y' OR                                          PRTOBJK1
               W0NEWP = 'Y' AND                                         PRTOBJK1
               W0AP03 = 'P') THEN                                       PRTOBJK1
      *        Reset format print flag                                  PRTOBJK1
               MOVE SPACES TO W0AP03                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Print Detail line. of Rtn Crt ALCOR from Global              PRTOBJK1
      *    If new page then set column headings active                  PRTOBJK1
           IF (W0NEWP = 'Y') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0ACDT                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    If it is ready to print, then do so,                         PRTOBJK1
      *    or if new page & print on new page selected &                PRTOBJK1
      *    active then set print format flag                            PRTOBJK1
           IF (W0APDT = 'Y' OR                                          PRTOBJK1
               W0NEWP = 'Y' AND                                         PRTOBJK1
               W0APDT = 'P') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0PFM                                        PRTOBJK1
      *        USER: On print of detail format                          MSGACTK2
      *        U:Text (2)                                               CBLMOVK1
               MOVE J5GXCSTCNT OF ACGBLEXPF2 OF ACGBLEXPL2-R TO         CBLMOVK1
                 WUUTXT002 OF WORK-CONTEXT                              CBLMOVK1
      *        U:Numeric (yes/no)                                       CBLMOVK1
               MOVE 'Y' TO WUUNUMYN OF WORK-CONTEXT                     CBLMOVK1
      *        U:Display yes/no 4                                       CBLMOVK1
               MOVE 'N' TO WUUDSPYN4 OF WORK-CONTEXT                    CBLMOVK1
      *        Load Cost Centre & Order Number                          MSGACTK2
      *        CASE: WRK.U:Text (2) is EU                               MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (WUUTXT002 OF WORK-CONTEXT = 'EU') THEN               CBLIFXK1
                   MOVE 4 TO YRSW04                                     CBLSSTK1
                   MOVE 3 TO YRSW03                                     CBLSSTK1
                   IF (YRSW03 NOT > 0 OR                                CBLSSTK1
                       YRSW04 NOT > 0 OR                                CBLSSTK1
                       YRSW03 > 00012 OR                                CBLSSTK1
                       YRSW04 > 00012) THEN                             CBLSSTK1
                       MOVE 'Y2U0510' TO W0RTN                          CBLSSTK1
                   ELSE                                                 CBLSSTK1
                       MOVE J5GXCSTCNT OF ACGBLEXPF2 OF                 CBLSSTK1
                         ACGBLEXPL2-R(YRSW03:YRSW04) TO WUALC164 OF     CBLSSTK1
                         WORK-CONTEXT                                   CBLSSTK1
                   END-IF                                               CBLSSTK1
      *            Chk text is numeric - #Standard Functions  *         MSGACTK2
               IF  WUALC164 OF WORK-CONTEXT  NUMERIC                    CBLUFNK1
                   MOVE 'Y'            TO WUUNUMYN OF WORK-CONTEXT      CBLUFNK1
               ELSE                                                     CBLUFNK1
                   MOVE 'N'            TO WUUNUMYN OF WORK-CONTEXT      CBLUFNK1
               END-IF                                                   CBLUFNK1
      *.End.of.User.source............................................. CBLUFNK1
      *            Check result of numeric test                         MSGACTK2
      *            CASE: WRK.U:Numeric (yes/no) is No                   MSGACTK2
      *            *IF                                                  CBLIFXK1
                   IF (WUUNUMYN OF WORK-CONTEXT = 'N') THEN             CBLIFXK1
      *                U:Display yes/no 4                               CBLMOVK1
                       MOVE 'Y' TO WUUDSPYN4 OF WORK-CONTEXT            CBLMOVK1
                   END-IF                                               MSGACTK2
      *            Num Ordre (Order Number)                             CBLMOVK1
                   MOVE SPACES TO WUALC030 OF WORK-CONTEXT              CBLMOVK1
               ELSE                                                     MSGACTK2
      *            CASE: *OTHERWISE                                     MSGACTK2
      *            Num Ordre (Order Number)                             CBLMOVK1
                   MOVE J5GXCSTCNT OF ACGBLEXPF2 OF ACGBLEXPL2-R TO     CBLMOVK1
                     WUALC030 OF WORK-CONTEXT                           CBLMOVK1
      *            Centre Cout (Cost Centre)                            CBLMOVK1
                   MOVE SPACES TO WUALC164 OF WORK-CONTEXT              CBLMOVK1
               END-IF                                                   MSGACTK2
      *        Increment totals                                         MSGACTK2
      *        CASE: Amount > zero & cost centre numeric                MSGACTK2
      *        - c1 AND c2                                              MSGACTK2
      *        |- c1    : CUR.GX Amount is >= *ZERO                     MSGACTK2
      *        |- c2    : WRK.U:Numeric (yes/no) is Yes                 MSGACTK2
      *        '-                                                       MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (ZDGXAMT OF ZDDTLRCD-WS-O NOT < ZEROS AND             CBLIFXK1
                   WUUNUMYN OF WORK-CONTEXT = 'Y') THEN                 CBLIFXK1
      *            CASE: WRK.D/C (Debit/Credit) is Credit               MSGACTK2
      *            *IF                                                  CBLIFXK1
                   IF (WUALC009 OF WORK-CONTEXT = 'C') THEN             CBLIFXK1
      *                U:Total Credit (15,2)                            CBLADDK1
                       ADD ZEUTOTCRD OF ZEKEYTTL-WS-O, J5GXAMT OF       CBLADDK1
                         ACGBLEXPF2 OF ACGBLEXPL2-R GIVING ZEUTOTCRD OF CBLADDK1
                         ZEKEYTTL-WS-O                                  CBLADDK1
                   ELSE                                                 MSGACTK2
      *                CASE: WRK.D/C (Debit/Credit) is Debit            MSGACTK2
      *                *IF                                              CBLIFXK1
                       IF (WUALC009 OF WORK-CONTEXT = 'D') THEN         CBLIFXK1
      *                    U:Total Debit (15,2)                         CBLADDK1
                           ADD ZEUTOTDBT OF ZEKEYTTL-WS-O, J5GXAMT OF   CBLADDK1
                             ACGBLEXPF2 OF ACGBLEXPL2-R GIVING          CBLADDK1
                             ZEUTOTDBT OF ZEKEYTTL-WS-O                 CBLADDK1
                       ELSE                                             MSGACTK2
      *                    CASE: *OTHERWISE                             MSGACTK2
      *                    U:Value (15,2) b                             CBLADDK1
                           ADD ZEUVL15P2B OF ZEKEYTTL-WS-O, J5GXAMT OF  CBLADDK1
                             ACGBLEXPF2 OF ACGBLEXPL2-R GIVING          CBLADDK1
                             ZEUVL15P2B OF ZEKEYTTL-WS-O                CBLADDK1
                       END-IF                                           MSGACTK2
                   END-IF                                               MSGACTK2
               ELSE                                                     MSGACTK2
      *            CASE: *OTHERWISE                                     MSGACTK2
      *            U:Value (15,2) b                                     CBLADDK1
                   ADD ZEUVL15P2B OF ZEKEYTTL-WS-O, ZDGXAMT OF          CBLADDK1
                     ZDDTLRCD-WS-O GIVING ZEUVL15P2B OF ZEKEYTTL-WS-O   CBLADDK1
      *            *Return code                                         CBLMOVK1
                   MOVE SPACES TO WURTN OF WORK-CONTEXT                 CBLMOVK1
                   MOVE 'ERROR' TO WURTN OF WORK-CONTEXT                CBLMOVK1
               END-IF                                                   MSGACTK2
      *        Load account number and description                      MSGACTK2
      *        CASE: *OTHERWISE                                         MSGACTK2
      *        Chk text is numeric - #Standard Functions  *             MSGACTK2
               IF  J5GXGLCDE OF ACGBLEXPF2 OF ACGBLEXPL2-R  NUMERIC     CBLUFNK1
                   MOVE 'Y'            TO WUUNUMYN OF WORK-CONTEXT      CBLUFNK1
               ELSE                                                     CBLUFNK1
                   MOVE 'N'            TO WUUNUMYN OF WORK-CONTEXT      CBLUFNK1
               END-IF                                                   CBLUFNK1
      *.End.of.User.source............................................. CBLUFNK1
      *        CASE: WRK.U:Numeric (yes/no) is Yes                      MSGACTK2
      *        *IF                                                      CBLIFXK1
               IF (WUUNUMYN OF WORK-CONTEXT = 'Y') THEN                 CBLIFXK1
      *            U:Display yes/no 5                                   CBLMOVK1
                   MOVE 'N' TO WUUDSPYN5 OF WORK-CONTEXT                CBLMOVK1
               ELSE                                                     MSGACTK2
      *            CASE: *OTHERWISE                                     MSGACTK2
      *            U:Display yes/no 5                                   CBLMOVK1
                   MOVE 'Y' TO WUUDSPYN5 OF WORK-CONTEXT                CBLMOVK1
      *            GX Description                                       CBLMOVK1
                   MOVE SPACES TO ZDGXDSC OF ZDDTLRCD-WS-O              CBLMOVK1
                   MOVE J5GXGLCDE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO      CBLMOVK1
                     ZDGXDSC OF ZDDTLRCD-WS-O                           CBLMOVK1
      *            GX GL code                                           CBLMOVK1
                   MOVE WUGXGLCDE OF WORK-CONTEXT TO ZDGXGLCDE OF       CBLMOVK1
                     ZDDTLRCD-WS-O                                      CBLMOVK1
               END-IF                                                   MSGACTK2
      *        Exc Write SAP Phy record - SAP Interface  *              MSGACTK2
               INITIALIZE PARC                                          CBLCLLK1
               MOVE '0304' TO PAALC001                                  CBLCLLK1
               MOVE '0' TO PAALC038A                                    CBLCLLK1
               MOVE '01' TO PAALC600                                    CBLCLLK1
               MOVE ZDGXGLCDE OF ZDDTLRCD-WS-O TO PAALC002K             CBLCLLK1
               MOVE WUALC003 OF WORK-CONTEXT TO PAALC003                CBLCLLK1
               MOVE '0' TO PAALC003I                                    CBLCLLK1
               MOVE J5GXVATCDE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO PAALCTVACBLCLLK1
               MOVE WUALC164 OF WORK-CONTEXT TO PAALC164                CBLCLLK1
               MOVE WUALC030 OF WORK-CONTEXT TO PAALC030                CBLCLLK1
               MOVE 'SA' TO PAALCGRUK                                   CBLCLLK1
               ADD J5GXRPTDTE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO PAALC005 CBLCLLK1
               MOVE WUALC006 OF WORK-CONTEXT TO PAALC006                CBLCLLK1
               MOVE WUALC009 OF WORK-CONTEXT TO PAALC009                CBLCLLK1
               ADD J5GXAMT OF ACGBLEXPF2 OF ACGBLEXPL2-R TO PAALC031    CBLCLLK1
               MOVE ZDGXDSC OF ZDDTLRCD-WS-O TO PAALC196                CBLCLLK1
               ADD J5GXRPTDTE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO PAALC024 CBLCLLK1
               MOVE SPACES TO PAALCEUR                                  CBLCLLK1
               MOVE SPACES TO PAALC004                                  CBLCLLK1
               ADD J5GXRPTDTE OF ACGBLEXPF2 OF ACGBLEXPL2-R TO PAALCDEC CBLCLLK1
               MOVE SPACES TO PAALCFIL                                  CBLCLLK1
      *                                                                 CBLCLLK1
               SET C-INDICATOR-OFF(90) TO TRUE                          CBLCLLK1
      *                                                                 CBLCLLK1
               CALL 'JSASAPPHYS' USING                                  CBLCLLK1
      *        Return code                                              CBLCLLK1
                 W0RTN                                                  CBLCLLK1
      *        RCD : SAP Interface                                      CBLCLLK1
                 PARC                                                   CBLCLLK1
                        ON OVERFLOW                                     CBLCLLK1
                        SET C-INDICATOR-ON(90) TO TRUE                  CBLCLLK1
               END-CALL                                                 CBLCLLK1
      *                                                                 CBLCLLK1
      *                                                                 CBLCLLK1
      *        Error on program call will terminate run unit            CBLCLLK1
               IF (C-INDICATOR-ON(90)) THEN                             CBLCLLK1
                   MOVE 'Y2U0032' TO W0RTN                              CBLCLLK1
                   MOVE 'JSASAPPHYS' TO W0CLPG                          CBLCLLK1
      *            Send message '*Error occured on CALL...'             SNDMSGK1
      *            Message ID                                           SNDMSGK1
                   MOVE 'Y2U0032' TO ZAMSID                             SNDMSGK1
      *            Message file                                         SNDMSGK1
                   MOVE 'Y2USRMSG' TO ZAMSGF                            SNDMSGK1
      *            Message data                                         SNDMSGK1
                   MOVE W0CLPG TO ZAMSDA                                SNDMSGK1
                   PERFORM ZASNMS                                       SNDMSGK1
               END-IF                                                   CBLCLLK1
      *        Error detected?                                          CBLCLLK1
               IF (W0RTN        NOT = SPACES) THEN                      CBLCLLK1
                   SET C-INDICATOR-ON(99) TO TRUE                       CBLCLLK1
               END-IF                                                   CBLCLLK1
               IF (W0PFM = 'Y') THEN                                    PRTOBJK1
      *            Convert fields to external form                      PRTOBJK1
                   SET C-INDICATOR-OFF(79) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (ZDGXAMT OF ZDDTLRCD-WS-O NOT < ZEROS) THEN       CBLIFXK1
                       SET C-INDICATOR-ON(79) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
                   SET C-INDICATOR-OFF(78) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUDSPYN4 OF WORK-CONTEXT = 'N') THEN            CBLIFXK1
                       SET C-INDICATOR-ON(78) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
                   SET C-INDICATOR-OFF(77) TO TRUE                      SCRCNDK1
      *            *IF                                                  CBLIFXK1
                   IF (WUUDSPYN5 OF WORK-CONTEXT = 'N') THEN            CBLIFXK1
                       SET C-INDICATOR-ON(77) TO TRUE                   SCRCNDK1
                   END-IF                                               SCRCNDK1
      *            Print column headings if required                    PRTOBJK1
                   IF (W0ACDT = 'Y') THEN                               PRTOBJK1
                       WRITE ACI000110P-F FROM ZDCOLHDG-WS-O            PRTOBJK1
                         FORMAT IS 'ZDCOLHDG' INDICATORS ARE INDICS     PRTOBJK1
                       END-WRITE                                        PRTOBJK1
                       ACCEPT ACI000110P-I-O-PRTF FROM                  PRTOBJK1
                         I-O-FEEDBACK-AREA FOR ACI000110P               PRTOBJK1
      *                Clear column headings control flag               PRTOBJK1
                       MOVE SPACES TO W0ACDT                            PRTOBJK1
                   END-IF                                               PRTOBJK1
      *            Print format                                         PRTOBJK1
                   WRITE ACI000110P-F FROM ZDDTLRCD-WS-O                PRTOBJK1
                     FORMAT IS 'ZDDTLRCD' INDICATORS ARE INDICS         PRTOBJK1
                   END-WRITE                                            PRTOBJK1
                   ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA    PRTOBJK1
                     FOR ACI000110P                                     PRTOBJK1
               END-IF                                                   PRTOBJK1
      *                                                                 PRTOBJK1
      *        Reset format print flag                                  PRTOBJK1
               MOVE SPACES TO W0APDT                                    PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Clear new page flag                                          PRTFILK1
           MOVE SPACES TO W0NEWP                                        PRTFILK1
      *==============================================================   PRTFILK1
           CONTINUE.                                                    PRTFILK1
       Q0EXIT.                                                          PRTFILK1
           EXIT.                                                        PRTFILK1
      /EJECT                                                            PRTFILK1
       Q1FSEL SECTION.                                                  PRTFILK1
      *==============================================================   PRTFILK1
      *    Format select                                                PRTFILK1
      *==============================================================   PRTFILK1
           MOVE SPACES TO W0SKP                                         PRTOBJK1
      *    Cascade skip to new page requests upwards                    PRTOBJK1
           IF (W0AP00 = 'Y') THEN                                       PRTOBJK1
               MOVE 'Y' TO W0SKP                                        PRTOBJK1
           END-IF                                                       PRTOBJK1
      *    Request new page if required                                 PRTOBJK1
           IF (W0SKP = 'Y') THEN                                        PRTOBJK1
               MOVE 'Y' TO W0NEWP                                       PRTOBJK1
           END-IF                                                       PRTOBJK1
      *==============================================================   PRTFILK1
           CONTINUE.                                                    PRTFILK1
       Q1EXIT.                                                          PRTFILK1
           EXIT.                                                        PRTFILK1
      /EJECT                                                            PRTFILK1
       Q2PLEN SECTION.                                                  PRTFILK1
      *==============================================================   PRTFILK1
      *    Evaluate print length                                        PRTFILK1
      *==============================================================   PRTFILK1
           MOVE YXCLN OF ACI000110P-I-O-PRTF TO W0FSUM                  PRTFILK1
           MOVE ZERO TO W0DTLN                                          PRTFILK1
           MOVE ZERO TO W0COLN                                          PRTFILK1
      *    * First Page Format of Rtn Crt ALCOR from Global             PRTOBJK1
           IF (W0AP1P = 'Y') THEN                                       PRTOBJK1
               ADD 0 TO W0FSUM                                          PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *    * GX Report date of Rtn Crt ALCOR from Global                PRTOBJK1
           IF (W0AP00 = 'Y') THEN                                       PRTOBJK1
               ADD 3 TO W0FSUM                                          PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *    * GX SAP transaction code of Rtn Crt ALCOR from Global       PRTOBJK1
           IF (W0AP01 = 'Y') THEN                                       PRTOBJK1
               ADD 2 TO W0FSUM                                          PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *    * GX GL code of Rtn Crt ALCOR from Global                    PRTOBJK1
           IF (W0AP02 = 'Y') THEN                                       PRTOBJK1
               ADD 0 TO W0FSUM                                          PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *    * GX Dept/Order/Cost Centre of Rtn Crt ALCOR from Global     PRTOBJK1
           IF (W0AP03 = 'Y') THEN                                       PRTOBJK1
               ADD 0 TO W0FSUM                                          PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *    Detail line. OF Rtn Crt ALCOR from Global                    PRTOBJK1
           IF (W0APDT = 'Y') THEN                                       PRTOBJK1
               MOVE 4 TO W0DTLN                                         PRTOBJK1
               IF (W0ACDT = 'Y') THEN                                   PRTOBJK1
                   MOVE 3 TO W0COLN                                     PRTOBJK1
               END-IF                                                   PRTOBJK1
           END-IF                                                       PRTOBJK1
      *                                                                 PRTOBJK1
      *==============================================================   PRTFILK1
           CONTINUE.                                                    PRTFILK1
       Q2EXIT.                                                          PRTFILK1
           EXIT.                                                        PRTFILK1
      /EJECT                                                            PRTFILK1
       Q3PTNP SECTION.                                                  PRTFILK1
      *==============================================================   PRTFILK1
      *    Print report formats                                         PRTFILK1
      *==============================================================   PRTFILK1
      *    Print format                                                 PRTFILK1
           WRITE ACI000110P-F FROM ZAPAGHDR-WS-O                        PRTFILK1
             FORMAT IS 'ZAPAGHDR' INDICATORS ARE INDICS                 PRTFILK1
           END-WRITE                                                    PRTFILK1
           ACCEPT ACI000110P-I-O-PRTF FROM I-O-FEEDBACK-AREA FOR        PRTFILK1
             ACI000110P                                                 PRTFILK1
      *    Clear page overflow indicator                                PRTFILK1
           SET C-INDICATOR-OFF(97) TO TRUE                              PRTFILK1
      *==============================================================   PRTFILK1
           CONTINUE.                                                    PRTFILK1
       Q3EXIT.                                                          PRTFILK1
           EXIT.                                                        PRTFILK1
      /EJECT                                                            CBLDATK1
       XCVFA  SECTION.                                                  CBLDATK1
      *==============================================================   CBLDATK1
      *    Convert absolute day to date                                 CBLDATK1
      *==============================================================   CBLDATK1
           IF (XDAY1 > 109267) THEN                                     CBLDATK1
               ADD 2 TO XDAY1                                           CBLDATK1
           ELSE                                                         CBLDATK1
               IF (XDAY1 > 36218) THEN                                  CBLDATK1
                   ADD 1 TO XDAY1                                       CBLDATK1
               END-IF                                                   CBLDATK1
           END-IF                                                       CBLDATK1
      *    Full years (up to the date)                                  CBLDATK1
           DIVIDE XDAY1 BY 365.25 GIVING XDWK1 REMAINDER XDWK3          CBLDATK1
           MOVE XDWK1 TO XDINYY                                         CBLDATK1
           IF (XDWK3 = 0) THEN                                          CBLDATK1
      *        The date is the end of a year                            CBLDATK1
               MOVE 12 TO XDINMM                                        CBLDATK1
               MOVE 31 TO XDINDD                                        CBLDATK1
           ELSE                                                         CBLDATK1
      *        Year days up to the date                                 CBLDATK1
               MULTIPLY XDWK1 BY 365.25 GIVING XDWK2                    CBLDATK1
               SUBTRACT XDWK2 FROM XDAY1                                CBLDATK1
               ADD 1 TO XDINYY                                          CBLDATK1
      *        Leap year ?                                              CBLDATK1
               DIVIDE XDINYY BY 4 GIVING XDWK4 REMAINDER XDWK1          CBLDATK1
      *        March 1 (relative day of the year)                       CBLDATK1
               IF (XDWK1 = 0) THEN                                      CBLDATK1
                   MOVE 60 TO XDWK1                                     CBLDATK1
               ELSE                                                     CBLDATK1
                   MOVE 59 TO XDWK1                                     CBLDATK1
               END-IF                                                   CBLDATK1
      *        Define date base month and offset day -                  CBLDATK1
               IF (XDAY1 NOT > XDWK1) THEN                              CBLDATK1
      *            - January (thru February)                            CBLDATK1
                   MOVE 1 TO XDINMM                                     CBLDATK1
               ELSE                                                     CBLDATK1
                   SUBTRACT XDWK1 FROM XDAY1                            CBLDATK1
                   IF (XDAY1 NOT > 153) THEN                            CBLDATK1
      *                - March (thru July)                              CBLDATK1
                       MOVE 3 TO XDINMM                                 CBLDATK1
                   ELSE                                                 CBLDATK1
      *                - August (thru December)                         CBLDATK1
                       MOVE 8 TO XDINMM                                 CBLDATK1
                       SUBTRACT 153 FROM XDAY1                          CBLDATK1
                   END-IF                                               CBLDATK1
      *            Calculate 2 month base and offset day                CBLDATK1
                   SUBTRACT 1 FROM XDAY1 GIVING XDWK1                   CBLDATK1
                   DIVIDE XDWK1 BY 61 GIVING XDWK1 REMAINDER XDAY1      CBLDATK1
                   ADD 1 TO XDAY1                                       CBLDATK1
                   MULTIPLY 2 BY XDWK1                                  CBLDATK1
                   ADD XDWK1 TO XDINMM                                  CBLDATK1
               END-IF                                                   CBLDATK1
      *        Calculate date increment,                                CBLDATK1
               IF (XDAY1 > 31) THEN                                     CBLDATK1
                   ADD 1 TO XDINMM                                      CBLDATK1
                   SUBTRACT 31 FROM XDAY1                               CBLDATK1
               END-IF                                                   CBLDATK1
               MOVE XDAY1 TO XDINDD                                     CBLDATK1
           END-IF                                                       CBLDATK1
      *==============================================================   CBLDATK1
           CONTINUE.                                                    CBLDATK1
       XCVFAE.                                                          CBLDATK1
           EXIT.                                                        CBLDATK1
      /EJECT                                                            CBLDATK1
       XCVTA  SECTION.                                                  CBLDATK1
      *==============================================================   CBLDATK1
      *    Convert date to absolute day (from 01/01/01)                 CBLDATK1
      *==============================================================   CBLDATK1
      *    Absolute day =                                               CBLDATK1
      *    365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones)   CBLDATK1
      *      ...                                                        CBLDATK1
           SUBTRACT 1 FROM XDINYY GIVING XDWK1                          CBLDATK1
           MULTIPLY XDWK1 BY 365.25 GIVING XDAY1                        CBLDATK1
           IF (XDWK1 NOT < 300) THEN                                    CBLDATK1
               SUBTRACT 2 FROM XDAY1                                    CBLDATK1
           ELSE                                                         CBLDATK1
               IF (XDWK1 NOT < 100) THEN                                CBLDATK1
                   SUBTRACT 1 FROM XDAY1                                CBLDATK1
               END-IF                                                   CBLDATK1
           END-IF                                                       CBLDATK1
      *    (from the beginning of the year to the beginning of the      CBLDATK1
      *      month:)                                                    CBLDATK1
           SUBTRACT 1 FROM XDINMM GIVING XDWK1                          CBLDATK1
           IF (XDINMM < 3) THEN                                         CBLDATK1
      *        ...+31*(MM-1) (for January-February) ...                 CBLDATK1
               MULTIPLY 31 BY XDWK1                                     CBLDATK1
               ADD XDWK1 TO XDAY1                                       CBLDATK1
           ELSE                                                         CBLDATK1
      *        ...+30*(MM-1) (for March-December) ...                   CBLDATK1
               MULTIPLY 30 BY XDWK1                                     CBLDATK1
               ADD XDWK1 TO XDAY1                                       CBLDATK1
      *        ...-2 (for preceding February) ...                       CBLDATK1
               SUBTRACT 2 FROM XDAY1                                    CBLDATK1
               IF (XDINYY NOT = 300 AND                                 CBLDATK1
                   XDINYY NOT = 100) THEN                               CBLDATK1
      *            ...+1 (for preceding February, if leap year) ...     CBLDATK1
                   DIVIDE XDINYY BY 4 GIVING XDWK4 REMAINDER XDWK1      CBLDATK1
                   IF (XDWK1 = 0) THEN                                  CBLDATK1
                       ADD 1 TO XDAY1                                   CBLDATK1
                   END-IF                                               CBLDATK1
               END-IF                                                   CBLDATK1
               IF (XDINMM < 8) THEN                                     CBLDATK1
      *            ...+MM/2 (preceding 31-sts for March-July) ...       CBLDATK1
                   MULTIPLY XDINMM BY .5 GIVING XDWK1                   CBLDATK1
                   ADD XDWK1 TO XDAY1                                   CBLDATK1
               ELSE                                                     CBLDATK1
      *            ...+(MM+1)/2 (same for August-December) ...          CBLDATK1
                   ADD 1 TO XDINMM GIVING XDWK1                         CBLDATK1
                   MULTIPLY .5 BY XDWK1                                 CBLDATK1
                   ADD XDWK1 TO XDAY1                                   CBLDATK1
               END-IF                                                   CBLDATK1
           END-IF                                                       CBLDATK1
      *    ...+DD (days in the month up to the ending date)             CBLDATK1
           ADD XDINDD TO XDAY1                                          CBLDATK1
      *==============================================================   CBLDATK1
           CONTINUE.                                                    CBLDATK1
       XCVTAE.                                                          CBLDATK1
           EXIT.                                                        CBLDATK1
      /EJECT                                                            CVTDTMK1
       XCV8E  SECTION.                                                  CVTDTMK1
      *==============================================================   CVTDTMK1
      *    Convert date to DT8 format.                                  CVTDTMK1
      *==============================================================   CVTDTMK1
           IF (XDI2DT = '0001-01-01') THEN                              CVTDTMK1
               MOVE ZEROS TO XDINDT                                     CVTDTMK1
           ELSE                                                         CVTDTMK1
               MOVE 0 TO XDINYY                                         CVTDTMK1
               MOVE XDI2MM TO XDINMM                                    CVTDTMK1
               MOVE XDI2DD TO XDINDD                                    CVTDTMK1
           END-IF                                                       CVTDTMK1
      *==============================================================   CVTDTMK1
           CONTINUE.                                                    CVTDTMK1
       XCV8EE.                                                          CVTDTMK1
           EXIT.                                                        CVTDTMK1
      /EJECT                                                            CBLDATK1
       XDADY  SECTION.                                                  CBLDATK1
      *==============================================================   CBLDATK1
      *    Calculate date increment, *DAYS                              CBLDATK1
      *==============================================================   CBLDATK1
           IF (XDURR = 0 OR                                             CBLDATK1
               XDWSL = 0) THEN                                          CBLDATK1
      *        None days of week selected                               CBLDATK1
               MOVE XDAY2 TO XDAY1                                      CBLDATK1
               IF (XDURR NOT = ZEROS) THEN                              CBLDATK1
      *            Return Code: Unable to increment date.               CBLDATK1
                   MOVE 'Y2U0059' TO W0RTN                              CBLDATK1
               END-IF                                                   CBLDATK1
               GO TO XDADYE                                             CBLDATK1
           END-IF                                                       CBLDATK1
           IF (XDWSL = 7) THEN                                          CBLDATK1
      *        All days of week selected                                CBLDATK1
               ADD XDURR TO XDAY2 GIVING XDAY1                          CBLDATK1
               GO TO XDADYM                                             CBLDATK1
           END-IF                                                       CBLDATK1
      *    Some days of week selected                                   CBLDATK1
           IF (XDURR NOT < 0) THEN                                      CBLDATK1
               MOVE 1 TO XDSTP                                          CBLDATK1
           ELSE                                                         CBLDATK1
               MOVE -1 TO XDSTP                                         CBLDATK1
           END-IF                                                       CBLDATK1
      *    Get number of full weeks in the duration                     CBLDATK1
           DIVIDE XDURR BY XDWSL GIVING XDWNB REMAINDER XDLSW           CBLDATK1
      *    Isolate the last week                                        CBLDATK1
           IF (XDLSW = 0) THEN                                          CBLDATK1
               MULTIPLY XDWSL BY XDSTP GIVING XDLSW                     CBLDATK1
               SUBTRACT XDSTP FROM XDWNB                                CBLDATK1
           END-IF                                                       CBLDATK1
      *    Increment the date by the full weeks                         CBLDATK1
           MULTIPLY XDWNB BY 7 GIVING XDWK1                             CBLDATK1
           ADD XDWK1 TO XDAY2 GIVING XDAY1                              CBLDATK1
      *    Determine day of week of the beginning date                  CBLDATK1
           ADD 3 TO XDAY2 GIVING YY                                     CBLDATK1
           DIVIDE YY BY 7 GIVING XDWK4 REMAINDER YY                     CBLDATK1
           IF (YY = 0) THEN                                             CBLDATK1
               MOVE 7 TO YY                                             CBLDATK1
           END-IF                                                       CBLDATK1
      *    Loop: Increment the date by the last week                    CBLDATK1
           PERFORM UNTIL NOT (XDLSW NOT = 0)                            CBLDATK1
      *        Increment the date                                       CBLDATK1
               ADD XDSTP TO XDAY1                                       CBLDATK1
      *        Increment the day of week                                CBLDATK1
               ADD XDSTP TO YY                                          CBLDATK1
      *        Put day of week into the range 1-7                       CBLDATK1
               IF (YY = 0) THEN                                         CBLDATK1
                   MOVE 7 TO YY                                         CBLDATK1
               ELSE                                                     CBLDATK1
                   IF (YY = 8) THEN                                     CBLDATK1
                       MOVE 1 TO YY                                     CBLDATK1
                   ELSE                                                 CBLDATK1
                       IF (YY = -1) THEN                                CBLDATK1
                           MOVE 6 TO YY                                 CBLDATK1
                       END-IF                                           CBLDATK1
                   END-IF                                               CBLDATK1
               END-IF                                                   CBLDATK1
               IF (YDOE(YY) = XDSEL) THEN                               CBLDATK1
      *            Selected day of the last week has been processed     CBLDATK1
                   SUBTRACT XDSTP FROM XDLSW                            CBLDATK1
               END-IF                                                   CBLDATK1
      *        End of loop                                              CBLDATK1
           END-PERFORM                                                  CBLDATK1
           CONTINUE.                                                    CBLDATK1
       XDADYM.                                                          CBLDATK1
           IF (XDAY1 < 1) THEN                                          CBLDATK1
               MOVE 1 TO XDAY1                                          CBLDATK1
               MOVE 'Y2U0006' TO W0RTN                                  CBLDATK1
           END-IF                                                       CBLDATK1
      *==============================================================   CBLDATK1
           CONTINUE.                                                    CBLDATK1
       XDADYE.                                                          CBLDATK1
           EXIT.                                                        CBLDATK1
      /EJECT                                                            CBLDATK1
       XDOWS  SECTION.                                                  CBLDATK1
      *==============================================================   CBLDATK1
      *    Setup days of week array                                     CBLDATK1
      *==============================================================   CBLDATK1
           MOVE XDCDW TO YDOW                                           CBLDATK1
           MOVE 0 TO XDWSL                                              CBLDATK1
           MOVE 1 TO YY                                                 CBLDATK1
           PERFORM UNTIL NOT (YY NOT > 7)                               CBLDATK1
               IF (YDOE(YY) = XDSEL) THEN                               CBLDATK1
                   ADD 1 TO XDWSL                                       CBLDATK1
               END-IF                                                   CBLDATK1
               ADD 1 TO YY                                              CBLDATK1
           END-PERFORM                                                  CBLDATK1
      *==============================================================   CBLDATK1
           CONTINUE.                                                    CBLDATK1
       XDOWSE.                                                          CBLDATK1
           EXIT.                                                        CBLDATK1
      /EJECT                                                            CBLDTDK1
       XDUDY  SECTION.                                                  CBLDTDK1
      *==============================================================   CBLDTDK1
      *    Calculate duration, *DAYS                                    CBLDTDK1
      *==============================================================   CBLDTDK1
           IF (XDAY1 < 1 OR                                             CBLDTDK1
               XDAY2 < 1) THEN                                          CBLDTDK1
               MOVE 0 TO XDURR                                          CBLDTDK1
               MOVE 'Y2U0006' TO W0RTN                                  CBLDTDK1
               GO XDUDYE                                                CBLDTDK1
           END-IF                                                       CBLDTDK1
           IF (XDAY1 > XDAY2) THEN                                      CBLDTDK1
      *        From date2 to date1                                      CBLDTDK1
               MOVE XDAY2 TO XABEG                                      CBLDTDK1
               MOVE XDAY1 TO XAEND                                      CBLDTDK1
           ELSE                                                         CBLDTDK1
      *        From date1 to date2                                      CBLDTDK1
               MOVE XDAY1 TO XABEG                                      CBLDTDK1
               MOVE XDAY2 TO XAEND                                      CBLDTDK1
           END-IF                                                       CBLDTDK1
           IF (XDWSL = 0) THEN                                          CBLDTDK1
      *        None days of week selected                               CBLDTDK1
               MOVE 0 TO XDURR                                          CBLDTDK1
               GO XDUDYC                                                CBLDTDK1
           END-IF                                                       CBLDTDK1
           SUBTRACT XABEG FROM XAEND GIVING XDURR                       CBLDTDK1
           IF (XDWSL = 7) THEN                                          CBLDTDK1
      *        All days of week selected                                CBLDTDK1
               GO XDUDYC                                                CBLDTDK1
           END-IF                                                       CBLDTDK1
      *    Some days of week selected                                   CBLDTDK1
           DIVIDE XDURR BY 7 GIVING XDURR REMAINDER XDLSW               CBLDTDK1
           MULTIPLY XDWSL BY XDURR                                      CBLDTDK1
           IF (XDLSW NOT = 0) THEN                                      CBLDTDK1
      *        Determine day of week of the beginning date              CBLDTDK1
               ADD 3 TO XABEG GIVING YY                                 CBLDTDK1
               DIVIDE YY BY 7 GIVING XDWK4 REMAINDER YY                 CBLDTDK1
      *        Loop: Increment the date by the last week                CBLDTDK1
               PERFORM UNTIL NOT (XDLSW > 0)                            CBLDTDK1
      *            Increment the day of week                            CBLDTDK1
                   ADD 1 TO YY                                          CBLDTDK1
                   SUBTRACT 1 FROM XDLSW                                CBLDTDK1
      *            Put day of week into the range 1-7                   CBLDTDK1
                   IF (YY = 8) THEN                                     CBLDTDK1
                       MOVE 1 TO YY                                     CBLDTDK1
                   END-IF                                               CBLDTDK1
      *            Selected day of the last week has been processed     CBLDTDK1
                   IF (YDOE(YY) = XDSEL) THEN                           CBLDTDK1
      *                Increment duration                               CBLDTDK1
                       ADD 1 TO XDURR                                   CBLDTDK1
                   END-IF                                               CBLDTDK1
      *            End of loop                                          CBLDTDK1
               END-PERFORM                                              CBLDTDK1
           END-IF                                                       CBLDTDK1
           CONTINUE.                                                    CBLDTDK1
       XDUDYC.                                                          CBLDTDK1
           IF (XDURR = 0) THEN                                          CBLDTDK1
      *        Return Code: Unable to calculate duration                CBLDTDK1
               MOVE 'Y2U0060' TO W0RTN                                  CBLDTDK1
           ELSE                                                         CBLDTDK1
               MOVE SPACES TO W0RTN                                     CBLDTDK1
           END-IF                                                       CBLDTDK1
      *==============================================================   CBLDTDK1
           CONTINUE.                                                    CBLDTDK1
       XDUDYE.                                                          CBLDTDK1
           EXIT.                                                        CBLDTDK1
      /EJECT                                                            CVTDTEK1
       XDV84T SECTION.                                                  CVTDTEK1
      *==============================================================   CVTDTEK1
      *    Convert internal to external date format                     CVTDTEK1
      *==============================================================   CVTDTEK1
      *    Map external to internal according to date format            CVTDTEK1
           IF (XDDTFM = 'DMY') THEN                                     CVTDTEK1
               MOVE XDI8DD TO XDEX01                                    CVTDTEK1
               MOVE XDI8MM TO XDEX02                                    CVTDTEK1
               MULTIPLY 1000 BY XDI8CC GIVING XDEY02                    CVTDTEK1
               ADD XDI8YY TO XDEY02                                     CVTDTEK1
           ELSE                                                         CVTDTEK1
               IF (XDDTFM = 'MDY') THEN                                 CVTDTEK1
                   MOVE XDI8MM TO XDEX01                                CVTDTEK1
                   MOVE XDI8DD TO XDEX02                                CVTDTEK1
                   MULTIPLY 1000 BY XDI8CC GIVING XDEY02                CVTDTEK1
                   ADD XDI8YY TO XDEY02                                 CVTDTEK1
               ELSE                                                     CVTDTEK1
      *            YMD format                                           CVTDTEK1
                   MULTIPLY 1000 BY XDI8CC GIVING XDEY01                CVTDTEK1
                   ADD XDI8YY TO XDEY01                                 CVTDTEK1
                   MOVE XDI8MM TO XDEX03                                CVTDTEK1
                   MOVE XDI8DD TO XDEX04                                CVTDTEK1
               END-IF                                                   CVTDTEK1
           END-IF                                                       CVTDTEK1
      *==============================================================   CVTDTEK1
           CONTINUE.                                                    CVTDTEK1
       XDV84E.                                                          CVTDTEK1
           EXIT.                                                        CVTDTEK1
      /EJECT                                                            CVTDTMK1
       XSTMS  SECTION.                                                  CVTDTMK1
      *==============================================================   CVTDTMK1
      *    Refresh System timestamp                                     CVTDTMK1
      *==============================================================   CVTDTMK1
           CALL 'Y2RTTSK' USING                                         CVTDTMK1
             ZZTMS OF JOB-CONTEXT                                       CVTDTMK1
           END-CALL                                                     CVTDTMK1
      *==============================================================   CVTDTMK1
           CONTINUE.                                                    CVTDTMK1
       XSTMSE.                                                          CVTDTMK1
           EXIT.                                                        CVTDTMK1
      /EJECT                                                            CBLUPDK1
       ZASNMS SECTION.                                                  CBLUPDK1
      *==============================================================   CBLUPDK1
      *    Send message to program's message queue                      CBLUPDK1
      *==============================================================   CBLUPDK1
      *    Send if first error message or not an error message          CBLUPDK1
           IF (ZAMSTP NOT = SPACES OR                                   CBLUPDK1
               ZAFSMS NOT = 'N') THEN                                   CBLUPDK1
               IF (ZAMSTP = SPACES) THEN                                CBLUPDK1
      *            Signal first error message sent                      CBLUPDK1
                   MOVE 'N' TO ZAFSMS                                   CBLUPDK1
               END-IF                                                   CBLUPDK1
               IF (ZAPGMQ = SPACES) THEN                                CBLUPDK1
                   MOVE ZZPGM OF JOB-CONTEXT TO ZAPGMQ                  CBLUPDK1
               END-IF                                                   CBLUPDK1
               CALL 'Y2SNMGC' USING                                     CBLUPDK1
      *        Program queue                                            CBLUPDK1
                 ZAPGMQ                                                 CBLUPDK1
      *        Relative queue                                           CBLUPDK1
                 ZAPGRL                                                 CBLUPDK1
      *        Message ID                                               CBLUPDK1
                 ZAMSID                                                 CBLUPDK1
      *        Message file                                             CBLUPDK1
                 ZAMSGF                                                 CBLUPDK1
      *        Message data                                             CBLUPDK1
                 ZAMSDA                                                 CBLUPDK1
      *        Message type                                             CBLUPDK1
                 ZAMSTP                                                 CBLUPDK1
               END-CALL                                                 CBLUPDK1
           END-IF                                                       CBLUPDK1
      *    Clear all fields for default mechanism next time             CBLUPDK1
      *    Program queue                                                CBLUPDK1
           MOVE SPACES TO ZAPGMQ                                        CBLUPDK1
      *    Relative queue                                               CBLUPDK1
           MOVE SPACES TO ZAPGRL                                        CBLUPDK1
      *    Message ID                                                   CBLUPDK1
           MOVE SPACES TO ZAMSID                                        CBLUPDK1
      *    Message file                                                 CBLUPDK1
           MOVE SPACES TO ZAMSGF                                        CBLUPDK1
      *    Message data                                                 CBLUPDK1
           MOVE SPACES TO ZAMSDA                                        CBLUPDK1
      *    Message type                                                 CBLUPDK1
           MOVE SPACES TO ZAMSTP                                        CBLUPDK1
      *==============================================================   CBLUPDK1
           CONTINUE.                                                    CBLUPDK1
       ZAEXIT.                                                          CBLUPDK1
           EXIT.                                                        CBLUPDK1
      /EJECT                                                            PRTFILK1
       ZXEXPG SECTION.                                                  PRTFILK1
      *==============================================================   PRTFILK1
      *    Exit program                                                 PRTFILK1
      *==============================================================   PRTFILK1
           MOVE SPACES TO P0RTN                                         PRTFILK1
           PERFORM ZYEXPG                                               PRTFILK1
      *==============================================================   PRTFILK1
           CONTINUE.                                                    PRTFILK1
       ZXEXIT.                                                          PRTFILK1
           EXIT.                                                        PRTFILK1
      /EJECT                                                            CBLUPDK1
       ZYEXPG SECTION.                                                  CBLUPDK1
      *==============================================================   CBLUPDK1
      *    Exit program: Direct                                         CBLUPDK1
      *==============================================================   CBLUPDK1
           CLOSE ACI000110P                                             CBLUPDK1
           CLOSE ACGBLEXPL2                                             CBLUPDK1
      *    Reset entry parameters as appropriate                        CBLUPDK1
           PERFORM ZZEXPM.                                              CBLUPDK1
      *    Exit program                                                 CBLUPDK1
           CONTINUE.                                                    CBLUPDK1
       ZYEXPG-EXIT.                                                     CBLUPDK1
           GOBACK.                                                      CBLUPDK1
      *==============================================================   CBLUPDK1
           CONTINUE.                                                    CBLUPDK1
       ZYEXIT.                                                          CBLUPDK1
           EXIT.                                                        CBLUPDK1
      /EJECT                                                            DCLPARK1
       ZZEXPM SECTION.                                                  DCLPARK1
      *==============================================================   DCLPARK1
      *    Return parameters from work fields                           DCLPARK1
      *==============================================================   DCLPARK1
      *==============================================================   DCLPARK1
           CONTINUE.                                                    DCLPARK1
       ZZPEXT.                                                          DCLPARK1
           EXIT.                                                        DCLPARK1
      /EJECT                                                            CBLHDRK1
       ZZINIT SECTION.                                                  CBLHDRK1
      *==============================================================   CBLHDRK1
      *    Initialisation                                               CBLHDRK1
      *==============================================================   CBLHDRK1
           IF (W0ICL = SPACES) THEN                                     CBLHDRK1
      *        *Initial call                                            CBLHDRK1
               MOVE 'Y' TO W0ICL                                        CBLHDRK1
           ELSE                                                         CBLHDRK1
               MOVE 'N' TO W0ICL                                        CBLHDRK1
           END-IF                                                       CBLHDRK1
           MOVE SPACES TO P0RTN                                         CBLHDRK1
           MOVE SPACES TO W0RTN                                         CBLHDRK1
           MOVE ZEROS  TO W0RTW                                         CBLHDRK1
           MOVE SPACES TO W0RSF                                         CBLHDRK1
           MOVE '400' TO W0ENV                                          CBLHDRK1
           MOVE ALL B'0' TO INDICS                                      CBLHDRK1
           MOVE SPACES TO ZZPGM OF JOB-CONTEXT                          CBLHDRK1
      *    Retrieve job attributes                                      CBLHDRK1
           CALL 'Y2RTJCR' USING                                         CBLHDRK1
             JOB-CONTEXT                                                CBLHDRK1
           END-CALL                                                     CBLHDRK1
      *    Setup job date/time                                          CBLHDRK1
           MOVE ZZSD7 OF JOB-CONTEXT TO ZZJDT                           CBLHDRK1
           ACCEPT ZZTIME FROM TIME                                      CBLHDRK1
           MOVE ZZHNS TO ZZJTM OF JOB-CONTEXT                           CBLHDRK1
           MOVE 'ACI000110S' TO ZZPGM OF JOB-CONTEXT                    CBLHDRK1
      *    Define work field U:Data Area Name                           ACTCTXK4
           MOVE SPACES TO WUDTAARA OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field GX GL code                                 ACTCTXK4
           MOVE SPACES TO WUGXGLCDE OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field D/C (Debit/Credit)                         ACTCTXK4
           MOVE SPACES TO WUALC009 OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Blank                                    ACTCTXK4
           MOVE SPACES TO WUUBLANK OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field *Return code                               ACTCTXK4
           MOVE SPACES TO WURTN OF WORK-CONTEXT                         ACTCTXK4
      *    Define work field U:Text (2)                                 ACTCTXK4
           MOVE SPACES TO WUUTXT002 OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field U:Numeric (yes/no)                         ACTCTXK4
           MOVE SPACES TO WUUNUMYN OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Display yes/no 4                         ACTCTXK4
           MOVE SPACES TO WUUDSPYN4 OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field Centre Cout (Cost Centre)                  ACTCTXK4
           MOVE SPACES TO WUALC164 OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field Num Ordre (Order Number)                   ACTCTXK4
           MOVE SPACES TO WUALC030 OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Display yes/no 5                         ACTCTXK4
           MOVE SPACES TO WUUDSPYN5 OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field Num Piece (Document No)                    ACTCTXK4
           MOVE SPACES TO WUALC003 OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field Periode (Period)                           ACTCTXK4
           MOVE SPACES TO WUALC006 OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Date D8#                                 ACTCTXK4
           MOVE ZERO TO WUUDTED8NA OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Day                                      ACTCTXK4
           MOVE ZERO TO WUUDAY OF WORK-CONTEXT                          ACTCTXK4
      *    Define work field U:Day b                                    ACTCTXK4
           MOVE ZERO TO WUUDAYB OF WORK-CONTEXT                         ACTCTXK4
      *    Define work field U:Date D8# b                               ACTCTXK4
           MOVE ZERO TO WUUDTED8NB OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Date period CCYYMM                       ACTCTXK4
           MOVE ZERO TO WUUDTECYM OF WORK-CONTEXT                       ACTCTXK4
      *    Define work field U:Day of week                              ACTCTXK4
           MOVE ZERO TO WUUDAYOFWK OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Value (15,2) b                           ACTCTXK4
           MOVE ZERO TO WUUVL15P2B OF WORK-CONTEXT                      ACTCTXK4
      *    Define work field U:Display yes/no 3                         ACTCTXK4
           MOVE SPACES TO WUUDSPYN3 OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field U:Display yes/no 1                         ACTCTXK4
           MOVE SPACES TO WUUDSPYN1 OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field U:Display yes/no 2                         ACTCTXK4
           MOVE SPACES TO WUUDSPYN2 OF WORK-CONTEXT                     ACTCTXK4
      *    Define work field U:Value (15,2)                             ACTCTXK4
           MOVE ZERO TO WUUVL15P2A OF WORK-CONTEXT                      ACTCTXK4
      *    Signal first error message outstanding                       CBLUPDK1
           MOVE 'Y' TO ZAFSMS                                           CBLUPDK1
      *    Open files                                                   CBLUPDK1
           OPEN OUTPUT ACI000110P                                       CBLUPDK1
           ACCEPT ACI000110P-OPEN FROM OPEN-FEEDBACK-AREA FOR ACI000110PCBLUPDK1
      *    Move main file information to JOB context                    CBLUPDK1
           MOVE CORRESPONDING OPENFA OF ACI000110P-OPEN TO JOB-CONTEXT  CBLUPDK1
           CALL 'Y2QLVNR' USING                                         CBLUPDK1
             ZZFFL OF JOB-CONTEXT                                       CBLUPDK1
             ZZFLB OF JOB-CONTEXT                                       CBLUPDK1
             ZZFQL OF JOB-CONTEXT                                       CBLUPDK1
           END-CALL                                                     CBLUPDK1
           OPEN INPUT ACGBLEXPL2                                        CBLUPDK1
           ACCEPT ACGBLEXPL2-OPEN FROM OPEN-FEEDBACK-AREA FOR ACGBLEXPL2CBLUPDK1
           MOVE 'Y' TO W0OPN                                            CBLUPDK1
           MOVE 'N' TO W0PMT                                            CBLUPDK1
      *    Define local work field GX Report date                       ACTCTXK4
           MOVE ZERO TO YL0001 OF WORK-CONTEXT                          ACTCTXK4
      *    Define local work field U:Date period CCYYMM                 ACTCTXK4
           MOVE ZERO TO YL0002 OF WORK-CONTEXT                          ACTCTXK4
      *    Define local work field U:Day                                ACTCTXK4
           MOVE ZERO TO YL0003 OF WORK-CONTEXT                          ACTCTXK4
      *    Define local work field U:Number (3.0)                       ACTCTXK4
           MOVE ZERO TO YL0004 OF WORK-CONTEXT                          ACTCTXK4
           MOVE ZZPGM OF JOB-CONTEXT TO ZAPGM OF ZAPAGHDR-WS-O          PRTFILK1
           MOVE SPACES TO W0PFM                                         PRTFILK1
           MOVE ZERO TO YXWRK                                           PRTFILK1
           MOVE ZERO TO YXHDL                                           PRTFILK1
      *    Adjust page length and overflow as necessary                 PRTFILK1
           SUBTRACT 2 FROM YXPGL OF ACI000110P-OPEN GIVING W0PGL        PRTFILK1
           IF (YXOFL OF ACI000110P-OPEN < W0PGL) THEN                   PRTFILK1
               MOVE YXOFL OF ACI000110P-OPEN TO W0OFL                   PRTFILK1
           ELSE                                                         PRTFILK1
               SUBTRACT 2 FROM W0PGL GIVING W0OFL                       PRTFILK1
           END-IF                                                       PRTFILK1
      *    Clear overflow indicator                                     PRTFILK1
           SET C-INDICATOR-OFF(97) TO TRUE                              PRTFILK1
      *    Request new page                                             PRTFILK1
           MOVE 'Y' TO W0NEWP                                           PRTFILK1
      *    USER: Initialize program                                     MSGACTK2
      *    Utl @Copyright - #Standard Functions  *                      MSGACTK2
      *    U:Data Area Name                                             CBLMOVK1
           MOVE ZZPGM OF JOB-CONTEXT TO WUDTAARA OF WORK-CONTEXT        CBLMOVK1
      *    Rtn A$(B#:C#) = D$ - #String Functions  *                    MSGACTK2
           MOVE 'A'                                                     CBLUFNK1
             TO WUDTAARA OF WORK-CONTEXT                                CBLUFNK1
                 ( 10                                                   CBLUFNK1
                 : 1 )                                                  CBLUFNK1
      *    Rtv *DTAARA value <= 256 - #Standard Functions  *            MSGACTK2
           SET C-INDICATOR-OFF(90) TO TRUE                              CBLCLLK1
           MOVE WUDTAARA OF WORK-CONTEXT TO WQ0001                      CBLCLLK1
           MOVE SPACES TO WQ0002                                        CBLCLLK1
      *                                                                 CBLCLLK1
           CALL 'Y2RTDAC' USING                                         CBLCLLK1
      *    U:Object Name                                                CBLCLLK1
             WQ0001                                                     CBLCLLK1
      *    U:Data area value (256)                                      CBLCLLK1
             WQ0002                                                     CBLCLLK1
                    ON OVERFLOW                                         CBLCLLK1
                    SET C-INDICATOR-ON(90) TO TRUE                      CBLCLLK1
           END-CALL                                                     CBLCLLK1
      *                                                                 CBLCLLK1
           MOVE WQ0002 TO WUGXGLCDE OF WORK-CONTEXT                     CBLCLLK1
      *                                                                 CBLCLLK1
      *    Error on program call will terminate run unit                CBLCLLK1
           IF (C-INDICATOR-ON(90)) THEN                                 CBLCLLK1
               MOVE 'Y2U0032' TO W0RTN                                  CBLCLLK1
               MOVE 'Y2RTDAC' TO W0CLPG                                 CBLCLLK1
      *        Send message '*Error occured on CALL...'                 SNDMSGK1
      *        Message ID                                               SNDMSGK1
               MOVE 'Y2U0032' TO ZAMSID                                 SNDMSGK1
      *        Message file                                             SNDMSGK1
               MOVE 'Y2USRMSG' TO ZAMSGF                                SNDMSGK1
      *        Message data                                             SNDMSGK1
               MOVE W0CLPG TO ZAMSDA                                    SNDMSGK1
               PERFORM ZASNMS                                           SNDMSGK1
               SET C-INDICATOR-ON(99) TO TRUE                           CBLCLLK1
           END-IF                                                       CBLCLLK1
      *    Obtain system date format                                    CVTDTEK1
           MOVE 'Y2DTFMA' TO DATA-AREA-NAME                             CVTDTEK1
           CALL 'Y2RTDAC' USING                                         CVTDTEK1
             DATA-AREA-NAME                                             CVTDTEK1
             XDDTFM                                                     CVTDTEK1
           END-CALL                                                     CVTDTEK1
      *==============================================================   CBLHDRK1
           CONTINUE.                                                    CBLHDRK1
       ZZEXIT.                                                          CBLHDRK1
           EXIT.                                                        CBLHDRK1
