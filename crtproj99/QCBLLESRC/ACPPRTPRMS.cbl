       PROCESS APOST.
      ***************************************************************
       IDENTIFICATION DIVISION.
     H/TITLE Prt Batch Parm Listing    Print file
     Z* CRTCBLPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
     H* Generated by  : Synon/2E  Version:  1418
     H* Function type : Print file  Version:   0.1
      *
     H* Company    : Vehicle Finance
     H* System     : Vehicle Finance
     H* User name  : MEADM1
     H* Date       : 04/08/98 time: 15:50:00
     H* Copyright  : Vehicle Finance
      *
      *==============================================================
     M* MAINTENANCE   :
      *==============================================================
       PROGRAM-ID.  ACPPRTPRMS.
       SECURITY.    (C) COPYRIGHT Renault UK Ltd. 1990, 1998
                    Reproduction is not allowed without prior permission
      /EJECT
      ***************************************************************
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.  IBM-AS400.
       OBJECT-COMPUTER.  IBM-AS400.
       SPECIAL-NAMES.  OPEN-FEEDBACK IS OPEN-FEEDBACK-AREA,
           I-O-FEEDBACK IS I-O-FEEDBACK-AREA.
      /EJECT
      ***************************************************************
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      *
           SELECT ACBATPRML1
             ASSIGN TO DATABASE-ACBATPRML1
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RTV : Batch Parameter           Retrieval index
      *
           SELECT ACBATAPPL1
             ASSIGN TO DATABASE-ACBATAPPL1
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RTV : Batch Application         Retrieval index
      *
           SELECT ACBATPNTL1
             ASSIGN TO DATABASE-ACBATPNTL1
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RTV : Batch Parameter Note      Retrieval index
      *
           SELECT ACPPRTPRMP
             ASSIGN TO FORMATFILE-ACPPRTPRMP-SI
             FILE STATUS IS FILE-STATUS.
      *    PRT: Prt Batch Parm Listing    Print file
      *
       I-O-CONTROL.
      *
      /EJECT
      ***************************************************************
       DATA DIVISION.
       FILE SECTION.
      *
      *
       FD  ACPPRTPRMP
           LABEL RECORDS ARE STANDARD.
       01  ACPPRTPRMP-F.
           COPY DDS-ALL-FORMATS OF ACPPRTPRMP.
      *
       FD  ACBATPRML1
           LABEL RECORDS ARE STANDARD.
       01  ACBATPRML1-R.
           COPY DDS-ALL-FORMATS OF ACBATPRML1.
      *
       FD  ACBATAPPL1
           LABEL RECORDS ARE STANDARD.
       01  ACBATAPPL1-R.
           COPY DDS-ALL-FORMATS OF ACBATAPPL1.
      *
       FD  ACBATPNTL1
           LABEL RECORDS ARE STANDARD.
       01  ACBATPNTL1-R.
           COPY DDS-ALL-FORMATS OF ACBATPNTL1.
      /EJECT
      ***************************************************************
       WORKING-STORAGE SECTION.
      *
      *    Job context
       01  JOB-CONTEXT.
           COPY DDS-ALL-FORMATS OF Y2PGDSPK.
      *    Job date/time
           03  IJBDTTM.
           05  ZZJDT PIC S9(7).
           05  ZZJDTE REDEFINES ZZJDT.
           07  ZZJCC PIC S9(1).
           07  ZZJYY PIC S9(2).
           07  ZZJMM PIC S9(2).
           07  ZZJDD PIC S9(2).
           05  ZZJTM PIC S9(6).
           05  ZZJTME REDEFINES ZZJTM.
           07  ZZJHH PIC S9(2).
           07  ZZJNN PIC S9(2).
           07  ZZJSS PIC S9(2).
           03  ZZFQL PIC X(21).
           03  ZZFLB PIC X(10).
           03  ZZFFL PIC X(10).
           03  ZZFMB PIC X(10).
           03  ZZCDB PIC X(18).
           03  ZZLDB PIC X(18).
           03  ZZTMS PIC X(26).
       01  ZZTIME.
           03  ZZHNS PIC S9(6).
           03  ZZHH PIC S9(2).
      *
       77  C-IND-OFF PIC 1(1) VALUE B'0'.
       77  C-IND-ON PIC 1(1) VALUE B'1'.
      *
       01  FILE-STATUS PIC X(2).
           88  C-IO-OK VALUE '00'.
           88  C-EOF VALUE '10' '46'.
           88  C-NO-MOD-SFLRCDS VALUE '12'.
           88  C-IO-ERR VALUE '21' '22' '24' '30' '34' '90' '91' '92' '9
      -     '4' '95' '9A' '9H' '9I' '9K' '9M' '9N' '9P'.
           88  C-NO-RECORD VALUE '23'.
           88  C-RECORD-LOCKED VALUE '9D'.
      *
       01  UNTIL-CONDITION PIC 1(1).
           88  C-UNTIL-FALSE VALUE B'0'.
           88  C-UNTIL-TRUE VALUE B'1'.
      *
       01  FOREVER PIC 1(1) VALUE B'1'.
           88  C-FOREVER VALUE B'1'.
      *
       01  WRK-IO-TRASH-AREA PIC X(1).
      *
       01  W0RTN PIC X(7).
       01  W0RSF PIC X(1).
       01  W0ENV PIC X(3).
       01  W0RTW PIC S9(9) COMP-4.
       01  W0ICL PIC X(1).
       01  W0PFM PIC X(1).
       01  W0NEWP PIC X(1).
       01  YXWRK PIC S9(5) COMP-3.
       01  YXHDL PIC S9(5) COMP-3.
       01  W0PGL PIC S9(5) COMP-3.
       01  W0OFL PIC S9(5) COMP-3.
       01  W0FSUM PIC S9(3) COMP-3.
       01  W0DTLN PIC S9(3) COMP-3.
       01  W0COLN PIC S9(3) COMP-3.
       01  W0SKP PIC X(1).
       01  W0AL1P PIC X(1).
       01  W0AP1P PIC X(1).
       01  W0AL00 PIC X(1).
       01  W0AP00 PIC X(1).
       01  W0AL01 PIC X(1).
       01  W0AP01 PIC X(1).
       01  W0ACDT PIC X(1).
       01  W0APDT PIC X(1).
       01  KPSA.
      *    Application Code
           03  APAPPCDE PIC X(2).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  KPSA-EXT.
      *    Application Code
           03  APAPPCDE PIC X(2).
      *    Transaction Type
           03  APTRNTYP PIC S9(3) COMP-3.
      *    Batch Account Number
           03  APBTACCNBR PIC S9(5) COMP-3.
      *..............................................................
       01  KPSA-TMP.
      *    Application Code
           03  APAPPCDE PIC X(2).
      *    Define keylist
       01  KRSSA1.
      *    Application Code
           03  ANAPPCDE PIC X(2).
      *    Define keylist
       01  KRSSA1-TMP.
      *    Application Code
           03  ANAPPCDE PIC X(2).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA1.
      *    Application Code
           03  ANAPPCDE PIC X(2).
      *..............................................................
       01  W0BL1P PIC X(1).
       01  W0BP1P PIC X(1).
       01  W0BL00 PIC X(1).
       01  W0BP00 PIC X(1).
       01  W0BL01 PIC X(1).
       01  W0BP01 PIC X(1).
       01  W0BL02 PIC X(1).
       01  W0BP02 PIC X(1).
       01  W0BCDT PIC X(1).
       01  W0BPDT PIC X(1).
      *    Application Code
       01  WQKB01 PIC X(2).
      *    Transaction Type
       01  WQKB02 PIC S9(3) COMP-3.
       01  KRSB.
      *    Application Code
           03  EHAPPCDE PIC X(2).
      *    Transaction Type
           03  EHTRNTYP PIC S9(3) COMP-3.
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  KRSB-EXT.
      *    Application Code
           03  EHAPPCDE PIC X(2).
      *    Transaction Type
           03  EHTRNTYP PIC S9(3) COMP-3.
      *    Batch Account Number
           03  EHBTACCNBR PIC S9(5) COMP-3.
      *    Note Number
           03  EHNOTNBR PIC S9(2).
      *..............................................................
       01  KRSB-TMP.
      *    Application Code
           03  EHAPPCDE PIC X(2).
      *    Transaction Type
           03  EHTRNTYP PIC S9(3) COMP-3.
      *    Application Code
       01  WZB001 PIC X(2).
      *    Transaction Type
       01  WZB002 PIC S9(3) COMP-3.
      *    Batch Account Number
       01  WZB003 PIC S9(5) COMP-3.
       01  W0EOFB PIC 1(1).
       01  W0RSL PIC X(1).
      *    Application Code
       01  WZA001 PIC X(2).
      *    Transaction Type
       01  WZA002 PIC S9(3) COMP-3.
       01  W0EOFA PIC 1(1).
       01  ACPPRTPRMP-I-O-PRTF.
           COPY DDS-ALL-FORMATS OF Y2IPRTFIO.
      *    Printer file I/O feedback area
      *
       01  ACPPRTPRMP-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  ACBATPRML1-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  ACBATAPPL1-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  ACBATPNTL1-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  W0OPN PIC X(1).
       01  W0PMT PIC X(1).
      *    U:Yes/No text
       01  WORK-CONTEXT.
           03  WUUYESNO PIC X(1).
      *    Batch Account Number
           03  WUBTACCNBR PIC S9(5) COMP-3.
      *    Debit/Credit
           03  WUDBTCRD PIC X(1).
      *    U:Print?
           03  WUUPRINT PIC X(1).
       01  ACPPRTPRMP-WS-O.
           03 ZAPAGHDR-WS-O.
           COPY DDS-ZAPAGHDR-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZBPAGTOP-WS-O REDEFINES ZAPAGHDR-WS-O.
           COPY DDS-ZAPAGHDR-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZHENDRPT-WS-O.
           COPY DDS-ZHENDRPT-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZGFINTTL-WS-O.
           COPY DDS-ZGFINTTL-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZCKEYHDR-WS-O.
           COPY DDS-ZCKEYHDR-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZFKEYTTL-WS-O.
           COPY DDS-ZFKEYTTL-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZDDTLRCD-WS-O.
           COPY DDS-ZDDTLRCD-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZDCOLHDG-WS-O.
           COPY DDS-ZDCOLHDG-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZEDTLRCD-WS-O.
           COPY DDS-ZEDTLRCD-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
           03 ZECOLHDG-WS-O.
           COPY DDS-ZECOLHDG-O OF ACPPRTPRMP.
                 06 FILLER            PIC X(1).
      *
      *    Indicators
       01  INDICS.
           03  IND PIC 1(1) OCCURS 99 INDICATOR 1.
           88  C-INDICATOR-ON VALUE B'1'.
           88  C-INDICATOR-OFF VALUE B'0'.
      *
      /EJECT
      *    Parameter declarations
      * Cvt date Rpt/Scn Fmt - #Date Functions
      *.Start.of.User.source...........................................
       01  CVT-DTE-TO-RPT-STRUCTURE.
           05  CVT-DTE-RPT-DD          PIC S9(2).
           05  CVT-DTE-RPT-MM          PIC S9(2).
           05  CVT-DTE-RPT-CC          PIC S9(2).
           05  CVT-DTE-RPT-YY          PIC S9(2).
      *.End.of.User.source.............................................
      /EJECT
      ***************************************************************
       LINKAGE SECTION.
      *    Return code
       01  P0RTN PIC X(7).
       01  P1PARM.
      *    Application Code
           03  P1APPCDE PIC X(2).
      ***************************************************************
       PROCEDURE DIVISION USING
             P0RTN
      *    KEY: Batch Parameter           Retrieval index
      *    I : POS Application Code
      *    KEY : Batch Parameter
             P1PARM
           .
      ***************************************************************
           CONTINUE.
       MAINLINE SECTION.
      *    Initialize
           PERFORM ZZINIT
      *
      *    Prt Batch Parm Listing: Mainline
           PERFORM A0MAIN
      *    Print headers then End of report format
           PERFORM Q0PRNT
           WRITE ACPPRTPRMP-F FROM ZHENDRPT-WS-O
             FORMAT IS 'ZHENDRPT' INDICATORS ARE INDICS
           END-WRITE
           ACCEPT ACPPRTPRMP-I-O-PRTF FROM I-O-FEEDBACK-AREA FOR
             ACPPRTPRMP
      *    Exit program
           PERFORM ZXEXPG
      *--------------------------------------------------------------
      /EJECT
       A0MAIN SECTION.
      *==============================================================
      *    Prt Batch Parm Listing
      *==============================================================
      *    Initialise Full Externally Described Keylist
      *    Application Code
           MOVE LOW-VALUES TO APAPPCDE OF KPSA-EXT
      *    Transaction Type
           MOVE -999 TO APTRNTYP OF KPSA-EXT
      *    Batch Account Number
           MOVE -99999 TO APBTACCNBR OF KPSA-EXT
      *    Setup key
      *    Application Code
           MOVE P1APPCDE TO APAPPCDE OF KPSA
      *    Establish starting position
           MOVE CORRESPONDING
             KPSA-EXT TO
             FBATPBV OF ACBATPRML1-R
           MOVE CORRESPONDING
             KPSA TO
             FBATPBV OF ACBATPRML1-R
           START ACBATPRML1 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'FBATPBV'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
      *    Read next record with user selection
           PERFORM A3READ
           IF (W0EOFA NOT = C-IND-OFF) THEN
               CONTINUE
           ELSE
      *        Request all headings
      *        First page
               MOVE 'Y' TO W0AL1P
      *        Application Code
               MOVE 'Y' TO W0AL00
      *        Transaction Type
               MOVE 'Y' TO W0AL01
      *        Set column headings flag
               MOVE 'Y' TO W0ACDT
      *        Print report body
               PERFORM UNTIL NOT (W0EOFA = C-IND-OFF)
      *            Prepare heading formats for printing
                   PERFORM A1PHDR
      *            Print report detail line
                   PERFORM A2PDTL
      *            Read next record with user selection
                   PERFORM A3READ
      *            Print totals
                   PERFORM A4PTOT
               END-PERFORM
           END-IF
      *==============================================================
           CONTINUE.
       A0EXIT.
           EXIT.
      /EJECT
       A1PHDR SECTION.
      *==============================================================
      *    Prepare heading formats for printing
      *==============================================================
           IF (W0AL1P = 'Y') THEN
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0AP1P
           END-IF
      *
           IF (W0AL00 = 'Y') THEN
      *        Load key header format
      *        Application Code
               MOVE APAPPCDE OF FBATPBV TO ZCAPPCDE OF ZCKEYHDR-WS-O
      *        Update Flag
               MOVE APUPDFLG OF FBATPBV TO ZCUPDFLG OF ZCKEYHDR-WS-O
      *        Multi Journal Flag
               MOVE APMJRNFLG OF FBATPBV TO ZCMJRNFLG OF ZCKEYHDR-WS-O
      *        D:Application Desc
               MOVE SPACES TO ZCBITX OF ZCKEYHDR-WS-O
      *        Load related totals format
      *        Application Code
               MOVE APAPPCDE OF FBATPBV TO ZFAPPCDE OF ZFKEYTTL-WS-O
      *        Update Flag
               MOVE APUPDFLG OF FBATPBV TO ZFUPDFLG OF ZFKEYTTL-WS-O
      *        Multi Journal Flag
               MOVE APMJRNFLG OF FBATPBV TO ZFMJRNFLG OF ZFKEYTTL-WS-O
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0AP00
           END-IF
      *
           IF (W0AL01 = 'Y') THEN
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0AP01
           END-IF
      *
      *==============================================================
           CONTINUE.
       A1EXIT.
           EXIT.
      /EJECT
       A2PDTL SECTION.
      *==============================================================
      *    Process detail record
      *==============================================================
      *    Load details format
      *    Application Code
           MOVE APAPPCDE OF FBATPBV TO ZDAPPCDE OF ZDDTLRCD-WS-O
      *    Update Flag
           MOVE APUPDFLG OF FBATPBV TO ZDUPDFLG OF ZDDTLRCD-WS-O
      *    Multi Journal Flag
           MOVE APMJRNFLG OF FBATPBV TO ZDMJRNFLG OF ZDDTLRCD-WS-O
      *    Transaction Type
           MOVE APTRNTYP OF FBATPBV TO ZDTRNTYP OF ZDDTLRCD-WS-O
      *    Batch Account Number
           MOVE APBTACCNBR OF FBATPBV TO ZDBTACCNBR OF ZDDTLRCD-WS-O
      *    Ledger Type Code
           MOVE APLDGTYP OF FBATPBV TO ZDLDGTYP OF ZDDTLRCD-WS-O
      *    Ledger Nature Code
           MOVE APLDGNAT OF FBATPBV TO ZDLDGNAT OF ZDDTLRCD-WS-O
      *    Location Code
           MOVE APLOCCDE OF FBATPBV TO ZDLOCCDE OF ZDDTLRCD-WS-O
      *    Analytical Code
           MOVE APALYCDE OF FBATPBV TO ZDALYCDE OF ZDDTLRCD-WS-O
      *    General Account Number
           MOVE APGENACC OF FBATPBV TO ZDGENACC OF ZDDTLRCD-WS-O
      *    Sub Account Number
           MOVE APSUBACC OF FBATPBV TO ZDSUBACC OF ZDDTLRCD-WS-O
      *    Journal Number
           MOVE APJNRNBR OF FBATPBV TO ZDJNRNBR OF ZDDTLRCD-WS-O
      *    Cost Centre
           MOVE APCSTCTR OF FBATPBV TO ZDCSTCTR OF ZDDTLRCD-WS-O
      *    Debit/Credit
           MOVE APDBTCRD OF FBATPBV TO ZDDBTCRD OF ZDDTLRCD-WS-O
      *    Document Symbol
           MOVE APDOCSYM OF FBATPBV TO ZDDOCSYM OF ZDDTLRCD-WS-O
      *    Processing Code
           MOVE APPRCCDE OF FBATPBV TO ZDPRCCDE OF ZDDTLRCD-WS-O
      *    Created by User
           MOVE APUSRCRT OF FBATPBV TO ZDUSRCRT OF ZDDTLRCD-WS-O
      *    Date Created
           MOVE APDTECRT OF FBATPBV TO ZDDTECRT OF ZDDTLRCD-WS-O
      *    Document Description
           MOVE APDOCDES OF FBATPBV TO ZDDOCDES OF ZDDTLRCD-WS-O
      *    Batch Description
           MOVE APBATDES OF FBATPBV TO ZDBATDES OF ZDDTLRCD-WS-O
      *    VAT Code
           MOVE APVATCDE OF FBATPBV TO ZDVATCDE OF ZDDTLRCD-WS-O
      *    User to Contact
           MOVE APUSRCNT OF FBATPBV TO ZDUSRCNT OF ZDDTLRCD-WS-O
      *    Method of Contact
           MOVE APMTDCNT OF FBATPBV TO ZDMTDCNT OF ZDDTLRCD-WS-O
      *    Changed by User
           MOVE APUSRCHG OF FBATPBV TO ZDUSRCHG OF ZDDTLRCD-WS-O
      *    Date Last Changed
           MOVE APDTECHG OF FBATPBV TO ZDDTECHG OF ZDDTLRCD-WS-O
      *    Active Status(Y/N)
           MOVE APACTSTS OF FBATPBV TO ZDACTSTS OF ZDDTLRCD-WS-O
      *    Related Transaction Type
           MOVE APRLTRNTYP OF FBATPBV TO ZDRLTRNTYP OF ZDDTLRCD-WS-O
      *    USER: Process before print of detail format
      *    U:Yes/No text
           MOVE 'Y' TO WUUYESNO OF WORK-CONTEXT
      *    CASE:
      *    - c1ANDc2ANDc3
      *    |- c1    : DB1.Batch Account Number EQ WRK.Batch Account
      *      Number
      *    |- c2    : DB1.Debit/Credit is Debit
      *    |- c3    : WRK.Debit/Credit is Credit
      *    '-
      *    *IF
           IF (APBTACCNBR OF FBATPBV OF ACBATPRML1-R = WUBTACCNBR OF
             WORK-CONTEXT AND
               APDBTCRD OF FBATPBV OF ACBATPRML1-R = 'D' AND
               WUDBTCRD OF WORK-CONTEXT = 'C') THEN
      *        U:Yes/No text
               MOVE 'N' TO WUUYESNO OF WORK-CONTEXT
           END-IF
      *    U:Print?
           MOVE 'Y' TO WUUPRINT OF WORK-CONTEXT
      *    Not Misc. Inv, don't print vat/user to contact/method of
      *      contact
      *    CASE: DB1.Application Code is Not Misc. Invoicing
      *    *IF
           IF (APAPPCDE OF FBATPBV OF ACBATPRML1-R NOT < '00' AND
               APAPPCDE OF FBATPBV OF ACBATPRML1-R NOT > '49') THEN
      *        U:Print?
               MOVE 'N' TO WUUPRINT OF WORK-CONTEXT
           END-IF
      *    Signal that format is now ready to print
           MOVE 'Y' TO W0APDT
      *    Call print routine
           PERFORM Q0PRNT
      *    PRTOBJ calls after print of detail format
      *    Embedded PRTOBJ : Prt Batch Parameter Note
           PERFORM UA1SUBR
      *
      *==============================================================
           CONTINUE.
       A2EXIT.
           EXIT.
      /EJECT
       A3READ SECTION.
      *==============================================================
      *    Read next record
      *==============================================================
      *    Hold current values
           MOVE APAPPCDE OF FBATPBV TO WZA001
           MOVE APTRNTYP OF FBATPBV TO WZA002
      *    Read next record
           SET C-UNTIL-FALSE TO TRUE
           PERFORM UNTIL (C-UNTIL-TRUE)
               SET C-INDICATOR-OFF(90) TO TRUE
               READ ACBATPRML1 NEXT
                 FORMAT IS 'FBATPBV'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   END-IF
               END-IF
      *        Transfer error indicator to EOF flag
               MOVE IND(90) TO W0EOFA
      *        Quit if no record read
               IF (W0EOFA NOT = C-IND-ON) THEN
      *            Select record unless user action states otherwise
                   MOVE 'Y' TO W0RSL
      *            USER: Record selection processing
      *            CASE:
      *            - NOTc1 AND c2
      *            |- c1    : PAR.Application Code is EQ *BLANK
      *            |- c2    : DB1.Application Code GT PAR.Application
      *              Code
      *            '-
      *            *IF
                   IF (NOT (P1APPCDE = SPACES) AND
                       APAPPCDE OF FBATPBV OF ACBATPRML1-R > P1APPCDE)
                     THEN
      *                Rtn Force EOF in PRTFIL - #Standard Functions  * 
      *.Start.of.user.source...........................................
            MOVE C-IND-ON              TO W0EOFA
      *.End.of.user.source.............................................
                   END-IF
               END-IF
           IF (W0RSL = 'Y' OR
               W0EOFA = C-IND-ON)
             SET C-UNTIL-TRUE TO TRUE
           END-IF
           END-PERFORM
      *
      *    Reset key level breaks
      *    Application Code
           MOVE SPACES TO W0AL00
      *    Transaction Type
           MOVE SPACES TO W0AL01
           IF (W0EOFA = C-IND-ON) THEN
      *        End of file - Signal all level breaks
      *        Application Code
               MOVE 'Y' TO W0AL00
      *        Transaction Type
               MOVE 'Y' TO W0AL01
           ELSE
      *        Next record - Detect level breaks
               IF (APAPPCDE OF FBATPBV NOT = WZA001) THEN
      *            Set on level break indicator
                   MOVE 'Y' TO W0AL00
               END-IF
               IF (APTRNTYP OF FBATPBV NOT = WZA002 OR
                   W0AL00     = 'Y') THEN
      *            Set on level break indicator
                   MOVE 'Y' TO W0AL01
               END-IF
           END-IF
      *==============================================================
           CONTINUE.
       A3EXIT.
           EXIT.
      /EJECT
       A4PTOT SECTION.
      *==============================================================
      *    Print report Totals
      *==============================================================
      *    Print level break totals as required
           IF (W0AL01 = 'Y') THEN
      *        Signal header format is no longer ready
               MOVE SPACES TO W0AP01
           END-IF
      *
           IF (W0AL00 = 'Y') THEN
      *        Mention hidden format
      *        Signal header format is no longer ready
               MOVE SPACES TO W0AP00
           END-IF
      *
           IF (W0EOFA = C-IND-ON) THEN
      *        Mention hidden format
               CONTINUE
           END-IF
      *
      *==============================================================
           CONTINUE.
       A4EXIT.
           EXIT.
      /EJECT
       B0MAIN SECTION.
      *==============================================================
      *    Prt Batch Parameter Note
      *==============================================================
      *    Initialise Full Externally Described Keylist
      *    Application Code
           MOVE LOW-VALUES TO EHAPPCDE OF KRSB-EXT
      *    Transaction Type
           MOVE -999 TO EHTRNTYP OF KRSB-EXT
      *    Batch Account Number
           MOVE -99999 TO EHBTACCNBR OF KRSB-EXT
      *    Note Number
           MOVE -99 TO EHNOTNBR OF KRSB-EXT
      *    Setup key
      *    Application Code
           MOVE ZFAPPCDE OF ZFKEYTTL-WS-O TO EHAPPCDE OF KRSB
      *    Transaction Type
           MOVE ZDTRNTYP OF ZDDTLRCD-WS-O TO EHTRNTYP OF KRSB
      *    Establish starting position
           MOVE CORRESPONDING
             KRSB-EXT TO
             FBATPRA OF ACBATPNTL1-R
           MOVE CORRESPONDING
             KRSB TO
             FBATPRA OF ACBATPNTL1-R
           START ACBATPNTL1 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'FBATPRA'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
      *    Read next record with user selection
           PERFORM B3READ
           IF (W0EOFB NOT = C-IND-OFF) THEN
               CONTINUE
           ELSE
      *        Request all headings
      *        First page
               MOVE 'Y' TO W0BL1P
      *        Application Code
               MOVE 'Y' TO W0BL00
      *        Transaction Type
               MOVE 'Y' TO W0BL01
      *        Batch Account Number
               MOVE 'Y' TO W0BL02
      *        Set column headings flag
               MOVE 'Y' TO W0BCDT
      *        Print report body
               PERFORM UNTIL NOT (W0EOFB = C-IND-OFF)
      *            Prepare heading formats for printing
                   PERFORM B1PHDR
      *            Print report detail line
                   PERFORM B2PDTL
      *            Read next record with user selection
                   PERFORM B3READ
      *            Print totals
                   PERFORM B4PTOT
               END-PERFORM
           END-IF
      *==============================================================
           CONTINUE.
       B0EXIT.
           EXIT.
      /EJECT
       B1PHDR SECTION.
      *==============================================================
      *    Prepare heading formats for printing
      *==============================================================
           IF (W0BL1P = 'Y') THEN
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0BP1P
           END-IF
      *
           IF (W0BL00 = 'Y') THEN
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0BP00
           END-IF
      *
           IF (W0BL01 = 'Y') THEN
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0BP01
           END-IF
      *
           IF (W0BL02 = 'Y') THEN
      *        Signal that format is now ready to print
               MOVE 'Y' TO W0BP02
           END-IF
      *
      *==============================================================
           CONTINUE.
       B1EXIT.
           EXIT.
      /EJECT
       B2PDTL SECTION.
      *==============================================================
      *    Process detail record
      *==============================================================
      *    Load details format
      *    Application Code
           MOVE EHAPPCDE OF FBATPRA TO ZEAPPCDE OF ZEDTLRCD-WS-O
      *    Transaction Type
           MOVE EHTRNTYP OF FBATPRA TO ZETRNTYP OF ZEDTLRCD-WS-O
      *    Batch Account Number
           MOVE EHBTACCNBR OF FBATPRA TO ZEBTACCNBR OF ZEDTLRCD-WS-O
      *    Note Number
           MOVE EHNOTNBR OF FBATPRA TO ZENOTNBR OF ZEDTLRCD-WS-O
      *    Note
           MOVE EHNOTTXT OF FBATPRA TO ZENOTTXT OF ZEDTLRCD-WS-O
      *    Signal that format is now ready to print
           MOVE 'Y' TO W0BPDT
      *    Call print routine
           PERFORM Q0PRNT
      *
      *==============================================================
           CONTINUE.
       B2EXIT.
           EXIT.
      /EJECT
       B3READ SECTION.
      *==============================================================
      *    Read next record
      *==============================================================
      *    Hold current values
           MOVE EHAPPCDE OF FBATPRA TO WZB001
           MOVE EHTRNTYP OF FBATPRA TO WZB002
           MOVE EHBTACCNBR OF FBATPRA TO WZB003
      *    Read next record
           SET C-UNTIL-FALSE TO TRUE
           PERFORM UNTIL (C-UNTIL-TRUE)
               SET C-INDICATOR-OFF(90) TO TRUE
               READ ACBATPNTL1 NEXT
                 FORMAT IS 'FBATPRA'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   ELSE
                       MOVE CORRESPONDING
                         FBATPRA OF ACBATPNTL1-R TO
                         KRSB-EXT
                       MOVE KRSB-EXT TO KRSB-TMP
                       IF (KRSB NOT = KRSB-TMP) THEN
                           SET C-INDICATOR-ON(90) TO TRUE
                       END-IF
                   END-IF
               END-IF
      *        Initialise Full Externally Described Keylist
      *        Application Code
               MOVE LOW-VALUES TO EHAPPCDE OF KRSB-EXT
      *        Transaction Type
               MOVE -999 TO EHTRNTYP OF KRSB-EXT
      *        Batch Account Number
               MOVE -99999 TO EHBTACCNBR OF KRSB-EXT
      *        Note Number
               MOVE -99 TO EHNOTNBR OF KRSB-EXT
      *        Transfer error indicator to EOF flag
               MOVE IND(90) TO W0EOFB
      *        Quit if no record read
               IF (W0EOFB NOT = C-IND-ON) THEN
      *            Select record unless user action states otherwise
                   MOVE 'Y' TO W0RSL
               END-IF
           IF (W0RSL = 'Y' OR
               W0EOFB = C-IND-ON)
             SET C-UNTIL-TRUE TO TRUE
           END-IF
           END-PERFORM
      *
      *    Reset key level breaks
      *    Application Code
           MOVE SPACES TO W0BL00
      *    Transaction Type
           MOVE SPACES TO W0BL01
      *    Batch Account Number
           MOVE SPACES TO W0BL02
           IF (W0EOFB = C-IND-ON) THEN
      *        End of file - Signal all level breaks
      *        Application Code
               MOVE 'Y' TO W0BL00
      *        Transaction Type
               MOVE 'Y' TO W0BL01
      *        Batch Account Number
               MOVE 'Y' TO W0BL02
           ELSE
      *        Next record - Detect level breaks
               IF (EHAPPCDE OF FBATPRA NOT = WZB001) THEN
      *            Set on level break indicator
                   MOVE 'Y' TO W0BL00
               END-IF
               IF (EHTRNTYP OF FBATPRA NOT = WZB002 OR
                   W0BL00     = 'Y') THEN
      *            Set on level break indicator
                   MOVE 'Y' TO W0BL01
               END-IF
               IF (EHBTACCNBR OF FBATPRA NOT = WZB003 OR
                   W0BL01     = 'Y') THEN
      *            Set on level break indicator
                   MOVE 'Y' TO W0BL02
               END-IF
           END-IF
      *==============================================================
           CONTINUE.
       B3EXIT.
           EXIT.
      /EJECT
       B4PTOT SECTION.
      *==============================================================
      *    Print report Totals
      *==============================================================
      *    Print level break totals as required
           IF (W0BL02 = 'Y') THEN
      *        Signal header format is no longer ready
               MOVE SPACES TO W0BP02
           END-IF
      *
           IF (W0BL01 = 'Y') THEN
      *        Signal header format is no longer ready
               MOVE SPACES TO W0BP01
           END-IF
      *
           IF (W0BL00 = 'Y') THEN
      *        Signal header format is no longer ready
               MOVE SPACES TO W0BP00
           END-IF
      *
           IF (W0EOFB = C-IND-ON) THEN
               CONTINUE
           END-IF
      *
      *==============================================================
           CONTINUE.
       B4EXIT.
           EXIT.
      /EJECT
       Q0PRNT SECTION.
      *==============================================================
      *    Print report formats
      *==============================================================
      *    Select formats to print
           PERFORM Q1FSEL
      *    Calculate length of formats selected for printing
           PERFORM Q2PLEN
      *    Add column heading length to print length
           ADD W0COLN TO W0FSUM
           IF (W0NEWP NOT = 'Y') THEN
      *        Signal overflow if requested headings would cause
      *        detail format to start past the overflow line
               IF (W0FSUM > W0OFL) THEN
                   MOVE 'Y' TO W0NEWP
               ELSE
      *            Signal overflow if requested headings would cause
      *            Detail format to be printed past end of page
                   ADD W0DTLN TO W0FSUM
                   IF (W0FSUM > W0PGL) THEN
                       MOVE 'Y' TO W0NEWP
                   END-IF
               END-IF
           END-IF
      *    Set new page flag if external overflow occured
           IF (C-INDICATOR-ON(97)) THEN
               MOVE 'Y' TO W0NEWP
           END-IF
      *    Print Standard report header of Prt Batch Parm Listing
      *    If it is ready to print, then do so,
           IF (W0NEWP = 'Y') THEN
               PERFORM Q3PTNP
           END-IF
      *
      *    Print First Page Format of Prt Batch Parm Listing
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0AP1P = 'Y' OR
               W0NEWP = 'Y' AND
               W0AP1P = 'P') THEN
      *        Reset format print flag
               MOVE SPACES TO W0AP1P
      *        Clear first page flag.
               MOVE SPACES TO W0AL1P
           END-IF
      *    Print Application Code of Prt Batch Parm Listing
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0AP00 = 'Y' OR
               W0NEWP = 'Y' AND
               W0AP00 = 'P') THEN
               MOVE 'Y' TO W0PFM
      *        USER: On print of Application Code format
      *        D:Application Desc
               MOVE SPACES TO ZCBITX OF ZCKEYHDR-WS-O
      *        D:Application Desc
      *        Rtv Batch Description - Batch Application  * 
               PERFORM SA1RVGN
               IF (W0PFM = 'Y') THEN
      *            Print format
                   WRITE ACPPRTPRMP-F FROM ZCKEYHDR-WS-O
                     FORMAT IS 'ZCKEYHDR' INDICATORS ARE INDICS
                   END-WRITE
                   ACCEPT ACPPRTPRMP-I-O-PRTF FROM I-O-FEEDBACK-AREA
                     FOR ACPPRTPRMP
      *            Set column headings flag
                   MOVE 'Y' TO W0ACDT
               END-IF
      *
      *        Reset format print flag
               MOVE 'P' TO W0AP00
           END-IF
      *    Print Transaction Type of Prt Batch Parm Listing
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0AP01 = 'Y' OR
               W0NEWP = 'Y' AND
               W0AP01 = 'P') THEN
      *        Reset format print flag
               MOVE SPACES TO W0AP01
           END-IF
      *    Print Detail line. of Prt Batch Parm Listing
      *    If new page then set column headings active
           IF (W0NEWP = 'Y') THEN
               MOVE 'Y' TO W0ACDT
           END-IF
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0APDT = 'Y' OR
               W0NEWP = 'Y' AND
               W0APDT = 'P') THEN
               MOVE 'Y' TO W0PFM
      *        USER: On print of detail format
      *        Batch Account Number
               MOVE ZDBTACCNBR OF ZDDTLRCD-WS-O TO WUBTACCNBR OF
                 WORK-CONTEXT
      *        Debit/Credit
               MOVE ZDDBTCRD OF ZDDTLRCD-WS-O TO WUDBTCRD OF
                 WORK-CONTEXT
               IF (W0PFM = 'Y') THEN
      *            Convert fields to external form
                   SET C-INDICATOR-OFF(79) TO TRUE
      *            *IF
                   IF (ZDBTACCNBR OF ZDDTLRCD-WS-O = ZEROS) THEN
                       SET C-INDICATOR-ON(79) TO TRUE
                   END-IF
                   SET C-INDICATOR-OFF(78) TO TRUE
      *            *IF
                   IF (WUUYESNO OF WORK-CONTEXT = 'N') THEN
                       SET C-INDICATOR-ON(78) TO TRUE
                   END-IF
                   SET C-INDICATOR-OFF(77) TO TRUE
      *            *IF
                   IF (WUUPRINT OF WORK-CONTEXT = 'N') THEN
                       SET C-INDICATOR-ON(77) TO TRUE
                   END-IF
      *            Print column headings if required
                   IF (W0ACDT = 'Y') THEN
                       WRITE ACPPRTPRMP-F FROM ZDCOLHDG-WS-O
                         FORMAT IS 'ZDCOLHDG' INDICATORS ARE INDICS
                       END-WRITE
                       ACCEPT ACPPRTPRMP-I-O-PRTF FROM
                         I-O-FEEDBACK-AREA FOR ACPPRTPRMP
      *                Clear column headings control flag
                       MOVE SPACES TO W0ACDT
                   END-IF
      *            Print format
                   WRITE ACPPRTPRMP-F FROM ZDDTLRCD-WS-O
                     FORMAT IS 'ZDDTLRCD' INDICATORS ARE INDICS
                   END-WRITE
                   ACCEPT ACPPRTPRMP-I-O-PRTF FROM I-O-FEEDBACK-AREA
                     FOR ACPPRTPRMP
               END-IF
      *
      *        Reset format print flag
               MOVE SPACES TO W0APDT
           END-IF
      *    Print First Page Format of Prt Batch Parameter Note
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0BP1P = 'Y' OR
               W0NEWP = 'Y' AND
               W0BP1P = 'P') THEN
      *        Reset format print flag
               MOVE SPACES TO W0BP1P
      *        Clear first page flag.
               MOVE SPACES TO W0BL1P
           END-IF
      *    Print Application Code of Prt Batch Parameter Note
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0BP00 = 'Y' OR
               W0NEWP = 'Y' AND
               W0BP00 = 'P') THEN
      *        Reset format print flag
               MOVE SPACES TO W0BP00
           END-IF
      *    Print Transaction Type of Prt Batch Parameter Note
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0BP01 = 'Y' OR
               W0NEWP = 'Y' AND
               W0BP01 = 'P') THEN
      *        Reset format print flag
               MOVE SPACES TO W0BP01
           END-IF
      *    Print Batch Account Number of Prt Batch Parameter Note
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0BP02 = 'Y' OR
               W0NEWP = 'Y' AND
               W0BP02 = 'P') THEN
      *        Reset format print flag
               MOVE SPACES TO W0BP02
           END-IF
      *    Print Detail line. of Prt Batch Parameter Note
      *    If new page then set column headings active
           IF (W0NEWP = 'Y') THEN
               MOVE 'Y' TO W0BCDT
           END-IF
      *    If it is ready to print, then do so,
      *    or if new page & print on new page selected &
      *    active then set print format flag
           IF (W0BPDT = 'Y' OR
               W0NEWP = 'Y' AND
               W0BPDT = 'P') THEN
      *        Print column headings if required
               IF (W0BCDT = 'Y') THEN
                   WRITE ACPPRTPRMP-F FROM ZECOLHDG-WS-O
                     FORMAT IS 'ZECOLHDG' INDICATORS ARE INDICS
                   END-WRITE
                   ACCEPT ACPPRTPRMP-I-O-PRTF FROM I-O-FEEDBACK-AREA
                     FOR ACPPRTPRMP
      *            Clear column headings control flag
                   MOVE SPACES TO W0BCDT
               END-IF
      *        Print format
               WRITE ACPPRTPRMP-F FROM ZEDTLRCD-WS-O
                 FORMAT IS 'ZEDTLRCD' INDICATORS ARE INDICS
               END-WRITE
               ACCEPT ACPPRTPRMP-I-O-PRTF FROM I-O-FEEDBACK-AREA FOR
                 ACPPRTPRMP
      *
      *        Reset format print flag
               MOVE SPACES TO W0BPDT
           END-IF
      *    Clear new page flag
           MOVE SPACES TO W0NEWP
      *==============================================================
           CONTINUE.
       Q0EXIT.
           EXIT.
      /EJECT
       Q1FSEL SECTION.
      *==============================================================
      *    Format select
      *==============================================================
           MOVE SPACES TO W0SKP
      *    Cascade skip to new page requests upwards
           IF (W0AP00 = 'Y') THEN
               MOVE 'Y' TO W0SKP
           END-IF
      *    Request new page if required
           IF (W0SKP = 'Y') THEN
               MOVE 'Y' TO W0NEWP
           END-IF
      *==============================================================
           CONTINUE.
       Q1EXIT.
           EXIT.
      /EJECT
       Q2PLEN SECTION.
      *==============================================================
      *    Evaluate print length
      *==============================================================
           MOVE YXCLN OF ACPPRTPRMP-I-O-PRTF TO W0FSUM
           MOVE ZERO TO W0DTLN
           MOVE ZERO TO W0COLN
      *    * First Page Format of Prt Batch Parm Listing
           IF (W0AP1P = 'Y') THEN
               ADD 0 TO W0FSUM
           END-IF
      *
      *    * Application Code of Prt Batch Parm Listing
           IF (W0AP00 = 'Y') THEN
               ADD 6 TO W0FSUM
           END-IF
      *
      *    * Transaction Type of Prt Batch Parm Listing
           IF (W0AP01 = 'Y') THEN
               ADD 0 TO W0FSUM
           END-IF
      *
      *    Detail line. OF Prt Batch Parm Listing
           IF (W0APDT = 'Y') THEN
               MOVE 3 TO W0DTLN
               IF (W0ACDT = 'Y') THEN
                   MOVE 0 TO W0COLN
               END-IF
           END-IF
      *
      *    * First Page Format of Prt Batch Parameter Note
           IF (W0BP1P = 'Y') THEN
               ADD 0 TO W0FSUM
           END-IF
      *
      *    * Application Code of Prt Batch Parameter Note
           IF (W0BP00 = 'Y') THEN
               ADD 0 TO W0FSUM
           END-IF
      *
      *    * Transaction Type of Prt Batch Parameter Note
           IF (W0BP01 = 'Y') THEN
               ADD 0 TO W0FSUM
           END-IF
      *
      *    * Batch Account Number of Prt Batch Parameter Note
           IF (W0BP02 = 'Y') THEN
               ADD 0 TO W0FSUM
           END-IF
      *
      *    Detail line. OF Prt Batch Parameter Note
           IF (W0BPDT = 'Y') THEN
               MOVE 1 TO W0DTLN
               IF (W0BCDT = 'Y') THEN
                   MOVE 4 TO W0COLN
               END-IF
           END-IF
      *
      *==============================================================
           CONTINUE.
       Q2EXIT.
           EXIT.
      /EJECT
       Q3PTNP SECTION.
      *==============================================================
      *    Print report formats
      *==============================================================
      *    USER: Process top of page
      *    Cvt JOB Dte - Rpt/Scn Fmt - #Date Functions  * 
      *.Start.of.User.source...........................................
            MOVE ZZJDD   TO CVT-DTE-RPT-DD
                         OF CVT-DTE-TO-RPT-STRUCTURE
            MOVE ZZJMM   TO CVT-DTE-RPT-MM
                         OF CVT-DTE-TO-RPT-STRUCTURE
            MOVE ZZJYY   TO CVT-DTE-RPT-YY
                         OF CVT-DTE-TO-RPT-STRUCTURE
            IF ZZJCC = 1
                MOVE 20  TO CVT-DTE-RPT-CC
                         OF CVT-DTE-TO-RPT-STRUCTURE
            ELSE
                MOVE 19  TO CVT-DTE-RPT-CC
                         OF CVT-DTE-TO-RPT-STRUCTURE
            END-IF
            MOVE CVT-DTE-TO-RPT-STRUCTURE
                         TO VADZDX  OF ZAPAGHDR-WS-O
      *.End.of.User.source.............................................
      *    Print format
           WRITE ACPPRTPRMP-F FROM ZAPAGHDR-WS-O
             FORMAT IS 'ZAPAGHDR' INDICATORS ARE INDICS
           END-WRITE
           ACCEPT ACPPRTPRMP-I-O-PRTF FROM I-O-FEEDBACK-AREA FOR
             ACPPRTPRMP
      *    Clear page overflow indicator
           SET C-INDICATOR-OFF(97) TO TRUE
      *==============================================================
           CONTINUE.
       Q3EXIT.
           EXIT.
      /EJECT
       SA1RVGN SECTION.
      *==============================================================
      *    Rtv Batch Description - Batch Application  * 
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    USER: Initialize routine
      *    Application Description
           MOVE SPACES TO ZCBITX OF ZCKEYHDR-WS-O
           MOVE SPACES TO ZCBITX OF ZCKEYHDR-WS-O
      *    Setup key
      *    Application Code
           MOVE ZCAPPCDE OF ZCKEYHDR-WS-O TO ANAPPCDE OF KRSSA1
      *    Initialise Full Externally Described Keylist
      *    Application Code
           MOVE LOW-VALUES TO ANAPPCDE OF EXTSA1
           MOVE CORRESPONDING
             KRSSA1 TO
             FBTAPBS OF ACBATAPPL1-R
           SET C-INDICATOR-OFF(90) TO TRUE
           READ ACBATAPPL1
             FORMAT IS 'FBTAPBS'
           END-READ
           IF (C-NO-RECORD) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               END-IF
           END-IF
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'JSM0055' TO W0RTN
           END-IF
           IF (C-INDICATOR-OFF(90)) THEN
      *        USER: Process Data record
      *        Application Description
               MOVE ANAPPDES OF FBTAPBS OF ACBATAPPL1-R TO ZCBITX OF
                 ZCKEYHDR-WS-O
           END-IF
      *==============================================================
           CONTINUE.
       SA1EXIT.
           EXIT.
      /EJECT
       UA1SUBR SECTION.
      *==============================================================
      *    Embedded PRTOBJ : Prt Batch Parameter Note
      *==============================================================
      *    Prt Batch Parameter Note: Mainline
           PERFORM B0MAIN
      *==============================================================
           CONTINUE.
       UA1EXIT.
           EXIT.
      /EJECT
       ZXEXPG SECTION.
      *==============================================================
      *    Exit program
      *==============================================================
           MOVE SPACES TO P0RTN
           PERFORM ZYEXPG
      *==============================================================
           CONTINUE.
       ZXEXIT.
           EXIT.
      /EJECT
       ZYEXPG SECTION.
      *==============================================================
      *    Exit program: Direct
      *==============================================================
           CLOSE ACPPRTPRMP
           CLOSE ACBATPRML1
           CLOSE ACBATAPPL1
           CLOSE ACBATPNTL1
      *    Reset entry parameters as appropriate
           PERFORM ZZEXPM.
      *    Exit program
           CONTINUE.
       ZYEXPG-EXIT.
           GOBACK.
      *==============================================================
           CONTINUE.
       ZYEXIT.
           EXIT.
      /EJECT
       ZZEXPM SECTION.
      *==============================================================
      *    Return parameters from work fields
      *==============================================================
      *==============================================================
           CONTINUE.
       ZZPEXT.
           EXIT.
      /EJECT
       ZZINIT SECTION.
      *==============================================================
      *    Initialisation
      *==============================================================
           IF (W0ICL = SPACES) THEN
      *        *Initial call
               MOVE 'Y' TO W0ICL
           ELSE
               MOVE 'N' TO W0ICL
           END-IF
           MOVE SPACES TO P0RTN
           MOVE SPACES TO W0RTN
           MOVE ZEROS  TO W0RTW
           MOVE SPACES TO W0RSF
           MOVE '400' TO W0ENV
           MOVE ALL B'0' TO INDICS
      *    Retrieve job attributes
           CALL 'Y2RTJBR' USING
             JOB-CONTEXT
           END-CALL
      *    Setup job date/time
           MOVE ZZSDT OF JOB-CONTEXT TO ZZJDT
           ACCEPT ZZTIME FROM TIME
           MOVE ZZHNS TO ZZJTM OF JOB-CONTEXT
      *    Set century digit (If YY prior to 1940 treat as 20YY)
           IF (ZZJYY < 40) THEN
               MOVE 1 TO ZZJCC
           ELSE
               MOVE 0 TO ZZJCC
           END-IF
           MOVE 'ACPPRTPRMS' TO ZZPGM OF JOB-CONTEXT
      *    Define work field U:Yes/No text
           MOVE SPACES TO WUUYESNO OF WORK-CONTEXT
      *    Define work field Batch Account Number
           MOVE ZERO TO WUBTACCNBR OF WORK-CONTEXT
      *    Define work field Debit/Credit
           MOVE SPACES TO WUDBTCRD OF WORK-CONTEXT
      *    Define work field U:Print?
           MOVE SPACES TO WUUPRINT OF WORK-CONTEXT
      *    Open files
           OPEN OUTPUT ACPPRTPRMP
           ACCEPT ACPPRTPRMP-OPEN FROM OPEN-FEEDBACK-AREA FOR ACPPRTPRMP
      *    Move main file information to JOB context
           MOVE CORRESPONDING OPENFA OF ACPPRTPRMP-OPEN TO JOB-CONTEXT
           CALL 'Y2QLVNR' USING
             ZZFFL OF JOB-CONTEXT
             ZZFLB OF JOB-CONTEXT
             ZZFQL OF JOB-CONTEXT
           END-CALL
           OPEN INPUT ACBATPRML1
           ACCEPT ACBATPRML1-OPEN FROM OPEN-FEEDBACK-AREA FOR ACBATPRML1
           OPEN INPUT ACBATAPPL1
           ACCEPT ACBATAPPL1-OPEN FROM OPEN-FEEDBACK-AREA FOR ACBATAPPL1
           OPEN INPUT ACBATPNTL1
           ACCEPT ACBATPNTL1-OPEN FROM OPEN-FEEDBACK-AREA FOR ACBATPNTL1
           MOVE 'Y' TO W0OPN
           MOVE 'N' TO W0PMT
           MOVE ZZPGM OF JOB-CONTEXT TO ZAPGM OF ZAPAGHDR-WS-O
           MOVE SPACES TO W0PFM
           MOVE ZERO TO YXWRK
           MOVE ZERO TO YXHDL
      *    Adjust page length and overflow as necessary
           SUBTRACT 2 FROM YXPGL OF ACPPRTPRMP-OPEN GIVING W0PGL
           IF (YXOFL OF ACPPRTPRMP-OPEN < W0PGL) THEN
               MOVE YXOFL OF ACPPRTPRMP-OPEN TO W0OFL
           ELSE
               SUBTRACT 2 FROM W0PGL GIVING W0OFL
           END-IF
      *    Clear overflow indicator
           SET C-INDICATOR-OFF(97) TO TRUE
      *    Request new page
           MOVE 'Y' TO W0NEWP
      *    USER: Initialize program
      *    Utl @Copyright - #Standard Functions  * 
      *==============================================================
           CONTINUE.
       ZZEXIT.
           EXIT.
