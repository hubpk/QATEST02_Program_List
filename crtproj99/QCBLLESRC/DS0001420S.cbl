       PROCESS APOST GRAPHIC.
      ***************************************************************
       IDENTIFICATION DIVISION.
     H/TITLE Dsp Wrk Veh Stor by Acc   Display file
     Z* CRTCBLPGM
     Z* OPTION(*SRCDBG) CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Display file  Version:  8.7
      *
     H* Company    : Vehicle Finance
     H* System     : Vehicle Finance
     H* User name  : PG00291
     H* Date       : 05/06/18 time: 21:07:55
     H* Copyright  : Vehicle Finance
      *
      *==============================================================
     M* MAINTENANCE   :
      *==============================================================
       PROGRAM-ID.  DS0001420S.
       SECURITY.    (C) COPYRIGHT Renault UK Ltd. 2018
                    Reproduction is not allowed without prior permission
      /EJECT
      ***************************************************************
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.  IBM-AS400.
       OBJECT-COMPUTER.  IBM-AS400.
       SPECIAL-NAMES.  OPEN-FEEDBACK IS OPEN-FEEDBACK-AREA,
           I-O-FEEDBACK IS I-O-FEEDBACK-AREA.
      /EJECT
      ***************************************************************
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      *
           SELECT DS0001420D
             ASSIGN TO WORKSTATION-DS0001420D-SI
             ORGANIZATION IS TRANSACTION
             ACCESS MODE IS DYNAMIC
             RELATIVE KEY IS ZZRR
             FILE STATUS IS FILE-STATUS, MAJOR-MINOR-CODE.
      *    DSP: Dsp Wrk Veh Stor by Acc   Display file
      *
           SELECT DSVEHHDRL5
             ASSIGN TO DATABASE-DSVEHHDRL5
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RSQ : DS Vehicle Storage Header By Dlr, Act Dat 28, VIN
      *
           SELECT DSRUNCTLL2
             ASSIGN TO DATABASE-DSRUNCTLL2
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RSQ : DS Run Control            By Process Date (D)
      *
           SELECT SDDLRDTAL1
             ASSIGN TO DATABASE-SDDLRDTAL1
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RTV : SD SEDRE Dealer           Retrieval index
      *
           SELECT DSVEHHDRL6
             ASSIGN TO DATABASE-DSVEHHDRL6
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RSQ : DS Vehicle Storage Header By Dlr, Status, Invarien
      *
           SELECT DSVEHINVL1
             ASSIGN TO DATABASE-DSVEHINVL1
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RTV : DS Vehicle Storage Inv    Retrieval index
      *
       I-O-CONTROL.
      *
      /EJECT
      ***************************************************************
       DATA DIVISION.
       FILE SECTION.
      *
      *
       FD  DS0001420D
           LABEL RECORDS ARE STANDARD.
       01  DS0001420D-F.
           COPY DDS-ALL-FORMATS OF DS0001420D.
           05 FILLER            PIC X(100).
      *
       FD  DSVEHHDRL5
           LABEL RECORDS ARE STANDARD.
       01  DSVEHHDRL5-R.
           COPY DDS-ALL-FORMATS OF DSVEHHDRL5.
      *
       FD  DSRUNCTLL2
           LABEL RECORDS ARE STANDARD.
       01  DSRUNCTLL2-R.
           COPY DDS-ALL-FORMATS OF DSRUNCTLL2.
      *
       FD  SDDLRDTAL1
           LABEL RECORDS ARE STANDARD.
       01  SDDLRDTAL1-R.
           COPY DDS-ALL-FORMATS OF SDDLRDTAL1.
      *
       FD  DSVEHHDRL6
           LABEL RECORDS ARE STANDARD.
       01  DSVEHHDRL6-R.
           COPY DDS-ALL-FORMATS OF DSVEHHDRL6.
      *
       FD  DSVEHINVL1
           LABEL RECORDS ARE STANDARD.
       01  DSVEHINVL1-R.
           COPY DDS-ALL-FORMATS OF DSVEHINVL1.
      /EJECT
      ***************************************************************
       WORKING-STORAGE SECTION.
      *
      *    Job context
       01  JOB-CONTEXT.
           COPY DDS-ALL-FORMATS OF Y2PGDSPK.
      *    Job date/time
           03  IJBDTTM.
           05  ZZJDT PIC S9(7).
           05  ZZJDTE REDEFINES ZZJDT.
           07  ZZJCC PIC S9(1).
           07  ZZJYY PIC S9(2).
           07  ZZJMM PIC S9(2).
           07  ZZJDD PIC S9(2).
           05  ZZJTM PIC S9(6).
           05  ZZJTME REDEFINES ZZJTM.
           07  ZZJHH PIC S9(2).
           07  ZZJNN PIC S9(2).
           07  ZZJSS PIC S9(2).
           03  ZZFQL PIC X(21).
           03  ZZFLB PIC X(10).
           03  ZZFFL PIC X(10).
           03  ZZFMB PIC X(10).
           03  ZZCDB PIC X(18).
           03  ZZLDB PIC X(18).
           03  ZZTMS PIC X(26).
       01  ZZTIME.
           03  ZZHNS PIC S9(6).
           03  ZZHH PIC S9(2).
      *
       77  C-IND-OFF PIC 1(1) VALUE B'0'.
       77  C-IND-ON PIC 1(1) VALUE B'1'.
       77  W0STRNG PIC X(32766).
      *
       01  FILE-STATUS PIC X(2).
           88  C-IO-OK VALUE '00'.
           88  C-EOF VALUE '10' '46'.
           88  C-NO-MOD-SFLRCDS VALUE '12'.
           88  C-IO-ERR VALUE '21' '22' '24' '30' '34' '90' '91' '92' '9
      -     '4' '95' '9A' '9H' '9I' '9K' '9M' '9N' '9P'.
           88  C-NO-RECORD VALUE '23'.
           88  C-RECORD-LOCKED VALUE '9D'.
      *
       01  UNTIL-CONDITION PIC 1(1).
           88  C-UNTIL-FALSE VALUE B'0'.
           88  C-UNTIL-TRUE VALUE B'1'.
      *
       01  FOREVER PIC 1(1) VALUE B'1'.
           88  C-FOREVER VALUE B'1'.
      *
       01  WRK-IO-TRASH-AREA PIC X(1).
      *
       01  P2PARM.
      *    U:View number
           03  P2IVEWNUM PIC X(1).
       01  P3PARM.
      *    SD Dealer Number
           03  P3SDDLRNO PIC X(6).
       01  W0RTN PIC X(7).
       01  W0RSF PIC X(1).
       01  W0ENV PIC X(3).
       01  W0RTW PIC S9(9) COMP-4.
       01  W0ICL PIC X(1).
       01  ZZRRMX PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW00 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW01 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW02 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW03 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW04 PIC S9(5) COMP-3.
      *    *String work field
       01  YRSW05 PIC X(1).
       01  YRSW06.
           03  YRSW06X PIC X(1) OCCURS 10000.
      *    *Synon (9999) work field
       01  YRSW07 PIC X(9999).
      *    *Synon (9999) work field
       01  YRSW08 PIC X(9999).
      *    *Synon (9999) work field
       01  YRSW09 PIC X(9999).
      *    *Synon (9999) work field
       01  YRSW0A PIC X(9999).
      *    *Synon (9999) work field
       01  YRSW0B PIC X(9999).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA1.
      *    DS Processing Date
           03  BNDSPRCDTX PIC S9(8).
      *..............................................................
      *    Define keylist
       01  KRSSA2.
      *    SD Dealer Number
           03  K5SDDLRNO PIC X(6).
      *    Define keylist
       01  KRSSA2-TMP.
      *    SD Dealer Number
           03  K5SDDLRNO PIC X(6).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA2.
      *    SD Dealer Number
           03  K5SDDLRNO PIC X(6).
      *..............................................................
      *    Define keylist
       01  KPSSA3.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Processing Status
           03  BLDSPRCSTS PIC X(2).
      *    Define keylist
       01  KPSSA3-TMP.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Processing Status
           03  BLDSPRCSTS PIC X(2).
      *    Define keylist
       01  KRSSA3.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    Define keylist
       01  KRSSA3-TMP.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA3.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Processing Status
           03  BLDSPRCSTS PIC X(2).
      *    Invariant BCV
           03  BLINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BLSUFFIX50 PIC S9(5).
      *..............................................................
      *    Define keylist
       01  KRSSA4.
      *    Invariant BCV
           03  BMINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BMSUFFIX50 PIC S9(5).
      *    Owning Account
           03  BMOWNACC PIC X(6).
      *    Define keylist
       01  KRSSA4-TMP.
      *    Invariant BCV
           03  BMINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BMSUFFIX50 PIC S9(5).
      *    Owning Account
           03  BMOWNACC PIC X(6).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA4.
      *    Invariant BCV
           03  BMINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BMSUFFIX50 PIC S9(5).
      *    Owning Account
           03  BMOWNACC PIC X(6).
      *    DS VIN Invoice Line Suffx
           03  BMDSVEHILS PIC S9(5).
      *..............................................................
      *    *Synon (17,7) work field
       01  W0WD01 PIC S9(10)V9(7) COMP-3.
      *    *Synon (17,7) work field
       01  W0WD00 PIC S9(10)V9(7) COMP-3.
       01  KPOS.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Actual Arrival Dock 28
           03  BLDSARDD28 PIC S9(8) COMP-3.
      *    DS VIN
           03  BLDSVEHSVN PIC X(17).
      *    Suffix (5.0)
           03  BLSUFFIX50 PIC S9(5).
       01  KPOS-TMP.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Actual Arrival Dock 28
           03  BLDSARDD28 PIC S9(8) COMP-3.
      *    DS VIN
           03  BLDSVEHSVN PIC X(17).
      *    Suffix (5.0)
           03  BLSUFFIX50 PIC S9(5).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  KPOS-EXT.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Actual Arrival Dock 28
           03  BLDSARDD28 PIC S9(8) COMP-3.
      *    DS VIN
           03  BLDSVEHSVN PIC X(17).
      *    Suffix (5.0)
           03  BLSUFFIX50 PIC S9(5).
      *..............................................................
       01  KRST.
      *    Owning Account
           03  BLOWNACC PIC X(6).
       01  KRST-TMP.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  KRST-EXT.
      *    Owning Account
           03  BLOWNACC PIC X(6).
      *    DS Actual Arrival Dock 28
           03  BLDSARDD28 PIC S9(8) COMP-3.
      *    DS VIN
           03  BLDSVEHSVN PIC X(17).
      *    Suffix (5.0)
           03  BLSUFFIX50 PIC S9(5).
      *..............................................................
      *    Suffix (5.0)
       01  WZSUFFIX50 PIC S9(5).
      *    Owning Account
       01  WZOWNACC PIC X(6).
      *    DS Actual Arrival Dock 28
       01  WZDSARDD28 PIC S9(8) COMP-3.
      *    DS VIN
       01  WZDSVEHSVN PIC X(17).
       01  ZZRROK PIC S9(5) COMP-3.
       01  WKIND0-A.
           03  WKIND0 PIC 1(1) OCCURS 1.
       01  WKIND1-A.
           03  WKIND1 PIC 1(1) OCCURS 1.
       01  ZZRRRD PIC S9(9) COMP-3.
       01  ZZSPG PIC S9(3) COMP-3.
       01  ZZSLIN PIC S9(3) COMP-3.
       01  W0SPG PIC S9(3) COMP-3.
       01  W0RR0 PIC S9(4) COMP-3.
       01  ZZSFLN PIC S9(9) COMP-3.
       01  BB-SELECT-FLAG PIC 1(1).
           88  BB-SELECT-ERROR VALUE B'0'.
           88  BB-SELECT-OK VALUE B'1'.
       01  W0RSL PIC X(1).
      *    *Synon (5,0) work field
       01  YRSW0C PIC S9(5) COMP-3.
       01  YRSW0D.
           03  YRSW0DX PIC X(1) OCCURS 10000.
       01  XDSEL PIC X(1).
       01  YDOW.
           03  YDOE PIC X(1) OCCURS 7.
       01  XDCDW PIC X(7).
       01  XDWSL PIC S9(1) COMP-3.
       01  XDWK1 PIC S9(8) COMP-3.
       01  XDAY1 PIC S9(6) COMP-3.
       01  XDWK4 PIC S9(6) COMP-3.
       01  XDAY2 PIC S9(6) COMP-3.
       01  XABEG PIC S9(6) COMP-3.
       01  XAEND PIC S9(6) COMP-3.
       01  XDURR PIC S9(8) COMP-3.
       01  XDLSW PIC S9(1) COMP-3.
       01  YY PIC S9(6) COMP-3.
      *    Define keylist
       01  KRSSA5.
      *    Invariant BCV
           03  BMINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BMSUFFIX50 PIC S9(5).
      *    Owning Account
           03  BMOWNACC PIC X(6).
      *    Define keylist
       01  KRSSA5-TMP.
      *    Invariant BCV
           03  BMINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BMSUFFIX50 PIC S9(5).
      *    Owning Account
           03  BMOWNACC PIC X(6).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA5.
      *    Invariant BCV
           03  BMINVBCV PIC X(15).
      *    Suffix (5.0)
           03  BMSUFFIX50 PIC S9(5).
      *    Owning Account
           03  BMOWNACC PIC X(6).
      *    DS VIN Invoice Line Suffx
           03  BMDSVEHILS PIC S9(5).
      *..............................................................
       01  CAIN81 PIC 1(1).
       01  W0HLP PIC X(1).
       01  W0HPMB PIC X(10).
       01  YYHPFL PIC X(10).
       01  YYHPLB PIC X(10).
       01  ZHCSRW PIC S9(5) COMP-3.
       01  ZHCSCL PIC S9(5) COMP-3.
       01  ZZZCSRW PIC S9(3) COMP-3.
       01  ZZZCSCL PIC S9(3) COMP-3.
       01  YYHLVN PIC X(10).
       01  W0GRP PIC X(10).
       01  YYUSOP PIC X(10).
       01  YYRW PIC S9(5) COMP-3.
       01  YYCL PIC S9(5) COMP-3.
       01  YYLGCT PIC S9(5) COMP-3.
       01  YYLGVN PIC X(10).
       01  ZAPGMQ PIC X(10).
       01  ZAPGRL PIC X(5).
       01  ZAFSMS PIC X(1).
       01  W0DCF PIC X(1).
       01  YXD-A.
           03  YXD PIC S9(2) OCCURS 12.
      *    *Synon (9999) work field
       01  YRSW0E PIC X(9999).
      *    SD Dealer Number
       01  WQ0001 PIC X(6).
      *    U:Dealer Account (Input)
       01  WQ0002 PIC X(6).
       01  W0CLPG PIC X(10).
      *    Outward parameters
       01  PARC.
      *    KEY : DS Vehicle Storage Inv    By Invarient,Owner,Sfx(D
      *    I : RST Invariant BCV
      *    Invariant BCV
           03  PAINVBCV PIC X(15).
      *    I : RST Suffix (5.0)
      *    Suffix (5.0)
           03  PASUFFIX50 PIC S9(5).
      *    I : RST Owning Account
      *    Owning Account
           03  PAOWNACC PIC X(6).
      *
      *    Outward parameters
       01  PBRC.
      *    RCD : DS Vehicle Storage Header Retrieval index
      *    I : MAP DS VIN
      *    DS VIN
           03  PBDSVEHSVN PIC X(17).
      *    I : MAP DS Actual Arrival Dock 28
      *    DS Actual Arrival Dock 28
           03  PBDSARDD28 PIC S9(8) COMP-3.
      *    I : MAP DS Storage Age Date Type
      *    DS Storage Age Date Type
           03  PBDSAGETYP PIC X(1).
      *    I : MAP DS Storage Age Date Cde
      *    DS Storage Age Date Cde
           03  PBDSAGECDE PIC X(2).
      *    I : MAP DS Storage Age Date Start
      *    DS Storage Age Date Start
           03  PBDSAGESTR PIC S9(8) COMP-3.
      *    I : MAP DS Suffix From Date
      *    DS Suffix From Date
           03  PBDSSFXFRM PIC S9(8) COMP-3.
      *    I : MAP DS Suffix To Date
      *    DS Suffix To Date
           03  PBDSSFXTO PIC S9(8) COMP-3.
      *    I : MAP DS Processing Status
      *    DS Processing Status
           03  PBDSPRCSTS PIC X(2).
      *
      *    U:For length (5.0)
       01  WQ0003 PIC S9(5) COMP-3.
      *    VIN
       01  WQ0004 PIC X(17).
       01  YPMTFD PIC X(10).
       01  YAFSCH PIC S9(4) COMP-3.
       01  YZSFRC PIC S9(4) COMP-3.
       01  YZSFDL PIC S9(4) COMP-3.
       01  ZHSTRW PIC S9(4) COMP-3.
       01  ZHNDRW PIC S9(4) COMP-3.
       01  ZHRLEN PIC S9(4) COMP-3.
       01  YPMRRN PIC S9(4) COMP-3.
       01  ZHF4RW PIC S9(4) COMP-3.
       01  ZHWK1Z PIC S9(4) COMP-3.
       01  ZZSFPG PIC S9(3).
       01  W0SLM PIC S9(9) COMP-3.
       01  YSETCS PIC X(1).
       01  WCSRLC PIC X(3).
      *    *Cursor field
       01  W0CFL PIC X(10).
      *    *Cursor row
       01  W0CRW PIC S9(5) COMP-3.
      *    *Cursor column
       01  W0CCL PIC S9(5) COMP-3.
       01  ZINPOS PIC S9(5) COMP-3.
       01  ZADFMF PIC X(10).
       01  ZAMSID PIC X(7).
       01  ZAMSGF PIC X(10).
       01  ZAMSDA PIC X(132).
       01  ZAMSTP PIC X(7).
       01  ZZRR PIC 9(5) COMP-3.
      *
       01  DS0001420D-I-O-DSPF.
           COPY DDS-ALL-FORMATS OF Y2IDSPFIO.
      *    Subfile I/O feedback area
      *
       01  MAJOR-MINOR-CODE.
           COPY DDS-ALL-FORMATS OF Y2IMAJMIN.
      *    Display major/minor code for timeouts
      *
       01  DSVEHHDRL5-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  DSRUNCTLL2-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  SDDLRDTAL1-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  DSVEHHDRL6-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  DSVEHINVL1-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  DS0001420D-WS-O.
           03  ZSFLRCD-WS-O.
           COPY DDS-ZSFLRCD-O OF DS0001420D.
             06 FILLER            PIC X(1).
           03  ZSFLCTL-WS-O.
           COPY DDS-ZSFLCTL-O OF DS0001420D.
             06 FILLER            PIC X(1).
           03  ZCMDTXT1-WS-O.
           COPY DDS-ZCMDTXT1-O OF DS0001420D.
             06 FILLER            PIC X(1).
           03  ZMSGCTL-WS-O.
           COPY DDS-ZMSGCTL-O OF DS0001420D.
             06 FILLER            PIC X(1).
       01  DS0001420D-WS-I.
           03  ZSFLRCD-WS-I.
           COPY DDS-ZSFLRCD-I OF DS0001420D.
             06  FILLER        PIC X.
           03  ZSFLCTL-WS-I.
           COPY DDS-ZSFLCTL-I OF DS0001420D.
             06  FILLER        PIC X.
           03  ZCMDTXT1-WS-I.
           COPY DDS-ZCMDTXT1-I OF DS0001420D.
             06  FILLER        PIC X.
           03  ZMSGCTL-WS-I.
           COPY DDS-ZMSGCTL-I OF DS0001420D.
             06  FILLER        PIC X.
       01  W0OPN PIC X(1).
       01  W0PMT PIC X(1).
      *    DS Processing Status
       01  WORK-CONTEXT.
           03  YL0001 PIC X(2).
      *    U:DS Processing Status
           03  YL0002 PIC X(2).
      *    Create Date D8#
           03  YN0001 PIC S9(8) COMP-3.
      *    Create Time
           03  YN0002 PIC S9(6) COMP-3.
      *    Create User
           03  YN0003 PIC X(10).
      *    Create Program
           03  YN0004 PIC X(10).
      *    Create Job
           03  YN0005 PIC X(10).
      *    Date Last Changed D8#
           03  YN0006 PIC S9(8) COMP-3.
      *    Time Last Changed
           03  YN0007 PIC S9(6) COMP-3.
      *    User Last Changed
           03  YN0008 PIC X(10).
      *    Program Last Changed
           03  YN0009 PIC X(10).
      *    Job Last Changed
           03  YN0010 PIC X(10).
      *    SD Dealer Abbreviation
           03  YN0011 PIC X(6).
      *    SD Account Type
           03  YN0012 PIC X(1).
      *    SD BIR Block Code
           03  YN0013 PIC X(1).
      *    SD Code DC
           03  YN0014 PIC X(1).
      *    SD Code DCZ
           03  YN0015 PIC X(2).
      *    SD Engagement Code
           03  YN0016 PIC X(1).
      *    SD Commercial Zone
           03  YN0017 PIC X(2).
      *    SD Commercial Region
           03  YN0018 PIC X(2).
      *    SD Incorporated Dealer
           03  YN0019 PIC X(6).
      *    SD Language Code
           03  YN0020 PIC X(4).
      *    SD BIR Account Number
           03  YN0021 PIC X(5).
      *    SD Address Line 1
           03  YN0022 PIC X(35).
      *    SD Address Line 2
           03  YN0023 PIC X(35).
      *    SD Address Line 3
           03  YN0024 PIC X(35).
      *    SD Postcode
           03  YN0025 PIC X(9).
      *    SD Town
           03  YN0026 PIC X(35).
      *    SD Telephone Number
           03  YN0027 PIC X(16).
      *    SD Fax Number
           03  YN0028 PIC X(16).
      *    SD Solvency Code
           03  YN0029 PIC X(1).
      *    SD Invoice Account Number
           03  YN0030 PIC X(6).
      *    SD Stock Type
           03  YN0031 PIC X(1).
      *    SD Invoicing Authorised
           03  YN0032 PIC X(1).
      *    SD DAD Authorised
           03  YN0033 PIC X(1).
      *    SD Delivery Authorised
           03  YN0034 PIC X(1).
      *    SD Geographic Zone UNUSED
           03  YN0035 PIC X(1).
      *    SD Import Centre OBSOLETE
           03  YN0036 PIC X(1).
      *    SD Transport Zone UNUSED
           03  YN0037 PIC X(4).
      *    SD Carrier UNUSED
           03  YN0038 PIC X(2).
      *    SD Block Code UNUSED
           03  YN0039 PIC X(1).
      *    SD Region For Calc UNUSED
           03  YN0040 PIC X(2).
      *    SD Invoice Block UNUSED
           03  YN0041 PIC X(1).
      *    SD Defer ConsignmntUNUSED
           03  YN0042 PIC X(1).
      *    SD Active Ind UNUSED
           03  YN0043 PIC X(1).
      *    SD A/C Make (APL code)
           03  YN0044 PIC X(6).
      *    SD A/C Management Area
           03  YN0045 PIC X(3).
      *    Invariant BCV
           03  YL0003 PIC X(15).
      *    U:Total Invoice (7.2)Pen
           03  YL0004 PIC S9(5)V9(2) COMP-3.
      *    U:Total Invoice (7.2)Inv
           03  YL0005 PIC S9(5)V9(2) COMP-3.
      *    DS VEH Invoice Tot No Day
           03  YL0006 PIC S9(3).
      *    U:Text (4)
           03  YL0007 PIC X(4).
      *    U:Text (4) b
           03  YL0008 PIC X(4).
      *    U:Date YYYYMMDD
           03  YL0009 PIC S9(8) COMP-3.
      *    *Date1 (ending)
           03  YL0010 PIC S9(7) COMP-3.
      *    U:Year (4)
           03  WUUYR4 PIC S9(4) COMP-3.
      *    U:Date (6)
           03  WUHENB PIC S9(6) COMP-3.
      *    *Date2 (beginning)
           03  YL0011 PIC S9(7) COMP-3.
      *    *Duration (result)
           03  YL0012 PIC S9(8) COMP-3.
           03  WUDLN PIC X(10).
      *    U:Total Invoice (7.2)Pen
           03  YL0013 PIC S9(5)V9(2) COMP-3.
      *    U:Total Invoice (7.2)Inv
           03  YL0014 PIC S9(5)V9(2) COMP-3.
      *    Owning Account
           03  YL0015 PIC X(6).
      *    DS VIN
           03  YL0016 PIC X(17).
      *    U:Dealer Txt(4)
           03  YL0017 PIC X(4).
      *    U:Dealer Account (Input)
           03  YL0018 PIC X(6).
      *    SD Dealer Number
           03  YL0019 PIC X(6).
      *    Authorisation Status
           03  YL0020 PIC X(1).
      *    U:User ID Prefix
           03  YL0021 PIC X(2).
       01  IXDIN.
      /EJECT
      *    Internal date
           03  XDINDTS.
           05  XDINYY PIC S9(3).
           05  XDINMM PIC S9(2).
           05  XDINDD PIC S9(2).
           03  XDINDT REDEFINES XDINDTS PIC S9(7).
           03  XDINDTZ REDEFINES XDINDTS.
           05  XDINDI PIC X(1).
           05  XDIND6 PIC X(6).
       01  IXD2T.
      /EJECT
      *    Internal date
           03  XDINT2S.
           05  XDINY2 PIC S9(3).
           05  XDINM2 PIC S9(2).
           05  XDIND2 PIC S9(2).
           03  XDINT2 REDEFINES XDINT2S PIC S9(7).
      /EJECT
       01  IXDEX.
      *    External date
           03  XDEXDTS.
           05  XDEY01 PIC S9(4).
           05  XDEX12 REDEFINES XDEY01.
           07  XDEX01 PIC S9(2).
           07  XDEX02 PIC S9(2).
           05  XDEY02 PIC S9(4).
           05  XDEX34 REDEFINES XDEY02.
           07  XDEX03 PIC S9(2).
           07  XDEX04 PIC S9(2).
           03  XDEX66 REDEFINES XDEXDTS.
           05  XDEX60 PIC S9(2).
           05  XDEX06 PIC S9(6).
           03  XDEXDT REDEFINES XDEXDTS PIC S9(8).
       01  IXDI8T.
      /EJECT
      *    Internal date
           03  XDI8DTS.
           05  XDI8CY PIC S9(4).
           05  FILLER REDEFINES XDI8CY.
           07  XDI8CC PIC S9(1).
           07  XDI8YY PIC S9(3).
           05  XDI8MM PIC S9(2).
           05  XDI8DD PIC S9(2).
           03  XDI8DT REDEFINES XDI8DTS PIC S9(8).
      /EJECT
       01  IXTCK.
      *    Time: hours, minutes, seconds
           03  XTTIMS.
           05  XTHH PIC S9(2).
           05  XTNN PIC S9(2).
           05  XTSS PIC S9(2).
           03  XTTIM REDEFINES XTTIMS PIC S9(6).
       01  ZDWK01 PIC S9(3) COMP-3.
       01  ZDWK02 PIC S9(3) COMP-3.
       01  DATA-AREA-NAME PIC X(10).
       01  XDDTFM PIC X(3).
      *
      *    Indicators
       01  INDICS.
           03  IND PIC 1(1) OCCURS 99 INDICATOR 1.
           88  C-INDICATOR-ON VALUE B'1'.
           88  C-INDICATOR-OFF VALUE B'0'.
      *
      /EJECT
      *    Parameter declarations
       01  US-FLDCHKDTX.
           05  US-DATE-DMCY            PIC 9(8).
           05  US-DATE-DMCY-X          REDEFINES US-DATE-DMCY.
               15  US-DD               PIC 9(2).
               15  US-MM               PIC 9(2).
               15  US-CC               PIC 9(2).
               15  US-YY               PIC 9(2).
           05  US-DATE-CYMD            PIC 9(8).
           05  US-DATE-CYMD-X          REDEFINES US-DATE-CYMD.
               15  US-CC-2             PIC 9(2).
               15  US-YY-2             PIC 9(2).
               15  US-MM-2             PIC 9(2).
               15  US-DD-2             PIC 9(2).
           05  US-MONTH-MAX-X          PIC X(24)      VALUE
               '312931303130313130313031'.
           05  REDEFINES US-MONTH-MAX-X.
               10  US-MONTH-MAX        PIC 9(2)       OCCURS 12.
           05  US-LEAP-CHECK           PIC 9(3)       COMP-3.
           05  US-LEAP-REMAIN          PIC 9          COMP-3.
           05  US-VALID-FLAG           PIC X.
     **
      * Utl set screen sysid (Fle
      *.Start.of.User.source...........................................
       01  RUK-DTAARA-NAME             PIC X(10).
      *.End.of.user.source.............................................
      /EJECT
      ***************************************************************
       LINKAGE SECTION.
      *    Return code
       01  P0RTN PIC X(7).
       01  P1PARM.
      *    Owning Account
           03  P1OWNACC PIC X(6).
      *    SD Dealer Number
       01  WP0001 PIC X(6).
      ***************************************************************
       PROCEDURE DIVISION USING
             P0RTN
      *    KEY: DS Vehicle Storage Header By Dlr, Act Dat 28, VIN
      *    I : RST Owning Account
      *    N :  U:View number
      *    O :  SD Dealer Number
      *    KEY : DS Vehicle Storage Header
             P1PARM
      *    SD Dealer Number
             WP0001
           .
      *    Initialise work fields from entry parameters
           MOVE SPACES TO P3SDDLRNO
      ***************************************************************
           CONTINUE.
       MAINLINE SECTION.
      *    Initialize
           PERFORM ZZINIT
      *
      *    Initialisation
           MOVE ZZPGM OF JOB-CONTEXT TO ZZPGM OF ZMSGCTL-WS-O
           PERFORM UNTIL NOT (C-FOREVER)
      *        Initialise & load subfile page
               PERFORM BAIZSF
               MOVE 'N' TO W0RSF
      *        Display screen until reload requested
               PERFORM UNTIL NOT (W0RSF = 'N')
      *            Display screen
                   PERFORM CAEXFM
      *            Process response
      *            EVALUATE
      *                Cancel & exit program
                       IF (C-INDICATOR-ON(03) OR
                           C-INDICATOR-ON(12)) THEN
                           PERFORM ZXEXPG
      *                HOME: Request subfile reload
                       ELSE IF (C-INDICATOR-ON(05)) THEN
                           PERFORM FBRQRL
      *                Display next SFL page
                       ELSE IF (C-INDICATOR-ON(27)) THEN
                           PERFORM BBLDSF
      *                Process screen input
                       ELSE
                           PERFORM DAPRZZ
                   END-IF END-IF END-IF
      *
               END-PERFORM
           END-PERFORM
      ***************************************************************
           CONTINUE.
      /EJECT
       BAIZSF SECTION.
      *==============================================================
      *    Initialise & load subfile page
      *==============================================================
      *    Clear subfile
           SET C-INDICATOR-ON(80) TO TRUE
           WRITE DS0001420D-F FROM ZSFLCTL-WS-O
             FORMAT IS 'ZSFLCTL' INDICATORS ARE INDICS
           END-WRITE
           SET C-INDICATOR-OFF(80) TO TRUE
           SET C-INDICATOR-OFF(81) TO TRUE
      *    Reset no of records in subfile
           MOVE ZERO TO ZZRRMX
      *    USER: Initialize subfile control
      *    Cvt DTE to DTX
      *    CASE: PAR.U:Date (CYYMMDD) is Not Zero
      *    *IF
           IF (ZZJDT OF JOB-CONTEXT NOT = 0) THEN
      *        U:Date YYYYMMDD
               ADD 19000000, ZZJDT OF JOB-CONTEXT GIVING ZCDTEYYYY OF
                 ZSFLCTL-WS-O
           ELSE
      *        CASE: *OTHERWISE
      *        U:Date YYYYMMDD
               MOVE ZEROS TO ZCDTEYYYY OF ZSFLCTL-WS-O
           END-IF
      *    Set View Mode Text
      *    U:text (78)
           MOVE SPACES TO ZCUTXT78 OF ZSFLCTL-WS-O
           MOVE SPACES TO ZCUTXT78 OF ZSFLCTL-WS-O
      *    CASE: PAR.U:View number is 1
      *    *IF
           IF (P2IVEWNUM = '1') THEN
               MOVE '1:Currently in IC' TO YRSW07
               MOVE 30 TO YRSW03
               MOVE 'T' TO YRSW05
               IF (ZCUTXT78 OF ZSFLCTL-WS-O = SPACES AND
                   YRSW05 = 'T') THEN
                   ADD  1 TO 30 GIVING YRSW04
               ELSE
                   ADD  1 TO 00078 GIVING YRSW04
               END-IF
               MOVE 00078 TO YRSW02
               MOVE ZCUTXT78 OF ZSFLCTL-WS-O TO YRSW06
               PERFORM ZCATWK
               STRING YRSW06 DELIMITED BY X'FF',
                      YRSW07 DELIMITED BY SIZE
               INTO   YRSW06
               MOVE YRSW06 TO ZCUTXT78 OF ZSFLCTL-WS-O
      *        DS Processing Status
               MOVE '01' TO YL0001 OF WORK-CONTEXT
      *        U:DS Processing Status
               MOVE '49' TO YL0002 OF WORK-CONTEXT
           ELSE
      *        CASE: PAR.U:View number is 2
      *        *IF
               IF (P2IVEWNUM = '2') THEN
                   MOVE '2:All VINS' TO YRSW08
                   MOVE 35 TO YRSW03
                   MOVE 'T' TO YRSW05
                   IF (ZCUTXT78 OF ZSFLCTL-WS-O = SPACES AND
                       YRSW05 = 'T') THEN
                       ADD  1 TO 35 GIVING YRSW04
                   ELSE
                       ADD  1 TO 00078 GIVING YRSW04
                   END-IF
                   MOVE 00078 TO YRSW02
                   MOVE ZCUTXT78 OF ZSFLCTL-WS-O TO YRSW06
                   PERFORM ZCATWK
                   STRING YRSW06 DELIMITED BY X'FF',
                          YRSW08 DELIMITED BY SIZE
                   INTO   YRSW06
                   MOVE YRSW06 TO ZCUTXT78 OF ZSFLCTL-WS-O
      *            DS Processing Status
                   MOVE '01' TO YL0001 OF WORK-CONTEXT
      *            U:DS Processing Status
                   MOVE '99' TO YL0002 OF WORK-CONTEXT
               ELSE
      *            CASE: PAR.U:View number is 3
      *            *IF
                   IF (P2IVEWNUM = '3') THEN
                       MOVE '              3:Only VINS' TO YRSW09
                       MOVE 'Now Exited / Storage Proc' TO YRSW0A
                       MOVE 1 TO YRSW03
                       MOVE 'T' TO YRSW05
                       IF (YRSW09 = SPACES AND
                           YRSW05 = 'T') THEN
                           ADD  1 TO 1 GIVING YRSW04
                       ELSE
                           ADD  1 TO 00025 GIVING YRSW04
                       END-IF
                       MOVE 00025 TO YRSW02
                       MOVE YRSW09 TO YRSW06
                       PERFORM ZCATWK
                       STRING YRSW06 DELIMITED BY X'FF',
                              YRSW0A DELIMITED BY SIZE
                       INTO   YRSW06
                       MOVE YRSW06 TO ZCUTXT78 OF ZSFLCTL-WS-O
                       MOVE 'ess Completed' TO YRSW0B
                       MOVE ZEROS TO YRSW03
                       MOVE 'T' TO YRSW05
                       IF (ZCUTXT78 OF ZSFLCTL-WS-O = SPACES AND
                           YRSW05 = 'T') THEN
                           ADD  1 TO ZEROS GIVING YRSW04
                       ELSE
                           ADD  1 TO 00078 GIVING YRSW04
                       END-IF
                       MOVE 00078 TO YRSW02
                       MOVE ZCUTXT78 OF ZSFLCTL-WS-O TO YRSW06
                       PERFORM ZCATWK
                       STRING YRSW06 DELIMITED BY X'FF',
                              YRSW0B DELIMITED BY SIZE
                       INTO   YRSW06
                       MOVE YRSW06 TO ZCUTXT78 OF ZSFLCTL-WS-O
      *                DS Processing Status
                       MOVE '50' TO YL0001 OF WORK-CONTEXT
      *                U:DS Processing Status
                       MOVE '50' TO YL0002 OF WORK-CONTEXT
                   END-IF
               END-IF
           END-IF
      *    Rtv Highest Date Dtls - DS Run Control  *
           PERFORM SA1RVGN
      *    Rtv by SD Dealer Number - SD SEDRE Dealer  *
           PERFORM SA2RVGN
      *    U:Sub-Total Unmatched
           MOVE ZEROS TO ZCUSUBUNMT OF ZSFLCTL-WS-O
      *    U:Sub-Total Days UnMatch
           MOVE ZEROS TO ZCUSUBDUNM OF ZSFLCTL-WS-O
      *    U:Sub-Total Matched
           MOVE ZEROS TO ZCUSUBMATH OF ZSFLCTL-WS-O
      *    U:Sub-Total Days Matched
           MOVE ZEROS TO ZCUSUBDMAT OF ZSFLCTL-WS-O
      *    U:Total Invoice (7.2)
           MOVE ZEROS TO ZCUTOTIN72 OF ZSFLCTL-WS-O
      *    u:count(5.0)
           MOVE ZEROS TO ZCUCOUNT5 OF ZSFLCTL-WS-O
      *    U:Count(5.0) b
           MOVE ZEROS TO ZCUCOUNT5B OF ZSFLCTL-WS-O
      *    Rtv Dlr Counts/Ttl Sts 2 - DS Vehicle Storage Header  *
           PERFORM SA3RVGN
      *    Position DBF file
      *    Setup key
      *    Owning Account
           MOVE Z2OWNACC OF ZSFLCTL-WS-O TO BLOWNACC OF KPOS
      *    DS Actual Arrival Dock 28
           MOVE Z2DSARDD28 OF ZSFLCTL-WS-O TO BLDSARDD28 OF KPOS
      *    DS VIN
           MOVE Z2DSVEHSVN OF ZSFLCTL-WS-O TO BLDSVEHSVN OF KPOS
      *    Suffix (5.0)
           MOVE Z2SUFFIX50 OF ZSFLCTL-WS-O TO BLSUFFIX50 OF KPOS
      *    Initialise Full Externally Described Keylist
      *    Owning Account
           MOVE SPACES TO BLOWNACC OF KPOS-EXT
      *    DS Actual Arrival Dock 28
           MOVE ZEROS TO BLDSARDD28 OF KPOS-EXT
      *    DS VIN
           MOVE SPACES TO BLDSVEHSVN OF KPOS-EXT
      *    Suffix (5.0)
           MOVE ZEROS TO BLSUFFIX50 OF KPOS-EXT
           MOVE CORRESPONDING
             KPOS-EXT TO
             DSVEHHDRF5 OF DSVEHHDRL5-R
           MOVE CORRESPONDING
             KPOS TO
             DSVEHHDRF5 OF DSVEHHDRL5-R
           START DSVEHHDRL5 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'DSVEHHDRF5'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
      *    Setup key
      *    Owning Account
           MOVE Z2OWNACC OF ZSFLCTL-WS-O TO BLOWNACC OF KRST
      *    Initialise Full Externally Described Keylist
      *    Owning Account
           MOVE SPACES TO BLOWNACC OF KRST-EXT
      *    DS Actual Arrival Dock 28
           MOVE ZEROS TO BLDSARDD28 OF KRST-EXT
      *    DS VIN
           MOVE SPACES TO BLDSVEHSVN OF KRST-EXT
      *    Suffix (5.0)
           MOVE ZEROS TO BLSUFFIX50 OF KRST-EXT
           SET C-INDICATOR-OFF(82) TO TRUE
           SET C-INDICATOR-OFF(87) TO TRUE
           READ DSVEHHDRL5 NEXT
             FORMAT IS 'DSVEHHDRF5'
           END-READ
           IF (C-EOF) THEN
               SET C-INDICATOR-ON(82) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   SET C-INDICATOR-ON(87) TO TRUE
               ELSE
                   MOVE CORRESPONDING
                     DSVEHHDRF5 OF DSVEHHDRL5-R TO
                     KRST-EXT
                   MOVE KRST-EXT TO KRST-TMP
                   IF (KRST NOT = KRST-TMP) THEN
                       SET C-INDICATOR-ON(82) TO TRUE
                   END-IF
               END-IF
           END-IF
      *    Initialise Full Externally Described Keylist
      *    Owning Account
           MOVE SPACES TO BLOWNACC OF KRST-EXT
      *    DS Actual Arrival Dock 28
           MOVE ZEROS TO BLDSARDD28 OF KRST-EXT
      *    DS VIN
           MOVE SPACES TO BLDSVEHSVN OF KRST-EXT
      *    Suffix (5.0)
           MOVE ZEROS TO BLSUFFIX50 OF KRST-EXT
      *    Save previous selector values
      *    Suffix (5.0)
           MOVE Z2SUFFIX50 OF ZSFLCTL-WS-O TO WZSUFFIX50
      *    Owning Account
           MOVE Z2OWNACC OF ZSFLCTL-WS-O TO WZOWNACC
      *    DS Actual Arrival Dock 28
           MOVE Z2DSARDD28 OF ZSFLCTL-WS-O TO WZDSARDD28
      *    DS VIN
           MOVE Z2DSVEHSVN OF ZSFLCTL-WS-O TO WZDSVEHSVN
      *    Load subfile page
           MOVE ZERO TO ZZRROK
           PERFORM BBLDSF
      *==============================================================
           CONTINUE.
       BAEXIT.
           EXIT.
      /EJECT
       BBLDSF SECTION.
      *==============================================================
      *    Load subfile page
      *==============================================================
      *    Re-establish fields in read-ahead record
           IF (C-INDICATOR-OFF(82)) THEN
               IF (C-INDICATOR-ON(27)) THEN
                   SET C-INDICATOR-OFF(90) TO TRUE
                   READ DSVEHHDRL5 PRIOR
                     FORMAT IS 'DSVEHHDRF5'
                   END-READ
                   IF (C-EOF) THEN
                       SET C-INDICATOR-ON(90) TO TRUE
                   ELSE
                       IF (C-IO-ERR) THEN
                           STOP RUN
                       END-IF
                   END-IF
                   SET C-INDICATOR-OFF(90) TO TRUE
                   READ DSVEHHDRL5 NEXT
                     FORMAT IS 'DSVEHHDRF5'
                   END-READ
                   IF (C-EOF) THEN
                       SET C-INDICATOR-ON(90) TO TRUE
                   ELSE
                       IF (C-IO-ERR) THEN
                           STOP RUN
                       END-IF
                   END-IF
               END-IF
           END-IF
      *
      *    Setof record error indicators
           MOVE ALL '0' TO WKIND0-A
           MOVE ALL '1' TO WKIND1-A
           MOVE WKIND0(1) TO IND(33)
      *    Start at previous highest record in SFL
           MOVE ZZRRMX TO ZZRR
      *    Reset count of DBF records read
           MOVE ZERO TO ZZRRRD
      *    Set required pages based on *Set Cursor or *Subfile Pages
           IF (W0RR0 > 0) THEN
               DIVIDE W0RR0 BY ZZSFPG GIVING ZZSPG REMAINDER ZZSLIN
               IF (ZZSLIN > 0) THEN
                   ADD 1 TO ZZSPG
               END-IF
               IF (W0SPG > ZZSPG) THEN
                   MOVE W0SPG TO ZZSPG
               END-IF
           ELSE
               MOVE W0SPG TO ZZSPG
           END-IF
      *    Compute lines required based on pages
           MULTIPLY ZZSPG BY ZZSFPG GIVING ZZSFLN
           IF (ZZSFLN > 999) THEN
               MOVE 999 TO ZZSFLN
           END-IF
      *..............................................................
      *    Load next SFL page until SFL page full, or
      *    Scan limit reached
           PERFORM UNTIL NOT (C-INDICATOR-OFF(82) AND
                              ZZRROK < ZZSFLN AND
                              ZZRRRD < W0SLM)
      *        Check selection fields - if fail, read next record
               SET BB-SELECT-OK TO TRUE
      *        DS Actual Arrival Dock 28
      *        DS VIN
               IF (Z2DSARDD28 OF ZSFLCTL-WS-O = ZERO OR
                   Z2DSVEHSVN OF ZSFLCTL-WS-O = SPACES) THEN
                   IF (BB-SELECT-OK) THEN
      *                Suffix (5.0)
                       IF (Z2SUFFIX50 OF ZSFLCTL-WS-O NOT = ZEROS) THEN
      *                    Suffix (5.0)
                           IF (BLSUFFIX50 OF DSVEHHDRF5 NOT =
                             Z2SUFFIX50 OF ZSFLCTL-WS-O) THEN
                               SET BB-SELECT-ERROR TO TRUE
                           END-IF
                       END-IF
                   END-IF
               END-IF
      *        DS Actual Arrival Dock 28
               IF (Z2DSARDD28 OF ZSFLCTL-WS-O = ZERO) THEN
                   IF (BB-SELECT-OK) THEN
      *                DS VIN
                       IF (Z2DSVEHSVN OF ZSFLCTL-WS-O NOT = SPACES) THEN
      *                    DS VIN
                           IF (BLDSVEHSVN OF DSVEHHDRF5 NOT =
                             Z2DSVEHSVN OF ZSFLCTL-WS-O) THEN
                               SET BB-SELECT-ERROR TO TRUE
                           END-IF
                       END-IF
                   END-IF
               END-IF
               IF (BB-SELECT-OK) THEN
      *            Load SFL fields
                   PERFORM MBFLZ1
                   MOVE 'Y' TO W0RSL
      *            Allow for possible *Set Cursor processing
                   ADD 1 TO ZZRR
      *            USER: Initialize subfile record from DBF record
                   MOVE 4 TO YRSW03
                   MOVE 1 TO YRSW02
                   IF (YRSW02 NOT > 0 OR
                       YRSW03 NOT > 0 OR
                       YRSW02 > 00006 OR
                       YRSW03 > 00006) THEN
                       MOVE 'Y2U0510' TO W0RTN
                   ELSE
                       MOVE P1OWNACC TO W0STRNG
                       MOVE W0STRNG(YRSW02:YRSW03) TO YL0007 OF
                         WORK-CONTEXT
                   END-IF
                   MOVE 4 TO YRSW03
                   MOVE 1 TO YRSW02
                   IF (YRSW02 NOT > 0 OR
                       YRSW03 NOT > 0 OR
                       YRSW02 > 00006 OR
                       YRSW03 > 00006) THEN
                       MOVE 'Y2U0510' TO W0RTN
                   ELSE
                       MOVE BLOWNACC OF DSVEHHDRF5 OF DSVEHHDRL5-R TO
                         W0STRNG
                       MOVE W0STRNG(YRSW02:YRSW03) TO YL0008 OF
                         WORK-CONTEXT
                   END-IF
      *            CASE:
      *            - c1 OR (c2 AND c3)
      *            |- c1    : PAR.Owning Account is Blank
      *            |- c2    : PAR.Owning Account is Not Blank
      *            |- c3    : LCL.U:Text (4) EQ LCL.U:Text (4) b
      *            '-
      *            *IF
                   IF (P1OWNACC = SPACES OR
                       (P1OWNACC NOT = SPACES AND
                       YL0007 OF WORK-CONTEXT = YL0008 OF
                     WORK-CONTEXT)) THEN
      *                Set Age - Check Record Selection
                       PERFORM UA1SUBR
      *                Owning Account
                       MOVE BLOWNACC OF DSVEHHDRF5 OF DSVEHHDRL5-R TO
                         YL0015 OF WORK-CONTEXT
      *                DS VIN
                       MOVE BLDSVEHSVN OF DSVEHHDRF5 OF DSVEHHDRL5-R TO
                         YL0016 OF WORK-CONTEXT
                   END-IF
                   SUBTRACT 1 FROM ZZRR
      *            DBF record not selected
                   IF (W0RSL = 'Y') THEN
      *                Convert fields to external form
                       PERFORM MNCVZ1
      *                Output to subfile
                       ADD 1 TO ZZRR
                       IF (ZZRR > ZERO) THEN
                           SET C-INDICATOR-ON(81) TO TRUE
                       ELSE
                           SET C-INDICATOR-OFF(81) TO TRUE
                       END-IF
                       ADD 1 TO ZZRROK
      *                If SFLRCD invalid, note that errors present
                       IF (C-INDICATOR-ON(98) AND
                           C-INDICATOR-OFF(99)) THEN
                           SET C-INDICATOR-ON(99) TO TRUE
                       END-IF
      *                Set screen conditioning indicators
                       PERFORM GADSA1
                       WRITE SUBFILE DS0001420D-F FROM ZSFLRCD-WS-O
                         FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
                       END-WRITE
                   END-IF
               END-IF
      *        Increment scan check count
               ADD 1 TO ZZRRRD
               SET C-INDICATOR-OFF(82) TO TRUE
               READ DSVEHHDRL5 NEXT
                 FORMAT IS 'DSVEHHDRF5'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(82) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   ELSE
                       MOVE CORRESPONDING
                         DSVEHHDRF5 OF DSVEHHDRL5-R TO
                         KRST-EXT
                       MOVE KRST-EXT TO KRST-TMP
                       IF (KRST NOT = KRST-TMP) THEN
                           SET C-INDICATOR-ON(82) TO TRUE
                       END-IF
                   END-IF
               END-IF
      *        Initialise Full Externally Described Keylist
      *        Owning Account
               MOVE SPACES TO BLOWNACC OF KRST-EXT
      *        DS Actual Arrival Dock 28
               MOVE ZEROS TO BLDSARDD28 OF KRST-EXT
      *        DS VIN
               MOVE SPACES TO BLDSVEHSVN OF KRST-EXT
      *        Suffix (5.0)
               MOVE ZEROS TO BLSUFFIX50 OF KRST-EXT
           END-PERFORM
      *..............................................................
      *    If no DBF records found, display error message
           IF (ZZRR = ZERO AND
               C-INDICATOR-ON(82)) THEN
      *        Send message '*No data to display'
      *        Message ID
               MOVE 'Y2U0008' TO ZAMSID
      *        Message file
               MOVE 'Y2USRMSG' TO ZAMSGF
               PERFORM ZASNMS
           END-IF
      *
      *..............................................................
      *    Save highest SFL record load can continue at end point
           IF (ZZRR > ZZRRMX) THEN
      *        Calculate top line
               DIVIDE ZZRROK BY ZZSFPG GIVING ZZSPG REMAINDER ZZSLIN
               IF (ZZSLIN > 0) THEN
                   SUBTRACT ZZSLIN FROM ZZRR GIVING ZZSFRC OF
                     ZSFLCTL-WS-O
               ELSE
                   SUBTRACT ZZSFPG FROM ZZRR GIVING ZZSFRC OF
                     ZSFLCTL-WS-O
               END-IF
               ADD 1 TO ZZSFRC OF ZSFLCTL-WS-O
               MOVE ZZRR TO ZZRRMX
           END-IF
      *    If scan limit reached, display error message
           IF (ZZRRRD NOT < W0SLM) THEN
      *        Send message '*Scan limit reached'
      *        Message ID
               MOVE 'Y2U0017' TO ZAMSID
      *        Message file
               MOVE 'Y2USRMSG' TO ZAMSGF
               PERFORM ZASNMS
           ELSE
               MOVE ZERO TO ZZRROK
           END-IF
      *==============================================================
           CONTINUE.
       BBEXIT.
           EXIT.
      /EJECT
       CAEXFM SECTION.
      *==============================================================
      *    Display screen
      *==============================================================
      *    Convert fields to external form
           IF (C-INDICATOR-OFF(05) AND
               C-INDICATOR-OFF(27)) THEN
               PERFORM MOCVZ2
           END-IF
      *    Set screen conditioning indicators
           PERFORM GBDSA2
           SET C-UNTIL-FALSE TO TRUE
           PERFORM UNTIL (C-UNTIL-TRUE)
               MOVE 'N' TO W0HLP
      *        PUTOVR unless conditioned fields change
               SET C-INDICATOR-ON(86) TO TRUE
               IF (IND(81) NOT = CAIN81) THEN
                   SET C-INDICATOR-OFF(86) TO TRUE
               END-IF
               MOVE IND(81) TO CAIN81
      *        Set cursor by *SET CURSOR data
               IF (YSETCS = 'Y') THEN
                   PERFORM Y0SET
               END-IF
               WRITE DS0001420D-F FROM ZMSGCTL-WS-O
                 FORMAT IS 'ZMSGCTL' INDICATORS ARE INDICS
               END-WRITE
               WRITE DS0001420D-F FROM ZCMDTXT1-WS-O
                 FORMAT IS 'ZCMDTXT1' INDICATORS ARE INDICS
               END-WRITE
               WRITE DS0001420D-F FROM ZSFLCTL-WS-O
                 FORMAT IS 'ZSFLCTL' INDICATORS ARE INDICS
               END-WRITE
               READ DS0001420D
                 FORMAT IS 'ZSFLCTL' INDICATORS ARE INDICS
               END-READ
               MOVE DS0001420D-F TO
                 ZSFLCTL-WS-I
               MOVE CORRESPONDING
                 ZSFLCTL-I OF ZSFLCTL-WS-I TO
                 ZSFLCTL-O OF ZSFLCTL-WS-O
      *        Maintain subfile position where possible
               ACCEPT DS0001420D-I-O-DSPF FROM I-O-FEEDBACK-AREA FOR
                 DS0001420D
               IF (ZZSFRC OF DS0001420D-I-O-DSPF > ZERO) THEN
                   MOVE ZZSFRC OF DS0001420D-I-O-DSPF TO ZZSFRC OF
                     ZSFLCTL-WS-O
               END-IF
      *
      *        Test cursor
               PERFORM Y8TST
      *        Check if prompt requested
               PERFORM ZDVPMT
      *        Reset help request
      *        Clear set cursor DDS indicator
               IF (WCSRLC = 'OFF') THEN
                   SET C-INDICATOR-OFF(94) TO TRUE
               END-IF
               MOVE SPACES TO WCSRLC
      *        If help requested, display help text
               IF (C-INDICATOR-ON(25)) THEN
                   PERFORM ZHHPKY
               END-IF
           IF (W0HLP = 'N') THEN
             SET C-UNTIL-TRUE TO TRUE
           END-IF
           END-PERFORM
      *    Update job time
           ACCEPT ZZTIME FROM TIME
           MOVE ZZHNS TO ZZJTM
      *    Clear messages from program message queue
           MOVE ZZPGM OF JOB-CONTEXT TO ZAPGMQ
           MOVE '*SAME' TO ZAPGRL
           CALL 'Y2CLMSC' USING
             ZAPGMQ
             ZAPGRL
           END-CALL
      *    Reset first message only flag
           MOVE 'Y' TO ZAFSMS
           SET C-INDICATOR-OFF(99) TO TRUE
           SET C-INDICATOR-OFF(83) TO TRUE
           SET C-INDICATOR-OFF(92) TO TRUE
           IF (YSETCS = 'Y') THEN
               PERFORM Y9CLR
           END-IF
      *==============================================================
           CONTINUE.
       CAEXIT.
           EXIT.
      /EJECT
       DAPRZZ SECTION.
      *==============================================================
      *    Process screen input
      *==============================================================
      *    Confirm/update is not deferred
           MOVE 'N' TO W0DCF
      *    Validate DS Actual Arrival Dock 28
      *    External date
           MOVE V2DSARDD28 OF ZSFLCTL-WS-O TO XDEXDT
      *    Check date
           PERFORM XDC84
           IF (W0RTN NOT = SPACES) THEN
               SET C-INDICATOR-ON(99) TO TRUE
               SET C-INDICATOR-ON(31) TO TRUE
           END-IF
      *    Internal date
           MOVE XDI8DT TO Z2DSARDD28 OF ZSFLCTL-WS-O
      *    If error, exit
           IF (C-INDICATOR-ON(99)) THEN
             GO DAEXIT
           END-IF
      *..............................................................
           IF (YPMTFD NOT = SPACES AND
               YPMRRN = ZERO) THEN
               GO DAEXIT
           END-IF
           IF (YPMTFD NOT = SPACES) THEN
               GO DATAG1
           END-IF
      *    EVALUATE
      *        Change of position specified
               IF (WZDSARDD28 NOT = Z2DSARDD28 OF ZSFLCTL-WS-O) THEN
                   PERFORM FBRQRL
               ELSE IF (WZDSVEHSVN NOT = Z2DSVEHSVN OF ZSFLCTL-WS-O)
                 THEN
                   PERFORM FBRQRL
           END-IF END-IF
           CONTINUE.
       DATAG1.
           IF (YPMTFD = SPACES) THEN
      *        USER: Process subfile control (Pre-confirm)
      *        F05=Refresh
      *        CASE: CTL.*CMD key is *Refresh
      *        *IF
               IF (C-INDICATOR-ON(05)) THEN
      *            *Reload subfile
                   MOVE 'Y' TO W0RSF
      *            *Defer confirm
                   MOVE 'Y' TO W0DCF
               END-IF
      *        F10=Switch Brand
      *        CASE: CTL.*CMD key is CF10
      *        *IF
               IF (C-INDICATOR-ON(10)) THEN
                   MOVE 4 TO YRSW03
                   MOVE 1 TO YRSW02
                   IF (YRSW02 NOT > 0 OR
                       YRSW03 NOT > 0 OR
                       YRSW02 > 00006 OR
                       YRSW03 > 00006) THEN
                       MOVE 'Y2U0510' TO W0RTN
                   ELSE
                       MOVE P1OWNACC TO W0STRNG
                       MOVE W0STRNG(YRSW02:YRSW03) TO YL0017 OF
                         WORK-CONTEXT
                   END-IF
                   MOVE '00' TO YRSW0E
                   MOVE ZEROS TO YRSW03
                   MOVE 'T' TO YRSW05
                   IF (YL0017 OF WORK-CONTEXT = SPACES AND
                       YRSW05 = 'T') THEN
                       ADD  1 TO ZEROS GIVING YRSW04
                   ELSE
                       ADD  1 TO 00004 GIVING YRSW04
                   END-IF
                   MOVE 00004 TO YRSW02
                   MOVE YL0017 OF WORK-CONTEXT TO YRSW06
                   PERFORM ZCATWK
                   STRING YRSW06 DELIMITED BY X'FF',
                          YRSW0E DELIMITED BY SIZE
                   INTO   YRSW06
                   MOVE YRSW06 TO YL0018 OF WORK-CONTEXT
      *            SD Dealer Number
                   MOVE YL0018 OF WORK-CONTEXT TO YL0019 OF WORK-CONTEXT
      *            Sel Related Dlr Brand - SD SEDRE Dealer  *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0019 OF WORK-CONTEXT TO WQ0001
                   MOVE YL0018 OF WORK-CONTEXT TO WQ0002
      *
                   CALL 'DISELDBRDS' USING
      *            Return code
                     W0RTN
      *            SD Dealer Number
                     WQ0001
      *            U:Dealer Account (Input)
                     WQ0002
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
                   MOVE WQ0001 TO YL0019 OF WORK-CONTEXT
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'DISELDBRDS' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            SD Dealer Number
                   MOVE YL0019 OF WORK-CONTEXT TO P3SDDLRNO
      *            *Return code
                   MOVE '*SWITCH' TO W0RTN
      *            *Return code
                   MOVE W0RTN TO P0RTN
                   PERFORM ZYEXPG
               END-IF
      *        F11=Toggle View
      *        CASE: CTL.*CMD key is Toggle
      *        *IF
               IF (C-INDICATOR-ON(11)) THEN
      *            Switch View
      *            CASE: PAR.U:View number is 1
      *            *IF
                   IF (P2IVEWNUM = '1') THEN
      *                U:View number
                       MOVE '2' TO P2IVEWNUM
                   ELSE
      *                CASE: PAR.U:View number is 2
      *                *IF
                       IF (P2IVEWNUM = '2') THEN
      *                    U:View number
                           MOVE '3' TO P2IVEWNUM
                       ELSE
      *                    CASE: PAR.U:View number is 3
      *                    *IF
                           IF (P2IVEWNUM = '3') THEN
      *                        U:View number
                               MOVE '1' TO P2IVEWNUM
                           END-IF
                       END-IF
                   END-IF
      *            *Reload subfile
                   MOVE 'Y' TO W0RSF
      *            *Defer confirm
                   MOVE 'Y' TO W0DCF
               END-IF
      *        F12=Cancel
      *        CASE: CTL.*CMD key is CF12
      *        *IF
               IF (C-INDICATOR-ON(12)) THEN
      *            *Return code
                   MOVE SPACES TO P0RTN
                   PERFORM ZYEXPG
               END-IF
           END-IF
           IF (YPMTFD = SPACES) THEN
      *        Reload subfile requested?
               IF (W0RSF = 'Y') THEN
                 GO DAEXIT
               END-IF
           END-IF
           IF (C-INDICATOR-ON(81)) THEN
      *        Process subfile records
               PERFORM DBPRSF
           END-IF
           IF (YPMTFD NOT = SPACES) THEN
               GO DAEXIT
           END-IF
      *    USER: Final processing (Pre-confirm)
      *    *Reload subfile
           MOVE 'Y' TO W0RSF
      *    If error, quit processing
           IF (C-INDICATOR-ON(99)) THEN
             GO DAEXIT
           END-IF
      *    Defer confirm/update requested
           IF (W0DCF = 'Y') THEN
             GO DAEXIT
           END-IF
      *    USER: Process command keys
      *    *Reload subfile
           MOVE 'Y' TO W0RSF
      *==============================================================
           CONTINUE.
       DAEXIT.
           EXIT.
      /EJECT
       DBPRSF SECTION.
      *==============================================================
      *    Process modified subfile record
      *==============================================================
      *    Read first changed slf record
           IF (YAFSCH NOT = ZERO) THEN
               MOVE YAFSCH TO ZZRR
               READ SUBFILE DS0001420D
                 FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
               END-READ
               MOVE DS0001420D-F TO
                 ZSFLRCD-WS-I
               IF (C-NO-RECORD) THEN
                   SET C-INDICATOR-ON(92) TO TRUE
               ELSE
                   SET C-INDICATOR-OFF(92) TO TRUE
               END-IF
           ELSE
      *        Read first changed record, if any
               READ SUBFILE DS0001420D NEXT MODIFIED
                 FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
               END-READ
               MOVE DS0001420D-F TO
                 ZSFLRCD-WS-I
               IF (C-NO-MOD-SFLRCDS) THEN
                   SET C-INDICATOR-ON(92) TO TRUE
               ELSE
                   SET C-INDICATOR-OFF(92) TO TRUE
               END-IF
           END-IF
           IF (C-IO-OK) THEN
               MOVE CORRESPONDING
                 ZSFLRCD-I OF ZSFLRCD-WS-I TO
                 ZSFLRCD-O OF ZSFLRCD-WS-O
           END-IF
           PERFORM UNTIL NOT (C-INDICATOR-OFF(92))
      *        Process subfile records
               PERFORM DCPRSR
      *        Convert fields to external form
               PERFORM MNCVZ1
      *        Set screen conditioning indicators
               PERFORM GADSA1
               REWRITE SUBFILE DS0001420D-F FROM ZSFLRCD-WS-O
                 FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
               END-REWRITE
               READ SUBFILE DS0001420D NEXT MODIFIED
                 FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
               END-READ
               MOVE DS0001420D-F TO
                 ZSFLRCD-WS-I
               IF (C-NO-MOD-SFLRCDS) THEN
                   SET C-INDICATOR-ON(92) TO TRUE
               ELSE
                   SET C-INDICATOR-OFF(92) TO TRUE
               END-IF
               IF (C-INDICATOR-OFF(92)) THEN
                   MOVE CORRESPONDING
                     ZSFLRCD-I OF ZSFLRCD-WS-I TO
                     ZSFLRCD-O OF ZSFLRCD-WS-O
               END-IF
           END-PERFORM
      *==============================================================
           CONTINUE.
       DBEXIT.
           EXIT.
      /EJECT
       DCPRSR SECTION.
      *==============================================================
      *    Process subfile record
      *==============================================================
      *    Setof error indicators and SFLNXTCHG
           MOVE WKIND0(1) TO IND(33)
           SET C-INDICATOR-OFF(98) TO TRUE
      *    Set screen conditioning indicators
           PERFORM GADSA1
           IF (YPMTFD NOT = SPACES) THEN
               GO DCEXIT
           END-IF
      *    USER: Process subfile record (Pre-confirm)
      *    CASE: RCD.*SFLSEL is *Select request
      *    *IF
           IF (Z1SEL OF ZSFLRCD-WS-O = '1' OR
               Z1SEL OF ZSFLRCD-WS-O = ' 1') THEN
      *        Dsp Wrk Veh Stor Inv - DS Vehicle Storage Inv  *
      *        Clear array PARC
               INITIALIZE PARC
      *        Invariant BCV
               MOVE Z1INVBCV OF ZSFLRCD-WS-O TO PAINVBCV
      *        Suffix (5.0)
               ADD Z1SUFFIX50 OF ZSFLRCD-WS-O TO PASUFFIX50
      *        Owning Account
               MOVE Z1OWNACC OF ZSFLRCD-WS-O TO PAOWNACC
      *        Clear array PBRC
               INITIALIZE PBRC
      *        DS VIN
               MOVE Z1DSVEHSVN OF ZSFLRCD-WS-O TO PBDSVEHSVN
      *        DS Actual Arrival Dock 28
               ADD Z1DSARDD28 OF ZSFLRCD-WS-O TO PBDSARDD28
      *        DS Storage Age Date Type
               MOVE Z1DSAGETYP OF ZSFLRCD-WS-O TO PBDSAGETYP
      *        DS Storage Age Date Cde
               MOVE Z1DSAGECDE OF ZSFLRCD-WS-O TO PBDSAGECDE
      *        DS Storage Age Date Start
               ADD Z1DSAGESTR OF ZSFLRCD-WS-O TO PBDSAGESTR
      *        DS Suffix From Date
               ADD Z1DSSFXFRM OF ZSFLRCD-WS-O TO PBDSSFXFRM
      *        DS Suffix To Date
               ADD Z1DSSFXTO OF ZSFLRCD-WS-O TO PBDSSFXTO
      *        DS Processing Status
               MOVE Z1DSPRCSTS OF ZSFLRCD-WS-O TO PBDSPRCSTS
      *
               SET C-INDICATOR-OFF(90) TO TRUE
               MOVE ZRUFORLEN OF ZSFLRCD-WS-O TO WQ0003
      *
               CALL 'DS0001510S' USING
      *        Return code
                 W0RTN
      *        KEY : DS Vehicle Storage Inv
                 PARC
      *        RCD : DS Vehicle Storage Header
                 PBRC
      *        U:For length (5.0)
                 WQ0003
                        ON OVERFLOW
                        SET C-INDICATOR-ON(90) TO TRUE
               END-CALL
      *
      *
      *        Error on program call will terminate run unit
               IF (C-INDICATOR-ON(90)) THEN
                   MOVE 'Y2U0032' TO W0RTN
                   MOVE 'DS0001510S' TO W0CLPG
      *            Send message '*Error occured on CALL...'
      *            Message ID
                   MOVE 'Y2U0032' TO ZAMSID
      *            Message file
                   MOVE 'Y2USRMSG' TO ZAMSGF
      *            Message data
                   MOVE W0CLPG TO ZAMSDA
                   PERFORM ZASNMS
               END-IF
      *        Error detected?
               IF (W0RTN        NOT = SPACES) THEN
                   SET C-INDICATOR-ON(98) TO TRUE
               END-IF
      *        Utl Monitor Return code
      *        CASE: PGM.*Return code is *User Fast Exit Requested
      *        *IF
               IF (W0RTN = 'Y2U9999') THEN
      *            *Return code
                   MOVE W0RTN TO P0RTN
                   PERFORM ZYEXPG
               ELSE
      *            CASE: *OTHERWISE
      *            *Return code
                   MOVE SPACES TO W0RTN
                   MOVE ' ' TO W0RTN
               END-IF
      *        *Reload subfile
               MOVE 'Y' TO W0RSF
           ELSE
      *        CASE: RCD.*SFLSEL is Display
      *        *IF
               IF (Z1SEL OF ZSFLRCD-WS-O = '5') THEN
      *            CASE: LCL.Authorisation Status is Unauthorised
      *            *IF
                   IF (YL0020 OF WORK-CONTEXT = '1') THEN
      *                Send message 'Option Invalid'
      *                Message ID
                       MOVE 'JSM2400' TO ZAMSID
                       PERFORM ZASNMS
                       SET C-INDICATOR-ON(98) TO TRUE
      *
                   ELSE
      *                CASE: *OTHERWISE
      *                Ext Vehicle Enquiry - Vehicle  *
                       SET C-INDICATOR-OFF(90) TO TRUE
                       MOVE Z1DSVEHSVN OF ZSFLRCD-WS-O TO WQ0004
      *
                       CALL 'VAG000250S' USING
      *                Return code
                         W0RTN
      *                VIN
                         WQ0004
                                ON OVERFLOW
                                SET C-INDICATOR-ON(90) TO TRUE
                       END-CALL
      *
      *
      *                Error on program call will terminate run unit
                       IF (C-INDICATOR-ON(90)) THEN
                           MOVE 'Y2U0032' TO W0RTN
                           MOVE 'VAG000250S' TO W0CLPG
      *                    Send message '*Error occured on CALL...'
      *                    Message ID
                           MOVE 'Y2U0032' TO ZAMSID
      *                    Message file
                           MOVE 'Y2USRMSG' TO ZAMSGF
      *                    Message data
                           MOVE W0CLPG TO ZAMSDA
                           PERFORM ZASNMS
                       END-IF
      *                Error detected?
                       IF (W0RTN        NOT = SPACES) THEN
                           SET C-INDICATOR-ON(98) TO TRUE
                       END-IF
      *                Utl Monitor Return code
      *                CASE: PGM.*Return code is *User Fast Exit
      *                  Requested
      *                *IF
                       IF (W0RTN = 'Y2U9999') THEN
      *                    *Return code
                           MOVE W0RTN TO P0RTN
                           PERFORM ZYEXPG
                       ELSE
      *                    CASE: *OTHERWISE
      *                    *Return code
                           MOVE SPACES TO W0RTN
                           MOVE ' ' TO W0RTN
                       END-IF
                   END-IF
               END-IF
           END-IF
           IF (C-INDICATOR-ON(98)) THEN
      *        SFLRCD invalid
               IF (C-INDICATOR-OFF(99)) THEN
                   MOVE ZZRR TO ZZSFRC OF ZSFLCTL-WS-O
                   IF (ZZSFRC OF ZSFLCTL-WS-O > ZERO) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   ELSE
                       SET C-INDICATOR-OFF(99) TO TRUE
                   END-IF
               END-IF
      *        Condition SFLNXTCHG
               SET C-INDICATOR-ON(84) TO TRUE
           ELSE
      *        SFLRCD valid
               SET C-INDICATOR-OFF(84) TO TRUE
               MOVE SPACES TO Z1SEL OF ZSFLRCD-WS-O
           END-IF
      *==============================================================
           CONTINUE.
       DCEXIT.
           EXIT.
      /EJECT
       FBRQRL SECTION.
      *==============================================================
      *    Request subfile reload
      *==============================================================
           MOVE 'Y' TO W0RSF
      *==============================================================
           CONTINUE.
       FBEXIT.
           EXIT.
      /EJECT
       GADSA1 SECTION.
      *==============================================================
      *    Set display attributes for Subfile record
      *==============================================================
           SET C-INDICATOR-OFF(78) TO TRUE
      *    *IF
           IF (Z1DSAGESTR OF ZSFLRCD-WS-O = 99999999) THEN
               SET C-INDICATOR-ON(78) TO TRUE
           END-IF
           SET C-INDICATOR-OFF(77) TO TRUE
      *    *IF
           IF (Z1DSSFXTO OF ZSFLRCD-WS-O = 99999999) THEN
               SET C-INDICATOR-ON(77) TO TRUE
           END-IF
      *==============================================================
           CONTINUE.
       GAEXIT.
           EXIT.
      /EJECT
       GBDSA2 SECTION.
      *==============================================================
      *    Set display attributes for Subfile control
      *==============================================================
           SET C-INDICATOR-OFF(79) TO TRUE
      *    *IF
           IF (YL0020 OF WORK-CONTEXT = '1') THEN
               SET C-INDICATOR-ON(79) TO TRUE
           END-IF
      *==============================================================
           CONTINUE.
       GBEXIT.
           EXIT.
      /EJECT
       MBFLZ1 SECTION.
      *==============================================================
      *    Move DSVEHHDRF5 fields to subfile
      *==============================================================
      *    Owning Account
           MOVE BLOWNACC OF DSVEHHDRF5 TO Z1OWNACC OF ZSFLRCD-WS-O
      *    Suffix (5.0)
           MOVE BLSUFFIX50 OF DSVEHHDRF5 TO Z1SUFFIX50 OF ZSFLRCD-WS-O
      *    Invariant BCV
           MOVE BLINVBCV OF DSVEHHDRF5 TO Z1INVBCV OF ZSFLRCD-WS-O
      *    SEDRE hdr APL code
           MOVE BLSEDAPLCD OF DSVEHHDRF5 TO Z1SEDAPLCD OF ZSFLRCD-WS-O
      *    DS Suffix From Date
           MOVE BLDSSFXFRM OF DSVEHHDRF5 TO Z1DSSFXFRM OF ZSFLRCD-WS-O
      *    DS Processing Status
           MOVE BLDSPRCSTS OF DSVEHHDRF5 TO Z1DSPRCSTS OF ZSFLRCD-WS-O
      *    Create Date D8#
           MOVE BLCRTDTD8 OF DSVEHHDRF5 TO Z1CRTDTD8 OF ZSFLRCD-WS-O
      *    Create Time
           MOVE BLCRTTME OF DSVEHHDRF5 TO Z1CRTTME OF ZSFLRCD-WS-O
      *    Create User
           MOVE BLCRTUSER OF DSVEHHDRF5 TO Z1CRTUSER OF ZSFLRCD-WS-O
      *    Create Program
           MOVE BLCRTPGM OF DSVEHHDRF5 TO Z1CRTPGM OF ZSFLRCD-WS-O
      *    Create Job
           MOVE BLCRTJOB OF DSVEHHDRF5 TO Z1CRTJOB OF ZSFLRCD-WS-O
      *    Date Last Changed D8#
           MOVE BLCHGDT8 OF DSVEHHDRF5 TO Z1CHGDT8 OF ZSFLRCD-WS-O
      *    Time Last Changed
           MOVE BLCHGTME OF DSVEHHDRF5 TO Z1CHGTME OF ZSFLRCD-WS-O
      *    User Last Changed
           MOVE BLUSERCHGD OF DSVEHHDRF5 TO Z1USERCHGD OF ZSFLRCD-WS-O
      *    Program Last Changed
           MOVE BLPGMCHG OF DSVEHHDRF5 TO Z1PGMCHG OF ZSFLRCD-WS-O
      *    Job Last Changed
           MOVE BLJOBCHG OF DSVEHHDRF5 TO Z1JOBCHG OF ZSFLRCD-WS-O
      *    DS Actual Arrival Dock 28
           MOVE BLDSARDD28 OF DSVEHHDRF5 TO Z1DSARDD28 OF ZSFLRCD-WS-O
      *    Clear external version also
           MOVE ZEROS TO V1DSARDD28 OF ZSFLRCD-WS-O
      *    DS VIN
           MOVE BLDSVEHSVN OF DSVEHHDRF5 TO Z1DSVEHSVN OF ZSFLRCD-WS-O
      *    DS Storage Age Date Type
           MOVE BLDSAGETYP OF DSVEHHDRF5 TO Z1DSAGETYP OF ZSFLRCD-WS-O
      *    DS Storage Age Date Cde
           MOVE BLDSAGECDE OF DSVEHHDRF5 TO Z1DSAGECDE OF ZSFLRCD-WS-O
      *    DS Storage Age Date Start
           MOVE BLDSAGESTR OF DSVEHHDRF5 TO Z1DSAGESTR OF ZSFLRCD-WS-O
      *    Clear external version also
           MOVE ZEROS TO V1DSAGESTR OF ZSFLRCD-WS-O
      *    DS Suffix To Date
           MOVE BLDSSFXTO OF DSVEHHDRF5 TO Z1DSSFXTO OF ZSFLRCD-WS-O
      *    Clear external version also
           MOVE ZEROS TO V1DSSFXTO OF ZSFLRCD-WS-O
      *    *SFLSEL
           MOVE SPACES TO Z1SEL OF ZSFLRCD-WS-O
      *    U:For length (5.0)
           MOVE ZERO TO ZRUFORLEN OF ZSFLRCD-WS-O
      *    U:Total Invoice (7.2)
           MOVE ZERO TO ZRUTOTIN72 OF ZSFLRCD-WS-O
      *    U:Number (5.0)
           MOVE ZERO TO ZRUNBR5 OF ZSFLRCD-WS-O
      *==============================================================
           CONTINUE.
       MBEXIT.
           EXIT.
      /EJECT
       MEIZZ2 SECTION.
      *==============================================================
      *    Initialise subfile control
      *==============================================================
      *    U:Date YYYYMMDD
           MOVE ZERO TO ZCDTEYYYY OF ZSFLCTL-WS-O
      *    Suffix (5.0)
           MOVE ZERO TO Z2SUFFIX50 OF ZSFLCTL-WS-O
      *    U:text (78)
           MOVE SPACES TO ZCUTXT78 OF ZSFLCTL-WS-O
      *    Owning Account
           MOVE P1OWNACC TO Z2OWNACC OF ZSFLCTL-WS-O
      *    SD Dealer Name
           MOVE SPACES TO ZCSDDLRNAM OF ZSFLCTL-WS-O
      *    DS Processing Date
           MOVE ZERO TO ZCDSPRCDTX OF ZSFLCTL-WS-O
      *    Clear external version also
           MOVE ZEROS TO VCDSPRCDTX OF ZSFLCTL-WS-O
      *    U:DS Processing Status
           MOVE SPACES TO ZCUDSPRSTS OF ZSFLCTL-WS-O
      *    U:Count(5.0) Unmatched
           MOVE ZERO TO ZCUCNTUNMT OF ZSFLCTL-WS-O
      *    U:Sub-Total Unmatched
           MOVE ZERO TO ZCUSUBUNMT OF ZSFLCTL-WS-O
      *    U:Sub-Total Days UnMatch
           MOVE ZERO TO ZCUSUBDUNM OF ZSFLCTL-WS-O
      *    U:Count(5.0) Matched
           MOVE ZERO TO ZCUCNTMATH OF ZSFLCTL-WS-O
      *    U:Sub-Total Matched
           MOVE ZERO TO ZCUSUBMATH OF ZSFLCTL-WS-O
      *    U:Sub-Total Days Matched
           MOVE ZERO TO ZCUSUBDMAT OF ZSFLCTL-WS-O
      *    U:Count(5.0) b
           MOVE ZERO TO ZCUCOUNT5B OF ZSFLCTL-WS-O
      *    U:Total Invoice (7.2)
           MOVE ZERO TO ZCUTOTIN72 OF ZSFLCTL-WS-O
      *    u:count(5.0)
           MOVE ZERO TO ZCUCOUNT5 OF ZSFLCTL-WS-O
      *    DS Actual Arrival Dock 28
           MOVE ZERO TO Z2DSARDD28 OF ZSFLCTL-WS-O
      *    Clear external version also
           MOVE ZEROS TO V2DSARDD28 OF ZSFLCTL-WS-O
      *    DS VIN
           MOVE SPACES TO Z2DSVEHSVN OF ZSFLCTL-WS-O
      *==============================================================
           CONTINUE.
       MEEXIT.
           EXIT.
      /EJECT
       MNCVZ1 SECTION.
      *==============================================================
      *    Convert subfile fields into external form
      *==============================================================
      *    Convert DS Actual Arrival Dock 28 to display format
      *    Convert date
           MOVE Z1DSARDD28 OF ZSFLRCD-WS-O TO XDI8DT
           PERFORM XDV84T
           MOVE XDEXDT TO V1DSARDD28 OF ZSFLRCD-WS-O
      *    Convert DS Storage Age Date Start to display format
      *    Convert date
           MOVE Z1DSAGESTR OF ZSFLRCD-WS-O TO XDI8DT
           PERFORM XDV84T
           MOVE XDEXDT TO V1DSAGESTR OF ZSFLRCD-WS-O
      *    Convert DS Suffix To Date to display format
      *    Convert date
           MOVE Z1DSSFXTO OF ZSFLRCD-WS-O TO XDI8DT
           PERFORM XDV84T
           MOVE XDEXDT TO V1DSSFXTO OF ZSFLRCD-WS-O
      *==============================================================
           CONTINUE.
       MNEXIT.
           EXIT.
      /EJECT
       MOCVZ2 SECTION.
      *==============================================================
      *    Convert control fields into external form
      *==============================================================
      *    Convert DS Processing Date to external.
      *
     ** Function   : Field type DTX - Convert from internal to external
     ** System     : Vehicle Finance
     ** Programmer : M Mead
     ** Date       : 07/04/94
     **
     ** Note that the working storage fields are also used in
     **   Check DTX function.
     **.................................................................
           MOVE ZCDSPRCDTX OF ZSFLCTL-WS-O    TO US-DATE-CYMD
                                         OF US-FLDCHKDTX
           MOVE US-CC-2 OF US-FLDCHKDTX   TO US-CC     OF US-FLDCHKDTX
           MOVE US-YY-2 OF US-FLDCHKDTX   TO US-YY     OF US-FLDCHKDTX
           MOVE US-MM-2 OF US-FLDCHKDTX   TO US-MM     OF US-FLDCHKDTX
           MOVE US-DD-2 OF US-FLDCHKDTX   TO US-DD     OF US-FLDCHKDTX
           MOVE US-DATE-DMCY  OF US-FLDCHKDTX
                                       TO VCDSPRCDTX OF ZSFLCTL-WS-O
      *    Convert DS Actual Arrival Dock 28 to display format
      *    Convert date
           MOVE Z2DSARDD28 OF ZSFLCTL-WS-O TO XDI8DT
           PERFORM XDV84T
           MOVE XDEXDT TO V2DSARDD28 OF ZSFLCTL-WS-O
      *==============================================================
           CONTINUE.
       MOEXIT.
           EXIT.
      /EJECT
       SA1RVGN SECTION.
      *==============================================================
      *    Rtv Highest Date Dtls - DS Run Control  *
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    Initialise Full Externally Described Keylist
      *    DS Processing Date
           MOVE 99999999 TO BNDSPRCDTX OF EXTSA1
           MOVE CORRESPONDING
             EXTSA1 TO
             DSRUNCTLF2 OF DSRUNCTLL2-R
           START DSRUNCTLL2 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'DSRUNCTLF2'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
           SET C-INDICATOR-OFF(90) TO TRUE
           READ DSRUNCTLL2 NEXT
             FORMAT IS 'DSRUNCTLF2'
           END-READ
           IF (C-EOF) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               END-IF
           END-IF
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'JSM2428' TO W0RTN
      *        USER: Processing if Data record not found
      *        PAR = CON By name
      *        DS Processing Date
               MOVE ZEROS TO ZCDSPRCDTX OF ZSFLCTL-WS-O
      *        DS Processing Status
               MOVE SPACES TO ZCUDSPRSTS OF ZSFLCTL-WS-O
      *        *Return code
               MOVE 'Y2U0005' TO W0RTN
               GO SA1EXIT
           END-IF
      *
           PERFORM UNTIL NOT (C-INDICATOR-OFF(90))
      *        USER: Process Data record
      *        PAR = DB1 By name
      *        DS Processing Date
               MOVE BNDSPRCDTX OF DSRUNCTLF2 OF DSRUNCTLL2-R TO
                 ZCDSPRCDTX OF ZSFLCTL-WS-O
      *        DS Processing Status
               MOVE BNDSPRCSTS OF DSRUNCTLF2 OF DSRUNCTLL2-R TO
                 ZCUDSPRSTS OF ZSFLCTL-WS-O
      *        *Return code
               MOVE SPACES TO W0RTN
               MOVE ' ' TO W0RTN
      *        *QUIT
               GO SA1EXIT
               SET C-INDICATOR-OFF(90) TO TRUE
               READ DSRUNCTLL2 NEXT
                 FORMAT IS 'DSRUNCTLF2'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   END-IF
               END-IF
           END-PERFORM
      *==============================================================
           CONTINUE.
       SA1EXIT.
           EXIT.
      /EJECT
       SA2RVGN SECTION.
      *==============================================================
      *    Rtv by SD Dealer Number - SD SEDRE Dealer  *
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    Setup key
      *    SD Dealer Number
           MOVE P1OWNACC TO K5SDDLRNO OF KRSSA2
      *    Initialise Full Externally Described Keylist
      *    SD Dealer Number
           MOVE LOW-VALUES TO K5SDDLRNO OF EXTSA2
           MOVE CORRESPONDING
             KRSSA2 TO
             FDLRDTM OF SDDLRDTAL1-R
           SET C-INDICATOR-OFF(90) TO TRUE
           READ SDDLRDTAL1
             FORMAT IS 'FDLRDTM'
           END-READ
           IF (C-NO-RECORD) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               END-IF
           END-IF
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'JSM1519' TO W0RTN
      *        USER: Processing if Data record not found
      *        PAR = CON By name
      *        SD Dealer Name
               MOVE SPACES TO ZCSDDLRNAM OF ZSFLCTL-WS-O
      *        *Return code
               MOVE 'Y2U0005' TO W0RTN
               GO SA2EXIT
           END-IF
      *
           IF (C-INDICATOR-OFF(90)) THEN
      *        USER: Process Data record
      *        PAR = DB1 By name
      *        SD Dealer Name
               MOVE K5SDDLRNAM OF FDLRDTM OF SDDLRDTAL1-R TO ZCSDDLRNAM
                 OF ZSFLCTL-WS-O
           END-IF
      *==============================================================
           CONTINUE.
       SA2EXIT.
           EXIT.
      /EJECT
       SA3RVGN SECTION.
      *==============================================================
      *    Rtv Dlr Counts/Ttl Sts 2 - DS Vehicle Storage Header  *
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    USER: Initialize routine
      *    PAR = CON By name
      *    U:Count (5)
           MOVE ZEROS TO ZCUCOUNT5B OF ZSFLCTL-WS-O
      *    U:Count(5.0) Unmatched
           MOVE ZEROS TO ZCUCNTUNMT OF ZSFLCTL-WS-O
      *    U:Sub-Total Unmatched
           MOVE ZEROS TO ZCUSUBUNMT OF ZSFLCTL-WS-O
      *    U:Sub-Total Days UnMatch
           MOVE ZEROS TO ZCUSUBDUNM OF ZSFLCTL-WS-O
      *    U:Count(5.0) Matched
           MOVE ZEROS TO ZCUCNTMATH OF ZSFLCTL-WS-O
      *    U:Sub-Total Matched
           MOVE ZEROS TO ZCUSUBMATH OF ZSFLCTL-WS-O
      *    U:Sub-Total Days Matched
           MOVE ZEROS TO ZCUSUBDMAT OF ZSFLCTL-WS-O
      *    Invariant BCV
           MOVE SPACES TO YL0003 OF WORK-CONTEXT
           MOVE ' ' TO YL0003 OF WORK-CONTEXT
      *    Setup key
      *    Owning Account
           MOVE P1OWNACC TO BLOWNACC OF KPSSA3
      *    DS Processing Status
           MOVE YL0001 OF WORK-CONTEXT TO BLDSPRCSTS OF KPSSA3
           MOVE CORRESPONDING KPSSA3 TO KRSSA3
      *    Initialise Full Externally Described Keylist
      *    Owning Account
           MOVE LOW-VALUES TO BLOWNACC OF EXTSA3
      *    DS Processing Status
           MOVE LOW-VALUES TO BLDSPRCSTS OF EXTSA3
      *    Invariant BCV
           MOVE LOW-VALUES TO BLINVBCV OF EXTSA3
      *    Suffix (5.0)
           MOVE -99999 TO BLSUFFIX50 OF EXTSA3
           MOVE CORRESPONDING
             EXTSA3 TO
             DSVEHHDRF6 OF DSVEHHDRL6-R
           MOVE CORRESPONDING
             KPSSA3 TO
             DSVEHHDRF6 OF DSVEHHDRL6-R
           START DSVEHHDRL6 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'DSVEHHDRF6'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
           SET C-INDICATOR-OFF(90) TO TRUE
           READ DSVEHHDRL6 NEXT
             FORMAT IS 'DSVEHHDRF6'
           END-READ
           IF (C-EOF) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               ELSE
                   MOVE CORRESPONDING
                     DSVEHHDRF6 OF DSVEHHDRL6-R TO
                     EXTSA3
                   MOVE EXTSA3 TO KRSSA3-TMP
                   IF (KRSSA3 NOT = KRSSA3-TMP) THEN
                       SET C-INDICATOR-ON(90) TO TRUE
                   END-IF
               END-IF
           END-IF
      *    Initialise Full Externally Described Keylist
      *    Owning Account
           MOVE LOW-VALUES TO BLOWNACC OF EXTSA3
      *    DS Processing Status
           MOVE LOW-VALUES TO BLDSPRCSTS OF EXTSA3
      *    Invariant BCV
           MOVE LOW-VALUES TO BLINVBCV OF EXTSA3
      *    Suffix (5.0)
           MOVE -99999 TO BLSUFFIX50 OF EXTSA3
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'JSM2424' TO W0RTN
      *        USER: Processing if Data record not found
      *        *Return code
               MOVE 'Y2U0005' TO W0RTN
               GO SA3EXIT
           END-IF
      *
           PERFORM UNTIL NOT (C-INDICATOR-OFF(90))
      *        USER: Process Data record
      *        CASE:
      *        - c1 AND c2
      *        |- c1    : DB1.DS Processing Status GE PAR.DS
      *          Processing Status
      *        |- c2    : DB1.DS Processing Status LE PAR.U:DS
      *          Processing Status
      *        '-
      *        *IF
               IF (BLDSPRCSTS OF DSVEHHDRF6 OF DSVEHHDRL6-R NOT <
                 YL0001 OF WORK-CONTEXT AND
                   BLDSPRCSTS OF DSVEHHDRF6 OF DSVEHHDRL6-R NOT >
                 YL0002 OF WORK-CONTEXT) THEN
      *            CASE: DB1.Invariant BCV NE LCL.Invariant BCV
      *            *IF
                   IF (BLINVBCV OF DSVEHHDRF6 OF DSVEHHDRL6-R NOT =
                     YL0003 OF WORK-CONTEXT) THEN
      *                U:Count (5)
                       ADD ZCUCOUNT5B OF ZSFLCTL-WS-O, 1 GIVING
                         ZCUCOUNT5B OF ZSFLCTL-WS-O
                   END-IF
      *            Rtv Invar Inv Totals - DS Vehicle Storage Inv  *
                   PERFORM SA4RVGN
      *            CASE: DB1.DS Storage Age Date Type is U - Unmatched
      *            *IF
                   IF (BLDSAGETYP OF DSVEHHDRF6 OF DSVEHHDRL6-R = 'U')
                     THEN
      *                U:Count(5.0) Unmatched
                       ADD ZCUCNTUNMT OF ZSFLCTL-WS-O, 1 GIVING
                         ZCUCNTUNMT OF ZSFLCTL-WS-O
      *                U:Sub-Total Days UnMatch
                       ADD ZCUSUBDUNM OF ZSFLCTL-WS-O, YL0006 OF
                         WORK-CONTEXT GIVING ZCUSUBDUNM OF ZSFLCTL-WS-O
      *                PAR.U:Sub-Total Unmatched =
      *                *COMPUTE (x1 + x2 + x3)
      *                x1    : PAR.U:Sub-Total Unmatched
      *                +     : PGM.*Synon (17,7) work field
      *                x2    : LCL.U:Total Invoice (7.2)Pen
      *                +     : PGM.*Synon (17,7) work field
      *                x3    : LCL.U:Total Invoice (7.2)Inv
      *                *Synon (17,7) work field
                       ADD ZCUSUBUNMT OF ZSFLCTL-WS-O, YL0004 OF
                         WORK-CONTEXT GIVING W0WD01
      *                *Synon (17,7) work field
                       ADD W0WD01, YL0005 OF WORK-CONTEXT GIVING W0WD00
      *                U:Sub-Total Unmatched
                       MOVE W0WD00 TO ZCUSUBUNMT OF ZSFLCTL-WS-O
                   ELSE
      *                CASE: DB1.DS Storage Age Date Type is M - Matched
      *                *IF
                       IF (BLDSAGETYP OF DSVEHHDRF6 OF DSVEHHDRL6-R = 'M
      -                 '') THEN
      *                    U:Count(5.0) Matched
                           ADD ZCUCNTMATH OF ZSFLCTL-WS-O, 1 GIVING
                             ZCUCNTMATH OF ZSFLCTL-WS-O
      *                    U:Sub-Total Days Matched
                           ADD ZCUSUBDMAT OF ZSFLCTL-WS-O, YL0006 OF
                             WORK-CONTEXT GIVING ZCUSUBDMAT OF
                             ZSFLCTL-WS-O
      *                    PAR.U:Sub-Total Matched =
      *                    *COMPUTE (x1 + x2 + x3)
      *                    x1    : PAR.U:Sub-Total Matched
      *                    +     : PGM.*Synon (17,7) work field
      *                    x2    : LCL.U:Total Invoice (7.2)Pen
      *                    +     : PGM.*Synon (17,7) work field
      *                    x3    : LCL.U:Total Invoice (7.2)Inv
      *                    *Synon (17,7) work field
                           ADD ZCUSUBMATH OF ZSFLCTL-WS-O, YL0004 OF
                             WORK-CONTEXT GIVING W0WD01
      *                    *Synon (17,7) work field
                           ADD W0WD01, YL0005 OF WORK-CONTEXT GIVING
                             W0WD00
      *                    U:Sub-Total Matched
                           MOVE W0WD00 TO ZCUSUBMATH OF ZSFLCTL-WS-O
                       END-IF
                   END-IF
      *            Invariant BCV
                   MOVE BLINVBCV OF DSVEHHDRF6 OF DSVEHHDRL6-R TO
                     YL0003 OF WORK-CONTEXT
               END-IF
      *        *Return code
               MOVE SPACES TO W0RTN
               MOVE ' ' TO W0RTN
               SET C-INDICATOR-OFF(90) TO TRUE
               READ DSVEHHDRL6 NEXT
                 FORMAT IS 'DSVEHHDRF6'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   ELSE
                       MOVE CORRESPONDING
                         DSVEHHDRF6 OF DSVEHHDRL6-R TO
                         EXTSA3
                       MOVE EXTSA3 TO KRSSA3-TMP
                       IF (KRSSA3 NOT = KRSSA3-TMP) THEN
                           SET C-INDICATOR-ON(90) TO TRUE
                       END-IF
                   END-IF
               END-IF
      *        Initialise Full Externally Described Keylist
      *        Owning Account
               MOVE LOW-VALUES TO BLOWNACC OF EXTSA3
      *        DS Processing Status
               MOVE LOW-VALUES TO BLDSPRCSTS OF EXTSA3
      *        Invariant BCV
               MOVE LOW-VALUES TO BLINVBCV OF EXTSA3
      *        Suffix (5.0)
               MOVE -99999 TO BLSUFFIX50 OF EXTSA3
           END-PERFORM
      *==============================================================
           CONTINUE.
       SA3EXIT.
           EXIT.
      /EJECT
       SA4RVGN SECTION.
      *==============================================================
      *    Rtv Invar Inv Totals - DS Vehicle Storage Inv  *
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    USER: Initialize routine
      *    PAR = CON By name
      *    U:Total Invoice (7.2)Pen
           MOVE ZEROS TO YL0004 OF WORK-CONTEXT
      *    U:Total Invoice (7.2)Inv
           MOVE ZEROS TO YL0005 OF WORK-CONTEXT
      *    DS VEH Invoice Tot No Day
           MOVE ZEROS TO YL0006 OF WORK-CONTEXT
      *    Setup key
      *    Invariant BCV
           MOVE BLINVBCV OF DSVEHHDRF6 OF DSVEHHDRL6-R TO BMINVBCV OF
             KRSSA4
      *    Suffix (5.0)
           MOVE BLSUFFIX50 OF DSVEHHDRF6 OF DSVEHHDRL6-R TO BMSUFFIX50
             OF KRSSA4
      *    Owning Account
           MOVE BLOWNACC OF DSVEHHDRF6 OF DSVEHHDRL6-R TO BMOWNACC OF
             KRSSA4
      *    Initialise Full Externally Described Keylist
      *    Invariant BCV
           MOVE LOW-VALUES TO BMINVBCV OF EXTSA4
      *    Suffix (5.0)
           MOVE -99999 TO BMSUFFIX50 OF EXTSA4
      *    Owning Account
           MOVE LOW-VALUES TO BMOWNACC OF EXTSA4
      *    DS VIN Invoice Line Suffx
           MOVE -99999 TO BMDSVEHILS OF EXTSA4
           MOVE CORRESPONDING
             EXTSA4 TO
             DSVEHINVF1 OF DSVEHINVL1-R
           MOVE CORRESPONDING
             KRSSA4 TO
             DSVEHINVF1 OF DSVEHINVL1-R
           START DSVEHINVL1 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'DSVEHINVF1'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
           SET C-INDICATOR-OFF(90) TO TRUE
           READ DSVEHINVL1 NEXT
             FORMAT IS 'DSVEHINVF1'
           END-READ
           IF (C-EOF) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               ELSE
                   MOVE CORRESPONDING
                     DSVEHINVF1 OF DSVEHINVL1-R TO
                     EXTSA4
                   MOVE EXTSA4 TO KRSSA4-TMP
                   IF (KRSSA4 NOT = KRSSA4-TMP) THEN
                       SET C-INDICATOR-ON(90) TO TRUE
                   END-IF
               END-IF
           END-IF
      *    Initialise Full Externally Described Keylist
      *    Invariant BCV
           MOVE LOW-VALUES TO BMINVBCV OF EXTSA4
      *    Suffix (5.0)
           MOVE -99999 TO BMSUFFIX50 OF EXTSA4
      *    Owning Account
           MOVE LOW-VALUES TO BMOWNACC OF EXTSA4
      *    DS VIN Invoice Line Suffx
           MOVE -99999 TO BMDSVEHILS OF EXTSA4
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'JSM2426' TO W0RTN
      *        USER: Processing if Data record not found
      *        *Return code
               MOVE 'Y2U0005' TO W0RTN
               GO SA4EXIT
           END-IF
      *
           PERFORM UNTIL NOT (C-INDICATOR-OFF(90))
      *        USER: Process Data record
      *        CASE:
      *        - c1 OR c2
      *        |- c1    : DB1.DS Veh Storage Inv Sts is 10 - Uninvoiced
      *        |- c2    : DB1.DS Veh Storage Inv Sts is 20 -
      *          Uninvoiced - Tot Syn
      *        '-
      *        *IF
               IF (BMDSINVSTS OF DSVEHINVF1 OF DSVEHINVL1-R = '10' OR
                   BMDSINVSTS OF DSVEHINVF1 OF DSVEHINVL1-R = '20') THEN
      *            U:Total Invoice (7.2)Pen
                   ADD YL0004 OF WORK-CONTEXT, BMDSTOTAMT OF DSVEHINVF1
                     OF DSVEHINVL1-R GIVING YL0004 OF WORK-CONTEXT
               ELSE
      *            CASE: *OTHERWISE
      *            U:Total Invoice (7.2)Inv
                   ADD YL0005 OF WORK-CONTEXT, BMDSTOTAMT OF DSVEHINVF1
                     OF DSVEHINVL1-R GIVING YL0005 OF WORK-CONTEXT
               END-IF
      *        DS VEH Invoice Tot No Day
               ADD YL0006 OF WORK-CONTEXT, BMDSTOTDAY OF DSVEHINVF1 OF
                 DSVEHINVL1-R GIVING YL0006 OF WORK-CONTEXT
      *        *Return code
               MOVE SPACES TO W0RTN
               MOVE ' ' TO W0RTN
               SET C-INDICATOR-OFF(90) TO TRUE
               READ DSVEHINVL1 NEXT
                 FORMAT IS 'DSVEHINVF1'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   ELSE
                       MOVE CORRESPONDING
                         DSVEHINVF1 OF DSVEHINVL1-R TO
                         EXTSA4
                       MOVE EXTSA4 TO KRSSA4-TMP
                       IF (KRSSA4 NOT = KRSSA4-TMP) THEN
                           SET C-INDICATOR-ON(90) TO TRUE
                       END-IF
                   END-IF
               END-IF
      *        Initialise Full Externally Described Keylist
      *        Invariant BCV
               MOVE LOW-VALUES TO BMINVBCV OF EXTSA4
      *        Suffix (5.0)
               MOVE -99999 TO BMSUFFIX50 OF EXTSA4
      *        Owning Account
               MOVE LOW-VALUES TO BMOWNACC OF EXTSA4
      *        DS VIN Invoice Line Suffx
               MOVE -99999 TO BMDSVEHILS OF EXTSA4
           END-PERFORM
      *==============================================================
           CONTINUE.
       SA4EXIT.
           EXIT.
      /EJECT
       SA5RVGN SECTION.
      *==============================================================
      *    Rtv Invar Inv Totals - DS Vehicle Storage Inv  *
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    USER: Initialize routine
      *    PAR = CON By name
      *    U:Total Invoice (7.2)Pen
           MOVE ZEROS TO YL0013 OF WORK-CONTEXT
      *    U:Total Invoice (7.2)Inv
           MOVE ZEROS TO YL0014 OF WORK-CONTEXT
      *    DS VEH Invoice Tot No Day
           MOVE ZEROS TO ZRUNBR5 OF ZSFLRCD-WS-O
      *    Setup key
      *    Invariant BCV
           MOVE Z1INVBCV OF ZSFLRCD-WS-O TO BMINVBCV OF KRSSA5
      *    Suffix (5.0)
           MOVE Z1SUFFIX50 OF ZSFLRCD-WS-O TO BMSUFFIX50 OF KRSSA5
      *    Owning Account
           MOVE Z1OWNACC OF ZSFLRCD-WS-O TO BMOWNACC OF KRSSA5
      *    Initialise Full Externally Described Keylist
      *    Invariant BCV
           MOVE LOW-VALUES TO BMINVBCV OF EXTSA5
      *    Suffix (5.0)
           MOVE -99999 TO BMSUFFIX50 OF EXTSA5
      *    Owning Account
           MOVE LOW-VALUES TO BMOWNACC OF EXTSA5
      *    DS VIN Invoice Line Suffx
           MOVE -99999 TO BMDSVEHILS OF EXTSA5
           MOVE CORRESPONDING
             EXTSA5 TO
             DSVEHINVF1 OF DSVEHINVL1-R
           MOVE CORRESPONDING
             KRSSA5 TO
             DSVEHINVF1 OF DSVEHINVL1-R
           START DSVEHINVL1 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'DSVEHINVF1'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
           SET C-INDICATOR-OFF(90) TO TRUE
           READ DSVEHINVL1 NEXT
             FORMAT IS 'DSVEHINVF1'
           END-READ
           IF (C-EOF) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               ELSE
                   MOVE CORRESPONDING
                     DSVEHINVF1 OF DSVEHINVL1-R TO
                     EXTSA5
                   MOVE EXTSA5 TO KRSSA5-TMP
                   IF (KRSSA5 NOT = KRSSA5-TMP) THEN
                       SET C-INDICATOR-ON(90) TO TRUE
                   END-IF
               END-IF
           END-IF
      *    Initialise Full Externally Described Keylist
      *    Invariant BCV
           MOVE LOW-VALUES TO BMINVBCV OF EXTSA5
      *    Suffix (5.0)
           MOVE -99999 TO BMSUFFIX50 OF EXTSA5
      *    Owning Account
           MOVE LOW-VALUES TO BMOWNACC OF EXTSA5
      *    DS VIN Invoice Line Suffx
           MOVE -99999 TO BMDSVEHILS OF EXTSA5
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'JSM2426' TO W0RTN
      *        USER: Processing if Data record not found
      *        *Return code
               MOVE 'Y2U0005' TO W0RTN
               GO SA5EXIT
           END-IF
      *
           PERFORM UNTIL NOT (C-INDICATOR-OFF(90))
      *        USER: Process Data record
      *        CASE:
      *        - c1 OR c2
      *        |- c1    : DB1.DS Veh Storage Inv Sts is 10 - Uninvoiced
      *        |- c2    : DB1.DS Veh Storage Inv Sts is 20 -
      *          Uninvoiced - Tot Syn
      *        '-
      *        *IF
               IF (BMDSINVSTS OF DSVEHINVF1 OF DSVEHINVL1-R = '10' OR
                   BMDSINVSTS OF DSVEHINVF1 OF DSVEHINVL1-R = '20') THEN
      *            U:Total Invoice (7.2)Pen
                   ADD YL0013 OF WORK-CONTEXT, BMDSTOTAMT OF DSVEHINVF1
                     OF DSVEHINVL1-R GIVING YL0013 OF WORK-CONTEXT
               ELSE
      *            CASE: *OTHERWISE
      *            U:Total Invoice (7.2)Inv
                   ADD YL0014 OF WORK-CONTEXT, BMDSTOTAMT OF DSVEHINVF1
                     OF DSVEHINVL1-R GIVING YL0014 OF WORK-CONTEXT
               END-IF
      *        DS VEH Invoice Tot No Day
               ADD ZRUNBR5 OF ZSFLRCD-WS-O, BMDSTOTDAY OF DSVEHINVF1 OF
                 DSVEHINVL1-R GIVING ZRUNBR5 OF ZSFLRCD-WS-O
      *        *Return code
               MOVE SPACES TO W0RTN
               MOVE ' ' TO W0RTN
               SET C-INDICATOR-OFF(90) TO TRUE
               READ DSVEHINVL1 NEXT
                 FORMAT IS 'DSVEHINVF1'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   ELSE
                       MOVE CORRESPONDING
                         DSVEHINVF1 OF DSVEHINVL1-R TO
                         EXTSA5
                       MOVE EXTSA5 TO KRSSA5-TMP
                       IF (KRSSA5 NOT = KRSSA5-TMP) THEN
                           SET C-INDICATOR-ON(90) TO TRUE
                       END-IF
                   END-IF
               END-IF
      *        Initialise Full Externally Described Keylist
      *        Invariant BCV
               MOVE LOW-VALUES TO BMINVBCV OF EXTSA5
      *        Suffix (5.0)
               MOVE -99999 TO BMSUFFIX50 OF EXTSA5
      *        Owning Account
               MOVE LOW-VALUES TO BMOWNACC OF EXTSA5
      *        DS VIN Invoice Line Suffx
               MOVE -99999 TO BMDSVEHILS OF EXTSA5
           END-PERFORM
      *==============================================================
           CONTINUE.
       SA5EXIT.
           EXIT.
      /EJECT
       UA1SUBR SECTION.
      *==============================================================
      *    Set Age - Check Record Selection
      *==============================================================
      *    Set End Age Depending on Record Status and View
      *    CASE: RCD.DS Processing Status is 01 - 49 Records In Progrs
      *    *IF
           IF (Z1DSPRCSTS OF ZSFLRCD-WS-O = '01' OR
               Z1DSPRCSTS OF ZSFLRCD-WS-O = '10' OR
               Z1DSPRCSTS OF ZSFLRCD-WS-O = '20' OR
               Z1DSPRCSTS OF ZSFLRCD-WS-O = '30' OR
               Z1DSPRCSTS OF ZSFLRCD-WS-O = '02' OR
               Z1DSPRCSTS OF ZSFLRCD-WS-O = '49' OR
               Z1DSPRCSTS OF ZSFLRCD-WS-O = '40') THEN
      *        U:Date YYYYMMDD
               MOVE ZCDTEYYYY OF ZSFLCTL-WS-O TO YL0009 OF WORK-CONTEXT
           ELSE
      *        CASE: *OTHERWISE
      *        CASE: RCD.DS Suffix To Date is *Max Date - Not Exited
      *        *IF
               IF (Z1DSSFXTO OF ZSFLRCD-WS-O = 99999999) THEN
      *            U:Date YYYYMMDD
                   MOVE ZCDTEYYYY OF ZSFLCTL-WS-O TO YL0009 OF
                     WORK-CONTEXT
               ELSE
      *            CASE: *OTHERWISE
      *            U:Date YYYYMMDD
                   MOVE Z1DSSFXTO OF ZSFLRCD-WS-O TO YL0009 OF
                     WORK-CONTEXT
               END-IF
           END-IF
      *    Cvt DTX to DTE
      *    **--------------------------------------------------------**
      *    **  Return date in format CYYMMDD                         **
      *    **--------------------------------------------------------**
      *    CASE: PAR.U:Date YYYYMMDD is Zero date
      *    *IF
           IF (YL0009 OF WORK-CONTEXT = 0) THEN
      *        U:Date (CYYMMDD)
               MOVE ZEROS TO YL0010 OF WORK-CONTEXT
           ELSE
      *        CASE: *OTHERWISE
      *        U:Year (4)
               DIVIDE 10000 INTO YL0009 OF WORK-CONTEXT GIVING WUUYR4
                 OF WORK-CONTEXT
      *        U:Date (6)
               MOVE YL0009 OF WORK-CONTEXT TO WUHENB OF WORK-CONTEXT
      *        Mentor Computer Services Ltd - Year 2000 Changes
      *        CASE: WRK.U:Year (4) is 1940 - 1999 Centuary = 0
      *        *IF
               IF (WUUYR4 OF WORK-CONTEXT NOT < 1940 AND
                   WUUYR4 OF WORK-CONTEXT NOT > 1999) THEN
      *            * Move right 6 char to 7 char. Left digit is zero.
      *            PAR.U:Date (CYYMMDD) = WRK.U:Date (6)
                   MOVE WUHENB OF WORK-CONTEXT TO YL0010 OF WORK-CONTEXT
               ELSE
      *            CASE: *OTHERWISE
      *            U:Date (CYYMMDD)
                   ADD WUHENB OF WORK-CONTEXT, 1000000 GIVING YL0010 OF
                     WORK-CONTEXT
               END-IF
           END-IF
      *    Cvt DTX to DTE
      *    **--------------------------------------------------------**
      *    **  Return date in format CYYMMDD                         **
      *    **--------------------------------------------------------**
      *    CASE: PAR.U:Date YYYYMMDD is Zero date
      *    *IF
           IF (Z1DSARDD28 OF ZSFLRCD-WS-O = 0) THEN
      *        U:Date (CYYMMDD)
               MOVE ZEROS TO YL0011 OF WORK-CONTEXT
           ELSE
      *        CASE: *OTHERWISE
      *        U:Year (4)
               DIVIDE 10000 INTO Z1DSARDD28 OF ZSFLRCD-WS-O GIVING
                 WUUYR4 OF WORK-CONTEXT
      *        U:Date (6)
               MOVE Z1DSARDD28 OF ZSFLRCD-WS-O TO WUHENB OF WORK-CONTEXT
      *        Mentor Computer Services Ltd - Year 2000 Changes
      *        CASE: WRK.U:Year (4) is 1940 - 1999 Centuary = 0
      *        *IF
               IF (WUUYR4 OF WORK-CONTEXT NOT < 1940 AND
                   WUUYR4 OF WORK-CONTEXT NOT > 1999) THEN
      *            * Move right 6 char to 7 char. Left digit is zero.
      *            PAR.U:Date (CYYMMDD) = WRK.U:Date (6)
                   MOVE WUHENB OF WORK-CONTEXT TO YL0011 OF WORK-CONTEXT
               ELSE
      *            CASE: *OTHERWISE
      *            U:Date (CYYMMDD)
                   ADD WUHENB OF WORK-CONTEXT, 1000000 GIVING YL0011 OF
                     WORK-CONTEXT
               END-IF
           END-IF
      *    LCL.*Duration (result) = LCL.*Date1 (ending) - LCL.*Date2
      *      (beginning) *DAYS
           MOVE '1' TO XDSEL
           MOVE '1111111' TO XDCDW
           PERFORM XDOWS
           ADD 1000000 TO YL0011 OF WORK-CONTEXT GIVING XDINDT
           PERFORM XCVTA
           MOVE XDAY1 TO XDAY2
           ADD 1000000 TO YL0010 OF WORK-CONTEXT GIVING XDINDT
           PERFORM XCVTA
           MOVE 'NONE' TO WUDLN OF WORK-CONTEXT
           PERFORM XDUDY
      *    Negative duration, when date1<date2
           IF (XDAY1 NOT < XDAY2) THEN
               MOVE XDURR TO YL0012 OF WORK-CONTEXT
           ELSE
               MULTIPLY XDURR BY -1 GIVING YL0012 OF WORK-CONTEXT
           END-IF
      *    U:For length (5.0)
           ADD YL0012 OF WORK-CONTEXT, 1 GIVING ZRUFORLEN OF
             ZSFLRCD-WS-O
      *    Rtv Invar Inv Totals - DS Vehicle Storage Inv  *
           PERFORM SA5RVGN
      *    U:Total Invoice (7.2)
           ADD YL0013 OF WORK-CONTEXT, YL0014 OF WORK-CONTEXT GIVING
             ZRUTOTIN72 OF ZSFLRCD-WS-O
      *    Select Records Depending on View
      *    CASE: PAR.U:View number is 1
      *    *IF
           IF (P2IVEWNUM = '1') THEN
      *        CASE: DB1.DS Processing Status is 01 - 49 Records In
      *          Progrs
      *        *IF
               IF (BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '01' OR
                   BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '10' OR
                   BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '20' OR
                   BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '30' OR
                   BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '02' OR
                   BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '49' OR
                   BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '40') THEN
                   CONTINUE
               ELSE
      *            CASE: *OTHERWISE
      *            *Record selected
                   MOVE 'N' TO W0RSL
               END-IF
           ELSE
      *        CASE: PAR.U:View number is 2
      *        *IF
               IF (P2IVEWNUM = '2') THEN
                   CONTINUE
               ELSE
      *            CASE: PAR.U:View number is 3
      *            *IF
                   IF (P2IVEWNUM = '3') THEN
      *                CASE: DB1.DS Processing Status is 50 - Daily
      *                  Hdr Proc Ended
      *                *IF
                       IF (BLDSPRCSTS OF DSVEHHDRF5 OF DSVEHHDRL5-R = '5
      -                 '0') THEN
                           CONTINUE
                       ELSE
      *                    CASE: *OTHERWISE
      *                    *Record selected
                           MOVE 'N' TO W0RSL
                       END-IF
                   END-IF
               END-IF
           END-IF
      *==============================================================
           CONTINUE.
       UA1EXIT.
           EXIT.
      /EJECT
       XCVTA  SECTION.
      *==============================================================
      *    Convert date to absolute day (from 01/01/01)
      *==============================================================
      *    Absolute day =
      *    365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones)
      *      ...
           SUBTRACT 1 FROM XDINYY GIVING XDWK1
           MULTIPLY XDWK1 BY 365.25 GIVING XDAY1
           IF (XDWK1 NOT < 300) THEN
               SUBTRACT 2 FROM XDAY1
           ELSE
               IF (XDWK1 NOT < 100) THEN
                   SUBTRACT 1 FROM XDAY1
               END-IF
           END-IF
      *    (from the beginning of the year to the beginning of the
      *      month:)
           SUBTRACT 1 FROM XDINMM GIVING XDWK1
           IF (XDINMM < 3) THEN
      *        ...+31*(MM-1) (for January-February) ...
               MULTIPLY 31 BY XDWK1
               ADD XDWK1 TO XDAY1
           ELSE
      *        ...+30*(MM-1) (for March-December) ...
               MULTIPLY 30 BY XDWK1
               ADD XDWK1 TO XDAY1
      *        ...-2 (for preceding February) ...
               SUBTRACT 2 FROM XDAY1
               IF (XDINYY NOT = 300 AND
                   XDINYY NOT = 100) THEN
      *            ...+1 (for preceding February, if leap year) ...
                   DIVIDE XDINYY BY 4 GIVING XDWK4 REMAINDER XDWK1
                   IF (XDWK1 = 0) THEN
                       ADD 1 TO XDAY1
                   END-IF
               END-IF
               IF (XDINMM < 8) THEN
      *            ...+MM/2 (preceding 31-sts for March-July) ...
                   MULTIPLY XDINMM BY .5 GIVING XDWK1
                   ADD XDWK1 TO XDAY1
               ELSE
      *            ...+(MM+1)/2 (same for August-December) ...
                   ADD 1 TO XDINMM GIVING XDWK1
                   MULTIPLY .5 BY XDWK1
                   ADD XDWK1 TO XDAY1
               END-IF
           END-IF
      *    ...+DD (days in the month up to the ending date)
           ADD XDINDD TO XDAY1
      *==============================================================
           CONTINUE.
       XCVTAE.
           EXIT.
      /EJECT
       XDC84  SECTION.
      *==============================================================
      *    Validate external date format
      *==============================================================
           MOVE SPACES TO W0RTN
           MOVE ZEROS TO XDI8DT
      *    If external date is zero, do not check
           IF (XDEXDT = ZEROS) THEN
             GO XDC84E
           END-IF
      *..............................................................
      *    Map external to internal according to date format
           IF (XDDTFM = 'DMY') THEN
               MOVE XDEX01 TO XDI8DD
               MOVE XDEX02 TO XDI8MM
               DIVIDE XDEY02 BY 1000 GIVING XDI8CC
               MOVE XDEY02 TO XDI8YY
           ELSE
               IF (XDDTFM = 'MDY') THEN
                   MOVE XDEX01 TO XDI8MM
                   MOVE XDEX02 TO XDI8DD
                   DIVIDE XDEY02 BY 1000 GIVING XDI8CC
                   MOVE XDEY02 TO XDI8YY
               ELSE
                   DIVIDE XDEY01 BY 1000 GIVING XDI8CC
                   MOVE XDEY01 TO XDI8YY
                   MOVE XDEX03 TO XDI8MM
                   MOVE XDEX04 TO XDI8DD
               END-IF
           END-IF
           IF (YPMTFD NOT = SPACES) THEN
               GO XDC84E
           END-IF
           IF (XDDTFM = 'YMD') THEN
      *..............................................................
               IF (XDEY01 NOT < 2200 OR
                   XDI8DT NOT = ZEROS AND
                   XDEY01 < 1801) THEN
                   GO XDC84M
               END-IF
           ELSE
      *..............................................................
               IF (XDEY02 NOT < 2200 OR
                   XDI8DT NOT = ZEROS AND
                   XDEY02 < 1801) THEN
                   GO XDC84M
               END-IF
           END-IF
      *..............................................................
      *    Check months in range 1 to 12
           IF (XDI8MM < 1) THEN
             GO XDC84M
           END-IF
           IF (XDI8MM > 12) THEN
             GO XDC84M
           END-IF
      *..............................................................
      *    Check days in range 1 to maximum for month
           IF (XDI8DD < 1) THEN
             GO XDC84M
           END-IF
           IF (XDI8DD > YXD(XDI8MM)) THEN
             GO XDC84M
           END-IF
      *..............................................................
      *    Special case: leap year
           IF (XDI8MM = 2) THEN
               IF (XDI8YY NOT = 900 AND
                   XDI8YY NOT = 100) THEN
                   DIVIDE 4 INTO XDI8YY GIVING ZDWK01 REMAINDER ZDWK02
               ELSE
                   MOVE 1 TO ZDWK02
               END-IF
      *        Year is not leap
               IF (ZDWK02 NOT = ZEROS) THEN
                   IF (XDI8DD > 28) THEN
                       GO XDC84M
                   END-IF
               END-IF
           END-IF
           GO XDC84E
      *..............................................................
      *    Send error message
           CONTINUE.
       XDC84M.
      *    Send message '*Invalid date'
      *    Message ID
           MOVE 'Y2U0006' TO ZAMSID
      *    Message file
           MOVE 'Y2USRMSG' TO ZAMSGF
           PERFORM ZASNMS
           MOVE 'Y2U0006' TO W0RTN
      *    Disable time portion if timestamp is validated
           MOVE ZEROS TO XTTIM
      *==============================================================
           CONTINUE.
       XDC84E.
           EXIT.
      /EJECT
       XDOWS  SECTION.
      *==============================================================
      *    Setup days of week array
      *==============================================================
           MOVE XDCDW TO YDOW
           MOVE 0 TO XDWSL
           MOVE 1 TO YY
           PERFORM UNTIL NOT (YY NOT > 7)
               IF (YDOE(YY) = XDSEL) THEN
                   ADD 1 TO XDWSL
               END-IF
               ADD 1 TO YY
           END-PERFORM
      *==============================================================
           CONTINUE.
       XDOWSE.
           EXIT.
      /EJECT
       XDUDY  SECTION.
      *==============================================================
      *    Calculate duration, *DAYS
      *==============================================================
           IF (XDAY1 < 1 OR
               XDAY2 < 1) THEN
               MOVE 0 TO XDURR
               MOVE 'Y2U0006' TO W0RTN
               GO XDUDYE
           END-IF
           IF (XDAY1 > XDAY2) THEN
      *        From date2 to date1
               MOVE XDAY2 TO XABEG
               MOVE XDAY1 TO XAEND
           ELSE
      *        From date1 to date2
               MOVE XDAY1 TO XABEG
               MOVE XDAY2 TO XAEND
           END-IF
           IF (XDWSL = 0) THEN
      *        None days of week selected
               MOVE 0 TO XDURR
               GO XDUDYC
           END-IF
           SUBTRACT XABEG FROM XAEND GIVING XDURR
           IF (XDWSL = 7) THEN
      *        All days of week selected
               GO XDUDYC
           END-IF
      *    Some days of week selected
           DIVIDE XDURR BY 7 GIVING XDURR REMAINDER XDLSW
           MULTIPLY XDWSL BY XDURR
           IF (XDLSW NOT = 0) THEN
      *        Determine day of week of the beginning date
               ADD 3 TO XABEG GIVING YY
               DIVIDE YY BY 7 GIVING XDWK4 REMAINDER YY
      *        Loop: Increment the date by the last week
               PERFORM UNTIL NOT (XDLSW > 0)
      *            Increment the day of week
                   ADD 1 TO YY
                   SUBTRACT 1 FROM XDLSW
      *            Put day of week into the range 1-7
                   IF (YY = 8) THEN
                       MOVE 1 TO YY
                   END-IF
      *            Selected day of the last week has been processed
                   IF (YDOE(YY) = XDSEL) THEN
      *                Increment duration
                       ADD 1 TO XDURR
                   END-IF
      *            End of loop
               END-PERFORM
           END-IF
           CONTINUE.
       XDUDYC.
           IF (XDURR = 0) THEN
      *        Return Code: Unable to calculate duration
               MOVE 'Y2U0060' TO W0RTN
           ELSE
               MOVE SPACES TO W0RTN
           END-IF
      *==============================================================
           CONTINUE.
       XDUDYE.
           EXIT.
      /EJECT
       XDV84T SECTION.
      *==============================================================
      *    Convert internal to external date format
      *==============================================================
      *    Map external to internal according to date format
           IF (XDDTFM = 'DMY') THEN
               MOVE XDI8DD TO XDEX01
               MOVE XDI8MM TO XDEX02
               MULTIPLY 1000 BY XDI8CC GIVING XDEY02
               ADD XDI8YY TO XDEY02
           ELSE
               IF (XDDTFM = 'MDY') THEN
                   MOVE XDI8MM TO XDEX01
                   MOVE XDI8DD TO XDEX02
                   MULTIPLY 1000 BY XDI8CC GIVING XDEY02
                   ADD XDI8YY TO XDEY02
               ELSE
      *            YMD format
                   MULTIPLY 1000 BY XDI8CC GIVING XDEY01
                   ADD XDI8YY TO XDEY01
                   MOVE XDI8MM TO XDEX03
                   MOVE XDI8DD TO XDEX04
               END-IF
           END-IF
      *==============================================================
           CONTINUE.
       XDV84E.
           EXIT.
      /EJECT
       Y0SET  SECTION.
      *==============================================================
      *    Set cursor by *SET CURSOR data
      *==============================================================
      *==============================================================
           CONTINUE.
       Y0EXIT.
           EXIT.
      /EJECT
       Y8TST  SECTION.
      *==============================================================
      *    Test cursor
      *==============================================================
           ACCEPT DS0001420D-I-O-DSPF FROM I-O-FEEDBACK-AREA
            FOR DS0001420D
           MOVE ZZRWCL OF DS0001420D-I-O-DSPF TO ZINPOS
           MOVE SPACES TO W0CFL
           DIVIDE ZINPOS BY 256 GIVING W0CRW REMAINDER W0CCL
      *==============================================================
           CONTINUE.
       Y8EXIT.
           EXIT.
      /EJECT
       Y9CLR  SECTION.
      *==============================================================
      *    Clear *SET CURSOR data
      *==============================================================
      *==============================================================
           CONTINUE.
       Y9EXIT.
           EXIT.
      /EJECT
       ZASNMS SECTION.
      *==============================================================
      *    Send message to program's message queue
      *==============================================================
      *    Send if first error message or not an error message
           IF (ZAMSTP NOT = SPACES OR
               ZAFSMS NOT = 'N') THEN
               IF (ZAMSTP = SPACES) THEN
      *            Signal first error message sent
                   MOVE 'N' TO ZAFSMS
               END-IF
               IF (ZAPGMQ = SPACES) THEN
                   MOVE ZZPGM OF JOB-CONTEXT TO ZAPGMQ
               END-IF
      *        If no message file specified, use default
               IF (ZAMSGF = SPACES) THEN
                   MOVE ZADFMF TO ZAMSGF
               END-IF
               CALL 'Y2SNMGC' USING
      *        Program queue
                 ZAPGMQ
      *        Relative queue
                 ZAPGRL
      *        Message ID
                 ZAMSID
      *        Message file
                 ZAMSGF
      *        Message data
                 ZAMSDA
      *        Message type
                 ZAMSTP
               END-CALL
           END-IF
      *    Clear all fields for default mechanism next time
      *    Program queue
           MOVE SPACES TO ZAPGMQ
      *    Relative queue
           MOVE SPACES TO ZAPGRL
      *    Message ID
           MOVE SPACES TO ZAMSID
      *    Message file
           MOVE SPACES TO ZAMSGF
      *    Message data
           MOVE SPACES TO ZAMSDA
      *    Message type
           MOVE SPACES TO ZAMSTP
      *==============================================================
           CONTINUE.
       ZAEXIT.
           EXIT.
      /EJECT
       ZCATWK SECTION.
      *==============================================================
      *    Process *CONCAT request
      *==============================================================
           MOVE YRSW04 TO YRSW00
           MOVE ZEROS TO YRSW01
           IF (YRSW05 = SPACES) THEN
               ADD YRSW02 TO YRSW01
               ADD YRSW03 TO YRSW01
               ADD  1 TO YRSW01
               IF (YRSW01 < YRSW04) THEN
                   MOVE X'FF' TO YRSW06X(YRSW01)
               ELSE
                   MOVE X'FF' TO YRSW06X(YRSW04)
               END-IF
           END-IF
           IF (YRSW05 = 'T') THEN
               PERFORM UNTIL NOT (YRSW01 = 0)
                   SUBTRACT 1 FROM YRSW00
                   IF (YRSW00 = 0) THEN
                       MOVE X'FF' TO YRSW06X(YRSW04)
                       ADD  1  TO YRSW01
                   ELSE
                       IF (YRSW06X(YRSW00) NOT = SPACES) THEN
                           MOVE YRSW00 TO YRSW01
                           ADD   1 TO YRSW01
                           ADD  YRSW03 TO YRSW01
                           MOVE X'FF' TO YRSW06X(YRSW01)
                       END-IF
                   END-IF
               END-PERFORM
           END-IF
      *==============================================================
           CONTINUE.
       ZCEXIT.
           EXIT.
      /EJECT
       ZDVPMT SECTION.
      *==============================================================
      *    Process prompt request
      *==============================================================
      *
      *    Initialise prompt workfields
           MOVE SPACES TO YPMTFD
           MOVE ZERO TO YAFSCH
           MOVE ZERO TO YPMRRN
      *
           IF (C-INDICATOR-ON(04)) THEN
               SET C-INDICATOR-ON(04) TO TRUE
      *
      *        Extract cursor row and column
               ACCEPT DS0001420D-I-O-DSPF
               FROM I-O-FEEDBACK-AREA FOR DS0001420D
               DIVIDE ZZRWCL BY 256 GIVING ZHCSRW REMAINDER ZHCSCL
      *        Save cursor position for redisplay
      *        Row
               MOVE ZEROS TO ZZZCSRW
               MOVE ZHCSRW TO ZZZCSRW
      *        Column
               MOVE ZEROS TO ZZZCSCL
               MOVE ZHCSCL TO ZZZCSCL
      *
      *        Save sfl rrn at top of page
               IF (ZZSFRC OF DS0001420D-I-O-DSPF > ZERO) THEN
                   MOVE ZZSFRC OF DS0001420D-I-O-DSPF TO ZZSFRC OF
                     ZSFLCTL-WS-O
               END-IF
               MOVE ZZSFRC OF DS0001420D-I-O-DSPF TO YZSFRC
      *
      *        Initialise sfl workfields
               MOVE 11 TO ZHSTRW
               MOVE 20 TO ZHNDRW
               MOVE 1 TO ZHRLEN
               MOVE ZERO TO ZHF4RW
               MOVE ZERO TO ZHWK1Z
      *
      *        Resolve prompt row number on sfl
               IF (ZHCSRW NOT < ZHSTRW AND
                   ZHCSRW NOT > ZHNDRW) THEN
                   SUBTRACT ZHSTRW FROM ZHCSRW GIVING ZHWK1Z
                   DIVIDE ZHWK1Z BY ZHRLEN GIVING ZHWK1Z
                   MOVE ZHWK1Z TO YZSFDL
                   MULTIPLY ZHWK1Z BY ZHRLEN GIVING ZHWK1Z
                   SUBTRACT ZHWK1Z FROM ZHCSRW GIVING ZHF4RW
               END-IF
      *
               IF (YPMTFD = SPACES) THEN
      *            Error if user defined prompting is not specified.
                   IF (W0PMT = 'N') THEN
                       MOVE '*NONE' TO YPMTFD
                       MOVE 'Y' TO W0HLP
                       MOVE 'Y' TO ZAFSMS
      *                Send error message.
      *                Message ID
                       MOVE 'Y2U0101' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
                       PERFORM ZASNMS
                   END-IF
               END-IF
      *
      *        Save first changed  rrn
               IF (ZHCSRW NOT < ZHSTRW AND
                   ZHCSRW NOT > ZHNDRW AND
                   YPMTFD NOT = '*NONE') THEN
      *
                   IF (ZZRR NOT = ZERO) THEN
                       READ SUBFILE DS0001420D NEXT MODIFIED
                         FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
                       END-READ
                       MOVE DS0001420D-F TO
                         ZSFLRCD-WS-I
                       IF (NOT C-NO-MOD-SFLRCDS) THEN
                           MOVE CORRESPONDING
                             ZSFLRCD-I OF ZSFLRCD-WS-I TO
                             ZSFLRCD-O OF ZSFLRCD-WS-O
                           MOVE ZZRR TO YAFSCH
                           SET C-INDICATOR-ON(84) TO TRUE
                           REWRITE SUBFILE DS0001420D-F FROM
                             ZSFLRCD-WS-O
                             FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
                           END-REWRITE
                       END-IF
                   END-IF
      *
      *            Calculate rrn for prompt slf record
                   SUBTRACT ZHSTRW FROM ZHCSRW GIVING ZHWK1Z
                   DIVIDE ZHWK1Z BY ZHRLEN GIVING ZHWK1Z
                   ADD ZHWK1Z TO YZSFRC GIVING YPMRRN
      *
      *            Chain to sfl record
                   MOVE YPMRRN TO ZZRR
                   READ SUBFILE DS0001420D
                     FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
                   END-READ
                   MOVE DS0001420D-F TO
                     ZSFLRCD-WS-I
                   IF (NOT C-NO-RECORD) THEN
                       MOVE CORRESPONDING
                         ZSFLRCD-I OF ZSFLRCD-WS-I TO
                         ZSFLRCD-O OF ZSFLRCD-WS-O
                       SET C-INDICATOR-ON(84) TO TRUE
                       REWRITE SUBFILE DS0001420D-F FROM ZSFLRCD-WS-O
                         FORMAT IS 'ZSFLRCD' INDICATORS ARE INDICS
                       END-REWRITE
                   ELSE
                       MOVE ZERO TO YPMRRN
                   END-IF
      *
      *            Test first changed rrn/prompt rrn
                   IF (YAFSCH = ZERO) THEN
                       MOVE YPMRRN TO YAFSCH
                   END-IF
      *
      *            If prompt rrn < first changed rrn
                   IF (YPMRRN NOT = ZERO AND
                       YPMRRN < YAFSCH) THEN
                       MOVE YPMRRN TO YAFSCH
                   END-IF
      *
               END-IF
      *
           END-IF
      *==============================================================
           CONTINUE.
       ZDEXIT.
           EXIT.
      /EJECT
       ZHHPKY SECTION.
      *==============================================================
      *    Display HELP text
      *==============================================================
      *    Signal help request
           MOVE 'Y' TO W0HLP
      *
      *    Extract cursor row and column
           ACCEPT DS0001420D-I-O-DSPF FROM I-O-FEEDBACK-AREA FOR
             DS0001420D
           DIVIDE ZZRWCL BY 256 GIVING ZHCSRW REMAINDER ZHCSCL
      *
      *    Save cursor position for redisplay
      *    Row
           MOVE ZEROS TO ZZZCSRW
           ADD ZHCSRW TO ZZZCSRW
      *    Column
           MOVE ZEROS TO ZZZCSCL
           ADD ZHCSCL TO ZZZCSCL
      *
           MOVE 'DS0001420H' TO W0HPMB
           MOVE SPACES TO YYHPFL
           MOVE SPACES TO YYHPLB
           MOVE '*START' TO YYHLVN
           MOVE '*NORMAL' TO YYUSOP
           MOVE ZHCSRW TO YYRW
           MOVE ZHCSCL TO YYCL
           MOVE ZEROS  TO YYLGCT
           MOVE SPACES TO YYLGVN
           CALL 'YDDSHPR' USING
      *    Member name
             W0HPMB
      *    *DFT text file
             YYHPFL
      *    Help text library
             YYHPLB
      *    Return code
             W0RTN
      *    Help label
             YYHLVN
      *    Options
             YYUSOP
      *    Row
             YYRW
      *    Column
             YYCL
      *    # of grps
             YYLGCT
      *    Label grps
             YYLGVN
           END-CALL
      *
      *    Clear set cursor DDS indicator
           IF (C-INDICATOR-OFF(94)) THEN
               MOVE 'OFF' TO WCSRLC
               SET C-INDICATOR-ON(94) TO TRUE
           END-IF
      *==============================================================
           CONTINUE.
       ZHEXIT.
           EXIT.
      /EJECT
       ZXEXPG SECTION.
      *==============================================================
      *    Cancel & exit program
      *==============================================================
      *    USER: Exit program processing
      *    F03=Exit
      *    CASE: CTL.*CMD key is *Fast Exit
      *    *IF
           IF (C-INDICATOR-ON(03)) THEN
      *        *Return code
               MOVE 'Y2U9999' TO P0RTN
               PERFORM ZYEXPG
           END-IF
           PERFORM ZYEXPG
      *==============================================================
           CONTINUE.
       ZXEXIT.
           EXIT.
      /EJECT
       ZYEXPG SECTION.
      *==============================================================
      *    Exit program: Direct
      *==============================================================
           CLOSE DS0001420D
           CLOSE DSVEHHDRL5
           CLOSE DSRUNCTLL2
           CLOSE SDDLRDTAL1
           CLOSE DSVEHHDRL6
           CLOSE DSVEHINVL1
      *    Reset entry parameters as appropriate
           PERFORM ZZEXPM.
      *    Exit program
           CONTINUE.
       ZYEXPG-EXIT.
           GOBACK.
      *==============================================================
           CONTINUE.
       ZYEXIT.
           EXIT.
      /EJECT
       ZZEXPM SECTION.
      *==============================================================
      *    Return parameters from work fields
      *==============================================================
           MOVE P3SDDLRNO TO WP0001
      *==============================================================
           CONTINUE.
       ZZPEXT.
           EXIT.
      /EJECT
       ZZINIT SECTION.
      *==============================================================
      *    Initialisation
      *==============================================================
           IF (W0ICL = SPACES) THEN
      *        *Initial call
               MOVE 'Y' TO W0ICL
           ELSE
               MOVE 'N' TO W0ICL
           END-IF
           MOVE SPACES TO P0RTN
           MOVE SPACES TO W0RTN
           MOVE ZEROS  TO W0RTW
           MOVE SPACES TO W0RSF
           MOVE '400' TO W0ENV
           MOVE ALL B'0' TO INDICS
      *    Clear all neither parameters
           INITIALIZE P2PARM
           MOVE SPACES TO ZZPGM OF JOB-CONTEXT
      *    Retrieve job attributes
           CALL 'Y2RTJCR' USING
             JOB-CONTEXT
           END-CALL
      *    Setup job date/time
           MOVE ZZSD7 OF JOB-CONTEXT TO ZZJDT
           ACCEPT ZZTIME FROM TIME
           MOVE ZZHNS TO ZZJTM OF JOB-CONTEXT
           MOVE 'DS0001420S' TO ZZPGM OF JOB-CONTEXT
      *    Define work field U:Year (4)
           MOVE ZERO TO WUUYR4 OF WORK-CONTEXT
      *    Define work field U:Date (6)
           MOVE ZERO TO WUHENB OF WORK-CONTEXT
           MOVE ZEROS TO ZZCSRW OF ZSFLCTL-WS-O
           MOVE ZEROS TO ZZCSCL OF ZSFLCTL-WS-O
      *
      *    Initialize array variables
      *    Flag no *SET CURSOR in the program
           MOVE 'N' TO YSETCS
           MOVE SPACES TO WCSRLC
      *
      *    Obtain default message file
           MOVE 'JSMGFLA' TO DATA-AREA-NAME
           CALL 'Y2RTDAC' USING
             DATA-AREA-NAME
             ZADFMF
           END-CALL
      *    Signal first error message outstanding
           MOVE 'Y' TO ZAFSMS
      *    Open files
           OPEN I-O DS0001420D
           OPEN INPUT DSVEHHDRL5
           ACCEPT DSVEHHDRL5-OPEN FROM OPEN-FEEDBACK-AREA FOR DSVEHHDRL5
      *    Move main file information to JOB context
           MOVE CORRESPONDING OPENFA OF DSVEHHDRL5-OPEN TO JOB-CONTEXT
           CALL 'Y2QLVNR' USING
             ZZFFL OF JOB-CONTEXT
             ZZFLB OF JOB-CONTEXT
             ZZFQL OF JOB-CONTEXT
           END-CALL
           OPEN INPUT DSRUNCTLL2
           ACCEPT DSRUNCTLL2-OPEN FROM OPEN-FEEDBACK-AREA FOR DSRUNCTLL2
           OPEN INPUT SDDLRDTAL1
           ACCEPT SDDLRDTAL1-OPEN FROM OPEN-FEEDBACK-AREA FOR SDDLRDTAL1
           OPEN INPUT DSVEHHDRL6
           ACCEPT DSVEHHDRL6-OPEN FROM OPEN-FEEDBACK-AREA FOR DSVEHHDRL6
           OPEN INPUT DSVEHINVL1
           ACCEPT DSVEHINVL1-OPEN FROM OPEN-FEEDBACK-AREA FOR DSVEHINVL1
           MOVE 'Y' TO W0OPN
           MOVE 'N' TO W0PMT
      *    Define local work field DS Processing Status
           MOVE SPACES TO YL0001 OF WORK-CONTEXT
      *    Define local work field U:DS Processing Status
           MOVE SPACES TO YL0002 OF WORK-CONTEXT
      *    Define local work field Create Date D8#
           MOVE ZERO TO YN0001 OF WORK-CONTEXT
      *    Define local work field Create Time
           MOVE ZERO TO YN0002 OF WORK-CONTEXT
      *    Define local work field Create User
           MOVE SPACES TO YN0003 OF WORK-CONTEXT
      *    Define local work field Create Program
           MOVE SPACES TO YN0004 OF WORK-CONTEXT
      *    Define local work field Create Job
           MOVE SPACES TO YN0005 OF WORK-CONTEXT
      *    Define local work field Date Last Changed D8#
           MOVE ZERO TO YN0006 OF WORK-CONTEXT
      *    Define local work field Time Last Changed
           MOVE ZERO TO YN0007 OF WORK-CONTEXT
      *    Define local work field User Last Changed
           MOVE SPACES TO YN0008 OF WORK-CONTEXT
      *    Define local work field Program Last Changed
           MOVE SPACES TO YN0009 OF WORK-CONTEXT
      *    Define local work field Job Last Changed
           MOVE SPACES TO YN0010 OF WORK-CONTEXT
      *    Define local work field SD Dealer Abbreviation
           MOVE SPACES TO YN0011 OF WORK-CONTEXT
      *    Define local work field SD Account Type
           MOVE SPACES TO YN0012 OF WORK-CONTEXT
      *    Define local work field SD BIR Block Code
           MOVE SPACES TO YN0013 OF WORK-CONTEXT
      *    Define local work field SD Code DC
           MOVE SPACES TO YN0014 OF WORK-CONTEXT
      *    Define local work field SD Code DCZ
           MOVE SPACES TO YN0015 OF WORK-CONTEXT
      *    Define local work field SD Engagement Code
           MOVE SPACES TO YN0016 OF WORK-CONTEXT
      *    Define local work field SD Commercial Zone
           MOVE SPACES TO YN0017 OF WORK-CONTEXT
      *    Define local work field SD Commercial Region
           MOVE SPACES TO YN0018 OF WORK-CONTEXT
      *    Define local work field SD Incorporated Dealer
           MOVE SPACES TO YN0019 OF WORK-CONTEXT
      *    Define local work field SD Language Code
           MOVE SPACES TO YN0020 OF WORK-CONTEXT
      *    Define local work field SD BIR Account Number
           MOVE SPACES TO YN0021 OF WORK-CONTEXT
      *    Define local work field SD Address Line 1
           MOVE SPACES TO YN0022 OF WORK-CONTEXT
      *    Define local work field SD Address Line 2
           MOVE SPACES TO YN0023 OF WORK-CONTEXT
      *    Define local work field SD Address Line 3
           MOVE SPACES TO YN0024 OF WORK-CONTEXT
      *    Define local work field SD Postcode
           MOVE SPACES TO YN0025 OF WORK-CONTEXT
      *    Define local work field SD Town
           MOVE SPACES TO YN0026 OF WORK-CONTEXT
      *    Define local work field SD Telephone Number
           MOVE SPACES TO YN0027 OF WORK-CONTEXT
      *    Define local work field SD Fax Number
           MOVE SPACES TO YN0028 OF WORK-CONTEXT
      *    Define local work field SD Solvency Code
           MOVE SPACES TO YN0029 OF WORK-CONTEXT
      *    Define local work field SD Invoice Account Number
           MOVE SPACES TO YN0030 OF WORK-CONTEXT
      *    Define local work field SD Stock Type
           MOVE SPACES TO YN0031 OF WORK-CONTEXT
      *    Define local work field SD Invoicing Authorised
           MOVE SPACES TO YN0032 OF WORK-CONTEXT
      *    Define local work field SD DAD Authorised
           MOVE SPACES TO YN0033 OF WORK-CONTEXT
      *    Define local work field SD Delivery Authorised
           MOVE SPACES TO YN0034 OF WORK-CONTEXT
      *    Define local work field SD Geographic Zone UNUSED
           MOVE SPACES TO YN0035 OF WORK-CONTEXT
      *    Define local work field SD Import Centre OBSOLETE
           MOVE SPACES TO YN0036 OF WORK-CONTEXT
      *    Define local work field SD Transport Zone UNUSED
           MOVE SPACES TO YN0037 OF WORK-CONTEXT
      *    Define local work field SD Carrier UNUSED
           MOVE SPACES TO YN0038 OF WORK-CONTEXT
      *    Define local work field SD Block Code UNUSED
           MOVE SPACES TO YN0039 OF WORK-CONTEXT
      *    Define local work field SD Region For Calc UNUSED
           MOVE SPACES TO YN0040 OF WORK-CONTEXT
      *    Define local work field SD Invoice Block UNUSED
           MOVE SPACES TO YN0041 OF WORK-CONTEXT
      *    Define local work field SD Defer ConsignmntUNUSED
           MOVE SPACES TO YN0042 OF WORK-CONTEXT
      *    Define local work field SD Active Ind UNUSED
           MOVE SPACES TO YN0043 OF WORK-CONTEXT
      *    Define local work field SD A/C Make (APL code)
           MOVE SPACES TO YN0044 OF WORK-CONTEXT
      *    Define local work field SD A/C Management Area
           MOVE SPACES TO YN0045 OF WORK-CONTEXT
      *    Define local work field Invariant BCV
           MOVE SPACES TO YL0003 OF WORK-CONTEXT
      *    Define local work field U:Total Invoice (7.2)Pen
           MOVE ZERO TO YL0004 OF WORK-CONTEXT
      *    Define local work field U:Total Invoice (7.2)Inv
           MOVE ZERO TO YL0005 OF WORK-CONTEXT
      *    Define local work field DS VEH Invoice Tot No Day
           MOVE ZERO TO YL0006 OF WORK-CONTEXT
      *    Define local work field U:Text (4)
           MOVE SPACES TO YL0007 OF WORK-CONTEXT
      *    Define local work field U:Text (4) b
           MOVE SPACES TO YL0008 OF WORK-CONTEXT
      *    Define local work field U:Date YYYYMMDD
           MOVE ZERO TO YL0009 OF WORK-CONTEXT
      *    Define local work field *Date1 (ending)
           MOVE ZERO TO YL0010 OF WORK-CONTEXT
      *    Define local work field *Date2 (beginning)
           MOVE ZERO TO YL0011 OF WORK-CONTEXT
      *    Define local work field *Duration (result)
           MOVE ZERO TO YL0012 OF WORK-CONTEXT
      *    Define local work field U:Total Invoice (7.2)Pen
           MOVE ZERO TO YL0013 OF WORK-CONTEXT
      *    Define local work field U:Total Invoice (7.2)Inv
           MOVE ZERO TO YL0014 OF WORK-CONTEXT
      *    Define local work field Owning Account
           MOVE SPACES TO YL0015 OF WORK-CONTEXT
      *    Define local work field DS VIN
           MOVE SPACES TO YL0016 OF WORK-CONTEXT
      *    Define local work field U:Dealer Txt(4)
           MOVE SPACES TO YL0017 OF WORK-CONTEXT
      *    Define local work field U:Dealer Account (Input)
           MOVE SPACES TO YL0018 OF WORK-CONTEXT
      *    Define local work field SD Dealer Number
           MOVE SPACES TO YL0019 OF WORK-CONTEXT
      *    Define local work field Authorisation Status
           MOVE SPACES TO YL0020 OF WORK-CONTEXT
      *    Define local work field U:User ID Prefix
           MOVE SPACES TO YL0021 OF WORK-CONTEXT
      *    Obtain system date format
           MOVE 'Y2DTFMA' TO DATA-AREA-NAME
           CALL 'Y2RTDAC' USING
             DATA-AREA-NAME
             XDDTFM
           END-CALL
      *    Days in month for date validation
           MOVE '312931303130313130313031' TO YXD-A
      *    Subfile page
           MOVE 10 TO ZZSFPG
      *    Subfile record number
           MOVE 1 TO ZZSFRC OF ZSFLCTL-WS-O
      *    Maximum record number
           MOVE ZERO TO ZZRRMX
      *    Scan limit
           MOVE 000000500 TO W0SLM
      *    Subfile pages
           MOVE 1 TO W0SPG
      *    Processed Subfile record
           MOVE ZERO TO W0RR0
      *..............................................................
           MOVE 'DS0001420S' TO ZZPGM OF ZSFLCTL-WS-O
           MOVE ZZUSR OF JOB-CONTEXT TO ZZUSR OF DS0001420D-WS-O
           MOVE ZZJOB OF JOB-CONTEXT TO ZZJOB OF DS0001420D-WS-O
      *    USER: Initialize program
      *    Utl @Copyright - #Standard Functions  *
     ** Function   : Copyright
     ** System     : All models
     ** Programmer : UKNOWN
     ** Date       : 2018
     **.................................................................
      *    Utl set screen sysid (Fle - #Standard Functions  *
     ** Function   : Load SYSNAME data area into screen title
     ** System     : Vehicle Finance
     ** Programmer : Maurice Mead
     ** Date       : 11/08/95
     **................................................................
      *.Start.of.User.source...........................................
           MOVE 'SYSNAME'  TO RUK-DTAARA-NAME
           CALL 'Y2RTDAC'
             USING RUK-DTAARA-NAME
                   ZZSNAM  OF ZSFLCTL-WS-O
           END-CALL
      *.End.of.user.source.............................................
      *    *Scan limit
           MOVE 9999999 TO W0SLM
      *    If View Not set - Set as View 1
      *    CASE: PAR.U:View number is None
      *    *IF
           IF (P2IVEWNUM = SPACES) THEN
      *        U:View number
               MOVE '1' TO P2IVEWNUM
           END-IF
           MOVE 2 TO YRSW03
           MOVE 1 TO YRSW02
           IF (YRSW02 NOT > 0 OR
               YRSW03 NOT > 0 OR
               YRSW02 > 00010 OR
               YRSW03 > 00010) THEN
               MOVE 'Y2U0510' TO W0RTN
           ELSE
               MOVE ZZUSR OF JOB-CONTEXT TO W0STRNG
               MOVE W0STRNG(YRSW02:YRSW03) TO YL0021 OF WORK-CONTEXT
           END-IF
      *    CASE:
      *    - c1 OR c2 OR c3
      *    |- c1    : LCL.U:User ID Prefix is AG Prefix (Head Office)
      *    |- c2    : LCL.U:User ID Prefix is PG Prefix (Head Office)
      *    |- c3    : JOB.*USER is I.S.
      *    '-
      *    *IF
           IF (YL0021 OF WORK-CONTEXT = 'AG' OR
               YL0021 OF WORK-CONTEXT = 'PG' OR
               (ZZUSR OF JOB-CONTEXT = 'PRAGTSK')) THEN
      *        Authorisation Status
               MOVE '3' TO YL0020 OF WORK-CONTEXT
           ELSE
      *        CASE: *OTHERWISE
      *        Authorisation Status
               MOVE '1' TO YL0020 OF WORK-CONTEXT
           END-IF
      *    Initialise subfile control
           PERFORM MEIZZ2
      *==============================================================
           CONTINUE.
       ZZEXIT.
           EXIT.
