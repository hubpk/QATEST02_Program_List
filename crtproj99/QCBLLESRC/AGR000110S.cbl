       PROCESS APOST GRAPHIC.
      ***************************************************************
       IDENTIFICATION DIVISION.
     H/TITLE Prc REA Extracts          Execute external functio
     Z* CRTCBLPGM
     Z* OPTION(*SRCDBG) CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function  Version:  8.7
      *
     H* Company    : Renault (UK) Applications
     H* System     : Renault (UK) Applications
     H* User name  : PG00291
     H* Date       : 23/08/18 time: 21:53:56
     H* Copyright  : Renault (UK) Applications
      *
      *==============================================================
     M* MAINTENANCE   :
      *==============================================================
       PROGRAM-ID.  AGR000110S.
      /EJECT
      ***************************************************************
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER.  IBM-AS400.
       OBJECT-COMPUTER.  IBM-AS400.
       SPECIAL-NAMES.  OPEN-FEEDBACK IS OPEN-FEEDBACK-AREA,
           I-O-FEEDBACK IS I-O-FEEDBACK-AREA.
      /EJECT
      ***************************************************************
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      *
           SELECT DIDLRDTAL2
             ASSIGN TO DATABASE-DIDLRDTAL2
             ORGANIZATION IS INDEXED
             ACCESS MODE IS DYNAMIC
             RECORD KEY IS EXTERNALLY-DESCRIBED-KEY
             FILE STATUS IS FILE-STATUS.
      *    RTV : Dealer                    Retrieval (No Virtuals)
      *
       I-O-CONTROL.
      *
      /EJECT
      ***************************************************************
       DATA DIVISION.
       FILE SECTION.
      *
      *
       FD  DIDLRDTAL2
           LABEL RECORDS ARE STANDARD.
       01  DIDLRDTAL2-R.
           COPY DDS-ALL-FORMATS OF DIDLRDTAL2.
      /EJECT
      ***************************************************************
       WORKING-STORAGE SECTION.
      *
      *    Job context
       01  JOB-CONTEXT.
           COPY DDS-ALL-FORMATS OF Y2PGDSPK.
      *    Job date/time
           03  IJBDTTM.
           05  ZZJDT PIC S9(7).
           05  ZZJDTE REDEFINES ZZJDT.
           07  ZZJCC PIC S9(1).
           07  ZZJYY PIC S9(2).
           07  ZZJMM PIC S9(2).
           07  ZZJDD PIC S9(2).
           05  ZZJTM PIC S9(6).
           05  ZZJTME REDEFINES ZZJTM.
           07  ZZJHH PIC S9(2).
           07  ZZJNN PIC S9(2).
           07  ZZJSS PIC S9(2).
           03  ZZFQL PIC X(21).
           03  ZZFLB PIC X(10).
           03  ZZFFL PIC X(10).
           03  ZZFMB PIC X(10).
           03  ZZCDB PIC X(18).
           03  ZZLDB PIC X(18).
           03  ZZTMS PIC X(26).
       01  ZZTIME.
           03  ZZHNS PIC S9(6).
           03  ZZHH PIC S9(2).
      *
       77  C-IND-OFF PIC 1(1) VALUE B'0'.
       77  C-IND-ON PIC 1(1) VALUE B'1'.
       77  W0STRNG PIC X(32766).
      *
       01  FILE-STATUS PIC X(2).
           88  C-IO-OK VALUE '00'.
           88  C-EOF VALUE '10' '46'.
           88  C-NO-MOD-SFLRCDS VALUE '12'.
           88  C-IO-ERR VALUE '21' '22' '24' '30' '34' '90' '91' '92' '9
      -     '4' '95' '9A' '9H' '9I' '9K' '9M' '9N' '9P'.
           88  C-NO-RECORD VALUE '23'.
           88  C-RECORD-LOCKED VALUE '9D'.
      *
       01  UNTIL-CONDITION PIC 1(1).
           88  C-UNTIL-FALSE VALUE B'0'.
           88  C-UNTIL-TRUE VALUE B'1'.
      *
       01  FOREVER PIC 1(1) VALUE B'1'.
           88  C-FOREVER VALUE B'1'.
      *
       01  WRK-IO-TRASH-AREA PIC X(1).
      *
       01  W0RTN PIC X(7).
       01  W0RSF PIC X(1).
       01  W0ENV PIC X(3).
       01  W0RTW PIC S9(9) COMP-4.
       01  W0ICL PIC X(1).
      *
      *..............................................................
      *    Define Full Externally Described Keylist
       01  EXTSA1.
      *    Dealer Number
           03  ABDLRNBR PIC X(4).
      *    Dealer Number Suffix
           03  ABDLRSFX PIC X(2).
      *..............................................................
      *    *Synon (5,0) work field
       01  YRSW00 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW01 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW02 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW03 PIC S9(5) COMP-3.
      *    *Synon (5,0) work field
       01  YRSW04 PIC S9(5) COMP-3.
      *    *String work field
       01  YRSW05 PIC X(1).
       01  YRSW06.
           03  YRSW06X PIC X(1) OCCURS 10000.
      *    Outward parameters
       01  PARC.
      *    RCD : Dealer                    Retrieval (No Virtuals)
      *    I : MAP Dealer Number
      *    Dealer Number
           03  PADLRNBR PIC X(4).
      *    I : MAP Dealer Number Suffix
      *    Dealer Number Suffix
           03  PADLRSFX PIC X(2).
      *    O : MAP Name Number
      *    Name Number
           03  PANAMNBR PIC X(9).
      *    O : MAP Address Number
      *    Address Number
           03  PAADDNBR PIC X(7).
      *    O : MAP Dealer Network Type
      *    Dealer Network Type
           03  PADLRNET PIC X(1).
      *    O : MAP Dealer Region Code
      *    Dealer Region Code
           03  PAREGCDE PIC X(2).
      *    O : MAP Dealer Zone Code
      *    Dealer Zone Code
           03  PAZONCDE PIC X(2).
      *    O : MAP Dealer Trading Name
      *    Dealer Trading Name
           03  PADLRTRD PIC X(40).
      *    O : MAP Dealer Known by Name
      *    Dealer Known by Name
           03  PADLKNNM PIC X(40).
      *    O : MAP Dealer short name
      *    Dealer short name
           03  PADLRSHT PIC X(20).
      *    O : MAP Dealer Activity Start Dte
      *    Dealer Activity Start Dte
           03  PAACTSTR PIC S9(8) COMP-3.
      *    O : MAP Dealer Servicing End Date
      *    Dealer Servicing End Date
           03  PADLSVED PIC S9(8) COMP-3.
      *    O : MAP Dealer Cancel Final Date
      *    Dealer Cancel Final Date
           03  PACNLFNL PIC S9(8) COMP-3.
      *    O : MAP Dealer Set-Up Date
      *    Dealer Set-Up Date
           03  PADLRSET PIC S9(8).
      *    O : MAP Dealer Change Date
      *    Dealer Change Date
           03  PADLRCHG PIC S9(8).
      *    O : MAP Dealer Cancel Date
      *    Dealer Cancel Date
           03  PACNLDTE PIC S9(8).
      *    O : MAP Dealer Financial Status
      *    Dealer Financial Status
           03  PADLFNST PIC X(1).
      *    O : MAP Dealer Record Status
      *    Dealer Record Status
           03  PADLRCST PIC X(1).
      *    O : MAP BIR Address Identifier
      *    BIR Address Identifier
           03  PABIRADR PIC X(7).
      *    O : MAP Dealer Address Line#1
      *    Dealer Address Line#1
           03  PAADDL1 PIC X(35).
      *    O : MAP Dealer Address Line#2
      *    Dealer Address Line#2
           03  PAADDL2 PIC X(35).
      *    O : MAP Dealer Address Line#3
      *    Dealer Address Line#3
           03  PAADDL3 PIC X(35).
      *    O : MAP Dealer Address Line#4 ?
      *    Dealer Address Line#4 ?
           03  PAADDL4 PIC X(35).
      *    O : MAP Dealer Postal Code
      *    Dealer Postal Code
           03  PADLRPCODE PIC X(9).
      *    O : MAP Dealer Town
      *    Dealer Town
           03  PADLRTOWN PIC X(35).
      *    O : MAP Dealer Telephone Number
      *    Dealer Telephone Number
           03  PADLRTELNO PIC X(14).
      *    O : MAP Dealer Fax Number
      *    Dealer Fax Number
           03  PADLRFAXNO PIC X(14).
      *    O : MAP Dealer Country Identifier
      *    Dealer Country Identifier
           03  PADLRCTY PIC X(3).
      *    O : MAP Network/Non Network Ind
      *    Network/Non Network Ind
           03  PANETIND PIC X(1).
      *    O : MAP Dealer Number (Numeric)
      *    Dealer Number (Numeric)
           03  PADLRNONUM PIC S9(5).
      *    O : MAP Lead Dealer Number
      *    Lead Dealer Number
           03  PALEADNUM PIC X(4).
      *    O : MAP Lead Dealer Number Suffix
      *    Lead Dealer Number Suffix
           03  PALEADSFX PIC X(2).
      *    O : MAP Lead Dealer Nbr (Numeric)
      *    Lead Dealer Nbr (Numeric)
           03  PALEADNO PIC S9(5).
      *    O : MAP Lead Country Identifier
      *    Lead Country Identifier
           03  PALEADCTY PIC X(3).
      *    O : MAP Dealer AFRL/V55 flag
      *    Dealer AFRL/V55 flag
           03  PADLRFLAG1 PIC X(1).
      *    O : MAP Dealer Spare Flag 2
      *    Dealer Spare Flag 2
           03  PADLRFLAG2 PIC X(1).
      *    O : MAP Dealer Spare Flag 3
      *    Dealer Spare Flag 3
           03  PADLRFLAG3 PIC X(1).
      *    O : MAP Dealer Spare Code 1
      *    Dealer Spare Code 1
           03  PADLRCODE1 PIC X(2).
      *    O : MAP Dealer Spare Code 2
      *    Dealer Spare Code 2
           03  PADLRCODE2 PIC X(2).
      *    O : MAP Dealer Percentage 1
      *    Dealer Percentage 1
           03  PADLRPCT1 PIC S9(4)V9(3) COMP-3.
      *    O : MAP Dealer Percentage 2
      *    Dealer Percentage 2
           03  PADLRPCT2 PIC S9(4)V9(3) COMP-3.
      *    O : MAP Dealer Percentage 3
      *    Dealer Percentage 3
           03  PADLRPCT3 PIC S9(4)V9(3) COMP-3.
      *    O : MAP Dealer Percentage 4
      *    Dealer Percentage 4
           03  PADLRPCT4 PIC S9(4)V9(3) COMP-3.
      *
       01  W0CLPG PIC X(10).
      *    Outward parameters
       01  PBRC.
      *    KEY : Customer Order Allocation OwnAcc/RegDte58 (Alloctd
      *    I :  Owning Account
      *    Owning Account
           03  PBOWNACC PIC X(6).
      *    I :  Registration Date 58
      *    Registration Date 58
           03  PBREGDT58 PIC S9(8) COMP-3.
      *
      *    Date range end
       01  WQ0001 PIC S9(8) COMP-3.
      *    Outward parameters
       01  PCRC.
      *    KEY : Customer Order            By Dealer/Cancel Date
      *    I :  Owning Account
      *    Owning Account
           03  PCOWNACC PIC X(6).
      *
      *    Date range start
       01  WQ0002 PIC S9(8) COMP-3.
      *    Date range end
       01  WQ0003 PIC S9(8) COMP-3.
      *    Outward parameters
       01  PDRC.
      *    KEY : Customer Order            Retrieval index
      *    I : MAP Owning Account
      *    Owning Account
           03  PDOWNACC PIC X(6).
      *
      *    Date range start
       01  WQ0004 PIC S9(8) COMP-3.
      *    Date range end
       01  WQ0005 PIC S9(8) COMP-3.
      *    Outward parameters
       01  PERC.
      *    KEY : Customer Order            By Dlr/CusOrd Date/Ord N
      *    I : RST Owning Account
      *    Owning Account
           03  PEOWNACC PIC X(6).
      *    I : MAP Customer Order Date #
      *    Customer Order Date #
           03  PECUSORDD8 PIC S9(8) COMP-3.
      *
       01  XDURR PIC S9(8) COMP-3.
       01  XDWK1 PIC S9(8) COMP-3.
       01  XDWK2 PIC S9(6) COMP-3.
       01  XDWK4 PIC S9(6) COMP-3.
      *    *Return code
       01  WQ0006 PIC X(7).
      *    Date Last Changed D8#
       01  WQ0007 PIC S9(8) COMP-3.
      *    Owning Account
       01  WQ0008 PIC X(6).
      *    Outward parameters
       01  PFRC.
      *    KEY : Customer Order Allocation OwnAcc/RegDte58 (Alloctd
      *    I : MAP Owning Account
      *    Owning Account
           03  PFOWNACC PIC X(6).
      *    I : MAP Registration Date 58
      *    Registration Date 58
           03  PFREGDT58 PIC S9(8) COMP-3.
      *
      *    Date range end
       01  WQ0009 PIC S9(8) COMP-3.
      *    Outward parameters
       01  PGRC.
      *    KEY : Customer Order            By Dealer/Cancel Date
      *    I : MAP Owning Account
      *    Owning Account
           03  PGOWNACC PIC X(6).
      *    I : MAP Order Cancelled Date
      *    Order Cancelled Date
           03  PGORDCANDT PIC S9(8) COMP-3.
      *
      *    Date range end
       01  WQ0010 PIC S9(8) COMP-3.
      *    Outward parameters
       01  PHRC.
      *    KEY : Customer Order            Retrieval index
      *    I : MAP Owning Account
      *    Owning Account
           03  PHOWNACC PIC X(6).
      *
      *    Date range start
       01  WQ0011 PIC S9(8) COMP-3.
      *    Date range end
       01  WQ0012 PIC S9(8) COMP-3.
       01  ZAPGMQ PIC X(10).
       01  ZAPGRL PIC X(5).
       01  ZAMSID PIC X(7).
       01  ZAMSGF PIC X(10).
       01  ZAMSDA PIC X(132).
       01  ZAMSTP PIC X(7).
       01  ZAFSMS PIC X(1).
       01  DIDLRDTAL2-OPEN.
           COPY DDS-ALL-FORMATS OF Y2IOPEN.
      *    Open feedback area
      *
       01  W0OPN PIC X(1).
       01  W0PMT PIC X(1).
      *    U:Year YYYY
       01  WORK-CONTEXT.
           03  YL0001 PIC S9(4) COMP-3.
      *    U:Number (8.0)
           03  YL0002 PIC S9(8) COMP-3.
      *    Date range start
           03  YL0003 PIC S9(8) COMP-3.
      *    Date range end
           03  YL0004 PIC S9(8) COMP-3.
      *    U:Valid for Order Date
           03  YL0005 PIC S9(8) COMP-3.
      *    Owning Account
           03  YL0006 PIC X(6).
      *    Name Number
           03  YN0001 PIC X(9).
      *    Address Number
           03  YN0002 PIC X(7).
      *    Dealer Network Type
           03  YL0007 PIC X(1).
      *    Dealer Region Code
           03  YN0003 PIC X(2).
      *    Dealer Zone Code
           03  YN0004 PIC X(2).
      *    Dealer Trading Name
           03  YN0005 PIC X(40).
      *    Dealer Known by Name
           03  YN0006 PIC X(40).
      *    Dealer short name
           03  YN0007 PIC X(20).
      *    Dealer Activity Start Dte
           03  YN0008 PIC S9(8) COMP-3.
      *    Dealer Servicing End Date
           03  YN0009 PIC S9(8) COMP-3.
      *    Dealer Cancel Final Date
           03  YN0010 PIC S9(8) COMP-3.
      *    Dealer Set-Up Date
           03  YN0011 PIC S9(8).
      *    Dealer Change Date
           03  YN0012 PIC S9(8).
      *    Dealer Cancel Date
           03  YN0013 PIC S9(8).
      *    Dealer Financial Status
           03  YN0014 PIC X(1).
      *    Dealer Record Status
           03  YN0015 PIC X(1).
      *    BIR Address Identifier
           03  YN0016 PIC X(7).
      *    Dealer Address Line#1
           03  YN0017 PIC X(35).
      *    Dealer Address Line#2
           03  YN0018 PIC X(35).
      *    Dealer Address Line#3
           03  YN0019 PIC X(35).
      *    Dealer Address Line#4 ?
           03  YN0020 PIC X(35).
      *    Dealer Postal Code
           03  YN0021 PIC X(9).
      *    Dealer Town
           03  YN0022 PIC X(35).
      *    Dealer Telephone Number
           03  YN0023 PIC X(14).
      *    Dealer Fax Number
           03  YN0024 PIC X(14).
      *    Dealer Country Identifier
           03  YN0025 PIC X(3).
      *    Network/Non Network Ind
           03  YN0026 PIC X(1).
      *    Dealer Number (Numeric)
           03  YN0027 PIC S9(5).
      *    Lead Dealer Number
           03  YN0028 PIC X(4).
      *    Lead Dealer Number Suffix
           03  YN0029 PIC X(2).
      *    Lead Dealer Nbr (Numeric)
           03  YN0030 PIC S9(5).
      *    Lead Country Identifier
           03  YN0031 PIC X(3).
      *    Dealer AFRL/V55 flag
           03  YN0032 PIC X(1).
      *    Dealer Spare Flag 2
           03  YN0033 PIC X(1).
      *    Dealer Spare Flag 3
           03  YN0034 PIC X(1).
      *    Dealer Spare Code 1
           03  YN0035 PIC X(2).
      *    Dealer Spare Code 2
           03  YN0036 PIC X(2).
      *    Dealer Percentage 1
           03  YN0037 PIC S9(4)V9(3) COMP-3.
      *    Dealer Percentage 2
           03  YN0038 PIC S9(4)V9(3) COMP-3.
      *    Dealer Percentage 3
           03  YN0039 PIC S9(4)V9(3) COMP-3.
      *    Dealer Percentage 4
           03  YN0040 PIC S9(4)V9(3) COMP-3.
      *    Date Last Changed D8#
           03  YL0008 PIC S9(8) COMP-3.
       01  IXDIN.
      /EJECT
      *    Internal date
           03  XDINDTS.
           05  XDINYY PIC S9(3).
           05  XDINMM PIC S9(2).
           05  XDINDD PIC S9(2).
           03  XDINDT REDEFINES XDINDTS PIC S9(7).
           03  XDINDTZ REDEFINES XDINDTS.
           05  XDINDI PIC X(1).
           05  XDIND6 PIC X(6).
       01  IXD1T.
      /EJECT
      *    Internal date
           03  XDINT1S.
           05  XDINY1 PIC S9(3).
           05  XDINM1 PIC S9(2).
           05  XDIND1 PIC S9(2).
           03  XDINT1 REDEFINES XDINT1S PIC S9(7).
       01  IXD2T.
      /EJECT
      *    Internal date
           03  XDINT2S.
           05  XDINY2 PIC S9(3).
           05  XDINM2 PIC S9(2).
           05  XDIND2 PIC S9(2).
           03  XDINT2 REDEFINES XDINT2S PIC S9(7).
       01  IXDIM.
      /EJECT
      *    Duration mask
           03  XDIMDTS.
           05  XDIMYY PIC S9(3).
           05  XDIMMM PIC S9(2).
           05  XDIMDD PIC S9(2).
           03  XDIMDT REDEFINES XDIMDTS PIC S9(7).
      *
      *    Indicators
       01  INDICS.
           03  IND PIC 1(1) OCCURS 99 INDICATOR 1.
           88  C-INDICATOR-ON VALUE B'1'.
           88  C-INDICATOR-OFF VALUE B'0'.
      *
      /EJECT
      ***************************************************************
       LINKAGE SECTION.
      *    Return code
       01  P0RTN PIC X(7).
      ***************************************************************
       PROCEDURE DIVISION USING
             P0RTN
           .
      ***************************************************************
           CONTINUE.
       MAINLINE SECTION.
      *    Initialize
           PERFORM ZZINIT
      *
      *    Prc REA Extracts
      *    Utl @Copyright
      *    ------------------------------------------------------------
      *    COPYRIGHT
      *    (C) COPYRIGHT Renault UK Ltd. 2018
      *    Reproduction not allowed without prior permission
      *    ------------------------------------------------------------
      *    Maintenance:-
      *    CASE: *OTHERWISE
      *    -------------------------------------------------------------
      *    Function Changed on: 19/07/2007
      *    Changed by         : Wendel Heron
      *    Project/Incident   :
      *    Description        : Order figues were selecting only
      *      Allocated
      *    Changed to include all
      *    Function Changed on: 16/04/2008
      *    Changed by         : L Fung
      *    Project/Incident   :
      *    Description        : Owning Account in RRG extracts store
      *      either
      *    Main or Retail dealers
      *    Function Changed on: 01/03/13
      *    Changed by         : C Kelly
      *    Project/Incident   : DACIA
      *    Description        : For Dacia check Lead Dlr to see if
      *      Branch
      *    Function Changed on: 10/12/2013
      *    Changed by         : Maurice Mead
      *    Project/Incident   : RN-CHG-664425
      *    Description        : Cleaned up some of the codeing.
      *    Function Changed on: 16/04/2015
      *    Changed by         : Catherine Kelly
      *    Project/Incident   : RN-CHG-730808
      *    Description        : Added RRG Pipeline Stock extract REA09
      *    Function Changed on: 23/08/2018
      *    Changed by         : Alex Wong
      *    Project/Incident   : Alpine
      *    Description        : Change to Add Alpine to REA Extracts
      *    -------------------------------------------------------------
      *    Determine Start & End dates of current year
      *    CASE: *OTHERWISE
      *    ** N.B. Reg Dates can be in the future
      *    LCL.U:Year YYYY = JOB.*Job date *YEAR
           ADD 1000000 TO ZZJDT OF JOB-CONTEXT GIVING XDINDT
           ADD 1800 TO XDINYY GIVING YL0001 OF WORK-CONTEXT
      *    U:Number (8.0)
           MULTIPLY YL0001 OF WORK-CONTEXT BY 10000 GIVING YL0002 OF
             WORK-CONTEXT
      *    Date range start
           ADD YL0002 OF WORK-CONTEXT, 0101 GIVING YL0003 OF
             WORK-CONTEXT
      *    Date range end
           ADD YL0002 OF WORK-CONTEXT, 1231 GIVING YL0004 OF
             WORK-CONTEXT
      *    Prc REA Extracts - Dealer  *
           PERFORM SA1RVGN
      *--------------------------------------------------------------
      *    Exit program
           CONTINUE.
       AAEXIT.
           MOVE SPACES TO P0RTN
           PERFORM ZYEXPG
      *==============================================================
      /EJECT
       SA1RVGN SECTION.
      *==============================================================
      *    Prc REA Extracts - Dealer  *
      *==============================================================
      *    Initialize return code
           MOVE SPACES TO W0RTN
      *    USER: Initialize routine
      *    Maintenance:-
      *    CASE: *OTHERWISE
      *    -------------------------------------------------------------
      *    08/10/2013  SEDRE Convergence     Maurice Mead
      *    Called programs moved to the files that they load, added
      *    RRG Outstanding Order extract (8).
      *    Also corrected a problem introduced with the Dacia change
      *    that was sending non-RRG dealers in the RRF feed.
      *    -------------------------------------------------------------
      *    23/08/2018  Alpine Dlr/Vehs       Alex Wong
      *    Change Program to Include Extract of Alpine Vehicles /
      *      Dealers
      *    -------------------------------------------------------------
      *    * Used as a positioner parameter for extract 8
      *    U:Valid for Order Date
           SUBTRACT 10000 FROM YL0003 OF WORK-CONTEXT GIVING YL0005 OF
             WORK-CONTEXT
      *    Initialise Full Externally Described Keylist
      *    Dealer Number
           MOVE LOW-VALUES TO ABDLRNBR OF EXTSA1
      *    Dealer Number Suffix
           MOVE LOW-VALUES TO ABDLRSFX OF EXTSA1
           MOVE CORRESPONDING
             EXTSA1 TO
             FABCPAX OF DIDLRDTAL2-R
           START DIDLRDTAL2 KEY NOT < EXTERNALLY-DESCRIBED-KEY
             FORMAT IS 'FABCPAX'
           END-START
           IF (C-IO-ERR) THEN
               STOP RUN
           END-IF
           SET C-INDICATOR-OFF(90) TO TRUE
           READ DIDLRDTAL2 NEXT
             FORMAT IS 'FABCPAX'
           END-READ
           IF (C-EOF) THEN
               SET C-INDICATOR-ON(90) TO TRUE
           ELSE
               IF (C-IO-ERR) THEN
                   STOP RUN
               END-IF
           END-IF
           IF (C-INDICATOR-ON(90)) THEN
      *        Data record not found
               MOVE 'USR0003' TO W0RTN
           END-IF
           PERFORM UNTIL NOT (C-INDICATOR-OFF(90))
      *        USER: Process Data record
               MOVE ZEROS TO YRSW03
               MOVE 'T' TO YRSW05
               IF (ABDLRNBR OF FABCPAX OF DIDLRDTAL2-R = SPACES AND
                   YRSW05 = 'T') THEN
                   ADD  1 TO ZEROS GIVING YRSW04
               ELSE
                   ADD  1 TO 00004 GIVING YRSW04
               END-IF
               MOVE 00004 TO YRSW02
               MOVE ABDLRNBR OF FABCPAX OF DIDLRDTAL2-R TO YRSW06
               PERFORM ZCATWK
               STRING YRSW06 DELIMITED BY X'FF',
                      ABDLRSFX OF FABCPAX OF DIDLRDTAL2-R DELIMITED BY
                 SIZE
               INTO   YRSW06
               MOVE YRSW06 TO YL0006 OF WORK-CONTEXT
      *        If Dacia/Alpine retrieve Network Type for Lead Dealer
      *          and store in LCL
      *        CASE:
      *        - c1 OR c2
      *        |- c1    : DB1.Dealer Network Type is Dacia dealer
      *        |- c2    : DB1.Dealer Network Type is Alpine dealer
      *        '-
      *        *IF
               IF (ABDLRNET OF FABCPAX OF DIDLRDTAL2-R = 'D' OR
                   ABDLRNET OF FABCPAX OF DIDLRDTAL2-R = '7') THEN
      *            Prc RTV all dealer dtls - Dealer  *
      *            Clear array PARC
                   INITIALIZE PARC
      *            Dealer Number
                   MOVE ABLEADNUM OF FABCPAX OF DIDLRDTAL2-R TO PADLRNBR
      *            Dealer Number Suffix
                   MOVE ABLEADSFX OF FABCPAX OF DIDLRDTAL2-R TO PADLRSFX
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
      *
                   CALL 'DITPRCRTVS' USING
      *            Return code
                     W0RTN
      *            RCD : Dealer
                     PARC
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Dealer Network Type
                   MOVE PADLRNET TO YL0007 OF WORK-CONTEXT
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'DITPRCRTVS' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
               END-IF
      *        Dealer Network Type is Branch (Renault Retail Group)
      *        CASE:
      *        - (c1 AND NOTc2) OR (c3 AND (c4 OR c5))
      *        |- c1    : DB1.Dealer Network Type is Branch
      *        |- c2    : DB1.Dealer Number is Autoworld
      *        |- c3    : LCL.Dealer Network Type is Branch
      *        |- c4    : DB1.Dealer Network Type is Dacia dealer
      *        |- c5    : DB1.Dealer Network Type is Alpine dealer
      *        '-
      *        *IF
               IF ((ABDLRNET OF FABCPAX OF DIDLRDTAL2-R = 'B' AND
                    NOT (ABDLRNBR OF FABCPAX OF DIDLRDTAL2-R = '0269'))
                 OR
                   (YL0007 OF WORK-CONTEXT = 'B' AND
                   (ABDLRNET OF FABCPAX OF DIDLRDTAL2-R = 'D' OR
                   ABDLRNET OF FABCPAX OF DIDLRDTAL2-R = '7'))) THEN
      *            * Extract Type 2 (RRG Actual Registrations)
      *            REA Extract (2) - REA RRG Actual Regs  *
      *            Clear array PBRC
                   INITIALIZE PBRC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PBOWNACC
      *            Registration Date 58
                   ADD YL0003 OF WORK-CONTEXT TO PBREGDT58
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0004 OF WORK-CONTEXT TO WQ0001
      *
                   CALL 'AGR000120S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order Allocation
                     PBRC
      *            Date range end
                     WQ0001
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000120S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            * Extract Type 3 (RRG Cancelled Orders)
      *            REA Extract (3) - REA RRG Cancelled Orders  *
      *            Clear array PCRC
                   INITIALIZE PCRC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PCOWNACC
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0003 OF WORK-CONTEXT TO WQ0002
                   MOVE YL0004 OF WORK-CONTEXT TO WQ0003
      *
                   CALL 'AGR000130S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order
                     PCRC
      *            Date range start
                     WQ0002
      *            Date range end
                     WQ0003
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000130S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            * Extract Type 4 (RRG Received Orders)
      *            REA Extract (4) - REA RRG Received Orders  *
      *            Clear array PDRC
                   INITIALIZE PDRC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PDOWNACC
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0003 OF WORK-CONTEXT TO WQ0004
                   MOVE YL0004 OF WORK-CONTEXT TO WQ0005
      *
                   CALL 'AGR000140S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order
                     PDRC
      *            Date range start
                     WQ0004
      *            Date range end
                     WQ0005
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000140S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            * Extract Type 8 (RRG Outstanding Orders)
      *            REA Extract (8) - REA RRG Outstanding ord.  *
      *            Clear array PERC
                   INITIALIZE PERC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PEOWNACC
      *            Customer Order Date #
                   ADD YL0005 OF WORK-CONTEXT TO PECUSORDD8
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
      *
                   CALL 'AGR000180S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order
                     PERC
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000180S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            * Extract Type 9 (RRG Pipeline Stock) AND Extract
      *              10 (RRG All Stock)
      *            LCL.Date Last Changed D8# = JOB.*Job date + CON.-2
      *              *YEARS
                   ADD 1000000 TO ZZJDT OF JOB-CONTEXT GIVING XDINDT
                   MOVE -2 TO XDURR
                   PERFORM XDAYR
                   IF (XDINDT < 010101 OR
                       XDINDT > 4000000) THEN
                       MOVE ZEROS TO YL0008 OF WORK-CONTEXT
                   ELSE
                       ADD 18000000 TO XDINDT GIVING YL0008 OF
                         WORK-CONTEXT
                   END-IF
      *            Extracts all VINs for dealer a/c where changed as
      *              above
      *            Ext REA Pipeline VIN ext - #Foreign model access  *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE SPACES TO WQ0006
                   MOVE YL0008 OF WORK-CONTEXT TO WQ0007
                   MOVE YL0006 OF WORK-CONTEXT TO WQ0008
      *
                   CALL 'AGR000190S' USING
      *            *Return code
                     WQ0006
      *            Date Last Changed D8#
                     WQ0007
      *            Owning Account
                     WQ0008
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
                   MOVE WQ0006 TO W0RTN
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000190S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            Runs over extracted VINs. Further filtering +
      *              additional fields
      *            Ext Crt RRG All Stock - REA RRG All Stock (REA10)  *
                   SET C-INDICATOR-OFF(90) TO TRUE
      *
                   CALL 'AGR001200S' USING
      *            Return code
                     W0RTN
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR001200S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
               END-IF
      *        Dealer Network Class is 'Network'
      *        CASE: DB1.Network/Non Network Ind is Network
      *        *IF
               IF (ABNETIND OF FABCPAX OF DIDLRDTAL2-R = 'N') THEN
      *            * Extract Type 5 (RUK Actual Registrations)
      *            REA Extract (5) - REA RUK Actual Regs  *
      *            Clear array PFRC
                   INITIALIZE PFRC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PFOWNACC
      *            Registration Date 58
                   ADD YL0003 OF WORK-CONTEXT TO PFREGDT58
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0004 OF WORK-CONTEXT TO WQ0009
      *
                   CALL 'AGR000150S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order Allocation
                     PFRC
      *            Date range end
                     WQ0009
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000150S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            * Extract Type 6 (RUK Cancelled Orders)
      *            REA Extract (6) - REA RUK Cancelled Orders  *
      *            Clear array PGRC
                   INITIALIZE PGRC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PGOWNACC
      *            Order Cancelled Date
                   ADD YL0003 OF WORK-CONTEXT TO PGORDCANDT
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0004 OF WORK-CONTEXT TO WQ0010
      *
                   CALL 'AGR000160S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order
                     PGRC
      *            Date range end
                     WQ0010
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000160S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
      *            * Extract Type 7 (RUK Received Orders)
      *            REA Extract (7) - REA RUK Received Orders  *
      *            Clear array PHRC
                   INITIALIZE PHRC
      *            Owning Account
                   MOVE YL0006 OF WORK-CONTEXT TO PHOWNACC
      *
                   SET C-INDICATOR-OFF(90) TO TRUE
                   MOVE YL0003 OF WORK-CONTEXT TO WQ0011
                   MOVE YL0004 OF WORK-CONTEXT TO WQ0012
      *
                   CALL 'AGR000170S' USING
      *            Return code
                     W0RTN
      *            KEY : Customer Order
                     PHRC
      *            Date range start
                     WQ0011
      *            Date range end
                     WQ0012
                            ON OVERFLOW
                            SET C-INDICATOR-ON(90) TO TRUE
                   END-CALL
      *
      *
      *            Error on program call will terminate run unit
                   IF (C-INDICATOR-ON(90)) THEN
                       MOVE 'Y2U0032' TO W0RTN
                       MOVE 'AGR000170S' TO W0CLPG
      *                Send message '*Error occured on CALL...'
      *                Message ID
                       MOVE 'Y2U0032' TO ZAMSID
      *                Message file
                       MOVE 'Y2USRMSG' TO ZAMSGF
      *                Message data
                       MOVE W0CLPG TO ZAMSDA
                       PERFORM ZASNMS
                   END-IF
      *            Error detected?
                   IF (W0RTN        NOT = SPACES) THEN
                       SET C-INDICATOR-ON(99) TO TRUE
                   END-IF
               END-IF
               SET C-INDICATOR-OFF(90) TO TRUE
               READ DIDLRDTAL2 NEXT
                 FORMAT IS 'FABCPAX'
               END-READ
               IF (C-EOF) THEN
                   SET C-INDICATOR-ON(90) TO TRUE
               ELSE
                   IF (C-IO-ERR) THEN
                       STOP RUN
                   END-IF
               END-IF
           END-PERFORM
      *==============================================================
           CONTINUE.
       SA1EXIT.
           EXIT.
      /EJECT
       XDAG1  SECTION.
      *==============================================================
      *    Prepare parameters to calculate Date Increment
      *==============================================================
           IF (XDURR < 0) THEN
      *        Negative date increment
               MOVE -1 TO XDWK2
           ELSE
      *        Positive date increment
               MOVE 1 TO XDWK2
           END-IF
           MULTIPLY XDWK2 BY XDURR
      *    Refresh the length of updated month (returned in XDWK1).
           MOVE XDINDT TO XDINT2
           PERFORM XDMNH
           IF (XDINDD = XDWK1) THEN
      *        Save the start day
               MOVE 0 TO XDINDD
           END-IF
           MOVE 0 TO XDINT2
           MOVE 0 TO XDIMDT
           MOVE SPACES TO W0RTN
      *==============================================================
           CONTINUE.
       XDAG1E.
           EXIT.
      /EJECT
       XDAG2  SECTION.
      *==============================================================
      *    General calculations driven by Increment Mask
      *==============================================================
      *    Extract days
           IF (XDIMDD = 1) THEN
               DIVIDE XDURR BY 100 GIVING XDURR REMAINDER XDIND2
           END-IF
      *    Extract months
           IF (XDIMMM = 1) THEN
               DIVIDE XDURR BY 100 GIVING XDURR REMAINDER XDINM2
           END-IF
      *    Extract years
           IF (XDIMYY = 1) THEN
               DIVIDE XDURR BY 1000 GIVING XDURR REMAINDER XDINY2
           END-IF
           IF (XDURR NOT = 0) THEN
               MOVE 'Y2U0006' TO W0RTN
           END-IF
      *    Normalize month increment
           DIVIDE XDINM2 BY 12 GIVING XDURR REMAINDER XDINM2
           ADD XDURR TO XDINY2
      *    Apply year increment
           MULTIPLY XDWK2 BY XDINY2
           ADD XDINYY TO XDINY2
      *    Apply month increment
           MULTIPLY XDWK2 BY XDINM2
           ADD XDINMM TO XDINM2
      *    Normalize updated month
           PERFORM XDNZM
           IF (XDINDD > XDWK1 OR
               XDINDD = 0) THEN
      *        Restore the start day
               MOVE  XDWK1 TO XDINDD
           END-IF
      *    Apply day increment
           MULTIPLY XDWK2 BY XDIND2
           ADD XDINDD TO XDIND2 GIVING XDURR
           MOVE  0 TO XDIND2
      *    Normalize day increment
           PERFORM UNTIL NOT (XDIND2 = 0)
               IF (XDURR = 0) THEN
                   ADD XDWK2 TO XDINM2
      *            Normalize updated month
                   PERFORM XDNZM
                   MOVE XDWK1 TO XDURR
               END-IF
               IF (XDURR < 0) THEN
                   SUBTRACT 1 FROM XDINM2
      *            Normalize updated month
                   PERFORM XDNZM
                   ADD XDWK1 TO XDURR
               ELSE
                   IF (XDURR > XDWK1) THEN
                       SUBTRACT XDWK1 FROM XDURR
                       ADD 1 TO XDINM2
      *                Normalize updated month
                       PERFORM XDNZM
                   ELSE
                       MOVE XDURR TO XDIND2
                   END-IF
               END-IF
           END-PERFORM
      *    Check updated year
           IF (XDINY2 NOT < 400 OR
               XDINY2 NOT > 0) THEN
               MOVE 'Y2U0006' TO W0RTN
           END-IF
           IF (W0RTN = 'Y2U0006') THEN
               MOVE  0 TO XDINDT
           ELSE
               MOVE XDINT2 TO XDINDT
           END-IF
      *==============================================================
           CONTINUE.
       XDAG2E.
           EXIT.
      /EJECT
       XDAYR  SECTION.
      *==============================================================
      *    Calculate duration, *YEARS
      *==============================================================
      *    Check and adjust End Of Month dates, if any.
           PERFORM XDAG1
      *    Define increment Mask.
           MOVE 1 TO XDIMYY
      *    Initiate general DATE INCREMENT calculations.
           PERFORM XDAG2
      *==============================================================
           CONTINUE.
       XDAYRE.
           EXIT.
      /EJECT
       XDMNH  SECTION.
      *==============================================================
      *    Find length(XDWK1) in days for the month passed in XDIN2TS
      *==============================================================
           IF (XDINM2 = 4 OR
               XDINM2 = 6 OR
               XDINM2 = 9 OR
               XDINM2 = 11) THEN
               MOVE 30 TO XDWK1
           ELSE
               MOVE 31 TO XDWK1
           END-IF
           IF (XDINM2 = 2) THEN
      *        Determine February length
               IF (XDINY2 = 300 OR
                   XDINY2 = 100) THEN
                   MOVE 28 TO XDWK1
               ELSE
                   DIVIDE XDINY2 BY 4 GIVING XDWK4 REMAINDER XDWK1
                   IF (XDWK1 = 0) THEN
                       MOVE 29 TO XDWK1
                   ELSE
                       MOVE 28 TO XDWK1
                   END-IF
               END-IF
           END-IF
      *==============================================================
           CONTINUE.
       XDMNHE.
           EXIT.
      /EJECT
       XDNZM  SECTION.
      *==============================================================
      *    Normalize days
      *==============================================================
           IF (XDINM2 < 1) THEN
               ADD 12 TO XDINM2
               SUBTRACT 1 FROM XDINY2
           END-IF
           IF (XDINM2 > 12) THEN
               SUBTRACT 12 FROM XDINM2
               ADD 1 TO XDINY2
           END-IF
      *    Refresh the length of updated month (returned in XDWK1).
           PERFORM XDMNH
      *==============================================================
           CONTINUE.
       XDNZME.
           EXIT.
      /EJECT
       ZASNMS SECTION.
      *==============================================================
      *    Send message to program's message queue
      *==============================================================
      *    Send if first error message or not an error message
           IF (ZAMSTP NOT = SPACES OR
               ZAFSMS NOT = 'N') THEN
               IF (ZAMSTP = SPACES) THEN
      *            Signal first error message sent
                   MOVE 'N' TO ZAFSMS
               END-IF
               IF (ZAPGMQ = SPACES) THEN
                   MOVE ZZPGM OF JOB-CONTEXT TO ZAPGMQ
               END-IF
               CALL 'Y2SNMGC' USING
      *        Program queue
                 ZAPGMQ
      *        Relative queue
                 ZAPGRL
      *        Message ID
                 ZAMSID
      *        Message file
                 ZAMSGF
      *        Message data
                 ZAMSDA
      *        Message type
                 ZAMSTP
               END-CALL
           END-IF
      *    Clear all fields for default mechanism next time
      *    Program queue
           MOVE SPACES TO ZAPGMQ
      *    Relative queue
           MOVE SPACES TO ZAPGRL
      *    Message ID
           MOVE SPACES TO ZAMSID
      *    Message file
           MOVE SPACES TO ZAMSGF
      *    Message data
           MOVE SPACES TO ZAMSDA
      *    Message type
           MOVE SPACES TO ZAMSTP
      *==============================================================
           CONTINUE.
       ZAEXIT.
           EXIT.
      /EJECT
       ZCATWK SECTION.
      *==============================================================
      *    Process *CONCAT request
      *==============================================================
           MOVE YRSW04 TO YRSW00
           MOVE ZEROS TO YRSW01
           IF (YRSW05 = SPACES) THEN
               ADD YRSW02 TO YRSW01
               ADD YRSW03 TO YRSW01
               ADD  1 TO YRSW01
               IF (YRSW01 < YRSW04) THEN
                   MOVE X'FF' TO YRSW06X(YRSW01)
               ELSE
                   MOVE X'FF' TO YRSW06X(YRSW04)
               END-IF
           END-IF
           IF (YRSW05 = 'T') THEN
               PERFORM UNTIL NOT (YRSW01 = 0)
                   SUBTRACT 1 FROM YRSW00
                   IF (YRSW00 = 0) THEN
                       MOVE X'FF' TO YRSW06X(YRSW04)
                       ADD  1  TO YRSW01
                   ELSE
                       IF (YRSW06X(YRSW00) NOT = SPACES) THEN
                           MOVE YRSW00 TO YRSW01
                           ADD   1 TO YRSW01
                           ADD  YRSW03 TO YRSW01
                           MOVE X'FF' TO YRSW06X(YRSW01)
                       END-IF
                   END-IF
               END-PERFORM
           END-IF
      *==============================================================
           CONTINUE.
       ZCEXIT.
           EXIT.
      /EJECT
       ZXEXPG SECTION.
      *==============================================================
      *    Exit program: Normal
      *==============================================================
           PERFORM ZYEXPG
      *==============================================================
           CONTINUE.
       ZXEXIT.
           EXIT.
      /EJECT
       ZYEXPG SECTION.
      *==============================================================
      *    Exit program: Direct
      *==============================================================
           CLOSE DIDLRDTAL2
      *    Reset entry parameters as appropriate
           PERFORM ZZEXPM.
      *    Exit program
           CONTINUE.
       ZYEXPG-EXIT.
           GOBACK.
      *==============================================================
           CONTINUE.
       ZYEXIT.
           EXIT.
      /EJECT
       ZZEXPM SECTION.
      *==============================================================
      *    Return parameters from work fields
      *==============================================================
      *==============================================================
           CONTINUE.
       ZZPEXT.
           EXIT.
      /EJECT
       ZZINIT SECTION.
      *==============================================================
      *    Initialisation
      *==============================================================
           IF (W0ICL = SPACES) THEN
      *        *Initial call
               MOVE 'Y' TO W0ICL
           ELSE
               MOVE 'N' TO W0ICL
           END-IF
           MOVE SPACES TO P0RTN
           MOVE SPACES TO W0RTN
           MOVE ZEROS  TO W0RTW
           MOVE SPACES TO W0RSF
           MOVE '400' TO W0ENV
           MOVE ALL B'0' TO INDICS
           MOVE SPACES TO ZZPGM OF JOB-CONTEXT
      *    Retrieve job attributes
           CALL 'Y2RTJCR' USING
             JOB-CONTEXT
           END-CALL
      *    Setup job date/time
           MOVE ZZSD7 OF JOB-CONTEXT TO ZZJDT
           ACCEPT ZZTIME FROM TIME
           MOVE ZZHNS TO ZZJTM OF JOB-CONTEXT
           MOVE 'AGR000110S' TO ZZPGM OF JOB-CONTEXT
      *    Signal first error message outstanding
           MOVE 'Y' TO ZAFSMS
      *    Open files
           OPEN INPUT DIDLRDTAL2
           ACCEPT DIDLRDTAL2-OPEN FROM OPEN-FEEDBACK-AREA FOR DIDLRDTAL2
      *    Move main file information to JOB context
           MOVE CORRESPONDING OPENFA OF DIDLRDTAL2-OPEN TO JOB-CONTEXT
           CALL 'Y2QLVNR' USING
             ZZFFL OF JOB-CONTEXT
             ZZFLB OF JOB-CONTEXT
             ZZFQL OF JOB-CONTEXT
           END-CALL
           MOVE 'Y' TO W0OPN
           MOVE 'N' TO W0PMT
      *    Define local work field U:Year YYYY
           MOVE ZERO TO YL0001 OF WORK-CONTEXT
      *    Define local work field U:Number (8.0)
           MOVE ZERO TO YL0002 OF WORK-CONTEXT
      *    Define local work field Date range start
           MOVE ZERO TO YL0003 OF WORK-CONTEXT
      *    Define local work field Date range end
           MOVE ZERO TO YL0004 OF WORK-CONTEXT
      *    Define local work field U:Valid for Order Date
           MOVE ZERO TO YL0005 OF WORK-CONTEXT
      *    Define local work field Owning Account
           MOVE SPACES TO YL0006 OF WORK-CONTEXT
      *    Define local work field Name Number
           MOVE SPACES TO YN0001 OF WORK-CONTEXT
      *    Define local work field Address Number
           MOVE SPACES TO YN0002 OF WORK-CONTEXT
      *    Define local work field Dealer Network Type
           MOVE SPACES TO YL0007 OF WORK-CONTEXT
      *    Define local work field Dealer Region Code
           MOVE SPACES TO YN0003 OF WORK-CONTEXT
      *    Define local work field Dealer Zone Code
           MOVE SPACES TO YN0004 OF WORK-CONTEXT
      *    Define local work field Dealer Trading Name
           MOVE SPACES TO YN0005 OF WORK-CONTEXT
      *    Define local work field Dealer Known by Name
           MOVE SPACES TO YN0006 OF WORK-CONTEXT
      *    Define local work field Dealer short name
           MOVE SPACES TO YN0007 OF WORK-CONTEXT
      *    Define local work field Dealer Activity Start Dte
           MOVE ZERO TO YN0008 OF WORK-CONTEXT
      *    Define local work field Dealer Servicing End Date
           MOVE ZERO TO YN0009 OF WORK-CONTEXT
      *    Define local work field Dealer Cancel Final Date
           MOVE ZERO TO YN0010 OF WORK-CONTEXT
      *    Define local work field Dealer Set-Up Date
           MOVE ZERO TO YN0011 OF WORK-CONTEXT
      *    Define local work field Dealer Change Date
           MOVE ZERO TO YN0012 OF WORK-CONTEXT
      *    Define local work field Dealer Cancel Date
           MOVE ZERO TO YN0013 OF WORK-CONTEXT
      *    Define local work field Dealer Financial Status
           MOVE SPACES TO YN0014 OF WORK-CONTEXT
      *    Define local work field Dealer Record Status
           MOVE SPACES TO YN0015 OF WORK-CONTEXT
      *    Define local work field BIR Address Identifier
           MOVE SPACES TO YN0016 OF WORK-CONTEXT
      *    Define local work field Dealer Address Line#1
           MOVE SPACES TO YN0017 OF WORK-CONTEXT
      *    Define local work field Dealer Address Line#2
           MOVE SPACES TO YN0018 OF WORK-CONTEXT
      *    Define local work field Dealer Address Line#3
           MOVE SPACES TO YN0019 OF WORK-CONTEXT
      *    Define local work field Dealer Address Line#4 ?
           MOVE SPACES TO YN0020 OF WORK-CONTEXT
      *    Define local work field Dealer Postal Code
           MOVE SPACES TO YN0021 OF WORK-CONTEXT
      *    Define local work field Dealer Town
           MOVE SPACES TO YN0022 OF WORK-CONTEXT
      *    Define local work field Dealer Telephone Number
           MOVE SPACES TO YN0023 OF WORK-CONTEXT
      *    Define local work field Dealer Fax Number
           MOVE SPACES TO YN0024 OF WORK-CONTEXT
      *    Define local work field Dealer Country Identifier
           MOVE SPACES TO YN0025 OF WORK-CONTEXT
      *    Define local work field Network/Non Network Ind
           MOVE SPACES TO YN0026 OF WORK-CONTEXT
      *    Define local work field Dealer Number (Numeric)
           MOVE ZERO TO YN0027 OF WORK-CONTEXT
      *    Define local work field Lead Dealer Number
           MOVE SPACES TO YN0028 OF WORK-CONTEXT
      *    Define local work field Lead Dealer Number Suffix
           MOVE SPACES TO YN0029 OF WORK-CONTEXT
      *    Define local work field Lead Dealer Nbr (Numeric)
           MOVE ZERO TO YN0030 OF WORK-CONTEXT
      *    Define local work field Lead Country Identifier
           MOVE SPACES TO YN0031 OF WORK-CONTEXT
      *    Define local work field Dealer AFRL/V55 flag
           MOVE SPACES TO YN0032 OF WORK-CONTEXT
      *    Define local work field Dealer Spare Flag 2
           MOVE SPACES TO YN0033 OF WORK-CONTEXT
      *    Define local work field Dealer Spare Flag 3
           MOVE SPACES TO YN0034 OF WORK-CONTEXT
      *    Define local work field Dealer Spare Code 1
           MOVE SPACES TO YN0035 OF WORK-CONTEXT
      *    Define local work field Dealer Spare Code 2
           MOVE SPACES TO YN0036 OF WORK-CONTEXT
      *    Define local work field Dealer Percentage 1
           MOVE ZERO TO YN0037 OF WORK-CONTEXT
      *    Define local work field Dealer Percentage 2
           MOVE ZERO TO YN0038 OF WORK-CONTEXT
      *    Define local work field Dealer Percentage 3
           MOVE ZERO TO YN0039 OF WORK-CONTEXT
      *    Define local work field Dealer Percentage 4
           MOVE ZERO TO YN0040 OF WORK-CONTEXT
      *    Define local work field Date Last Changed D8#
           MOVE ZERO TO YL0008 OF WORK-CONTEXT
      *==============================================================
           CONTINUE.
       ZZEXIT.
           EXIT.
